

================================================================
== Vivado HLS Report for 'pattern_generator_cross'
================================================================
* Date:           Fri May 24 12:03:04 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        PATTERN_GENERATOR_CROSS_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     3.451|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  735423|  735423|  735423|  735423|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |             |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  735420|  735420|      1442|          -|          -|   510|    no    |
        | + Loop 1.1  |    1440|    1440|         2|          -|          -|   720|    no    |
        +-------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond5)
	5  / (exitcond5)
3 --> 
	4  / (!exitcond)
	2  / (exitcond)
4 --> 
	3  / true
5 --> 
	6  / true
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %outputStream_V), !map !10"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([24 x i8]* @pattern_generator_cr) nounwind"   --->   Operation 8 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pattern_generator.cpp:16]   --->   Operation 9 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %outputStream_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pattern_generator.cpp:17]   --->   Operation 10 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @lineX, i32 1, [1 x i8]* @p_str1) nounwind" [pattern_generator.cpp:25]   --->   Operation 11 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @dirX, i32 1, [1 x i8]* @p_str1) nounwind" [pattern_generator.cpp:26]   --->   Operation 12 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @lineY, i32 1, [1 x i8]* @p_str1) nounwind" [pattern_generator.cpp:27]   --->   Operation 13 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @dirY, i32 1, [1 x i8]* @p_str1) nounwind" [pattern_generator.cpp:28]   --->   Operation 14 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%lineX_load = load i32* @lineX, align 4" [pattern_generator.cpp:35]   --->   Operation 15 'load' 'lineX_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%lineY_load = load i32* @lineY, align 4" [pattern_generator.cpp:35]   --->   Operation 16 'load' 'lineY_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.76ns)   --->   "br label %.loopexit" [pattern_generator.cpp:30]   --->   Operation 17 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.47>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%y = phi i9 [ 0, %0 ], [ %y_1, %.loopexit.loopexit ]"   --->   Operation 18 'phi' 'y' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%y_cast2 = zext i9 %y to i32" [pattern_generator.cpp:30]   --->   Operation 19 'zext' 'y_cast2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.66ns)   --->   "%exitcond5 = icmp eq i9 %y, -2" [pattern_generator.cpp:30]   --->   Operation 20 'icmp' 'exitcond5' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 510, i64 510, i64 510)"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.82ns)   --->   "%y_1 = add i9 %y, 1" [pattern_generator.cpp:30]   --->   Operation 22 'add' 'y_1' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %exitcond5, label %6, label %.preheader.preheader" [pattern_generator.cpp:30]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.66ns)   --->   "%tmp_1 = icmp ult i9 %y, -32" [pattern_generator.cpp:33]   --->   Operation 24 'icmp' 'tmp_1' <Predicate = (!exitcond5)> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (2.47ns)   --->   "%tmp_8 = icmp eq i32 %y_cast2, %lineY_load" [pattern_generator.cpp:35]   --->   Operation 25 'icmp' 'tmp_8' <Predicate = (!exitcond5)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.76ns)   --->   "br label %.preheader" [pattern_generator.cpp:31]   --->   Operation 26 'br' <Predicate = (!exitcond5)> <Delay = 1.76>
ST_2 : Operation 27 [1/1] (2.47ns)   --->   "%tmp = icmp eq i32 %lineX_load, 0" [pattern_generator.cpp:44]   --->   Operation 27 'icmp' 'tmp' <Predicate = (exitcond5)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %tmp, label %7, label %8" [pattern_generator.cpp:44]   --->   Operation 28 'br' <Predicate = (exitcond5)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (2.47ns)   --->   "%tmp_2 = icmp eq i32 %lineX_load, 639" [pattern_generator.cpp:46]   --->   Operation 29 'icmp' 'tmp_2' <Predicate = (exitcond5 & !tmp)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %9, label %._crit_edge8" [pattern_generator.cpp:46]   --->   Operation 30 'br' <Predicate = (exitcond5 & !tmp)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.76ns)   --->   "store i1 true, i1* @dirX, align 1" [pattern_generator.cpp:47]   --->   Operation 31 'store' <Predicate = (exitcond5 & !tmp & tmp_2)> <Delay = 1.76>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "br label %._crit_edge8" [pattern_generator.cpp:47]   --->   Operation 32 'br' <Predicate = (exitcond5 & !tmp & tmp_2)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.76ns)   --->   "br label %10"   --->   Operation 33 'br' <Predicate = (exitcond5 & !tmp)> <Delay = 1.76>
ST_2 : Operation 34 [1/1] (1.76ns)   --->   "store i1 false, i1* @dirX, align 1" [pattern_generator.cpp:45]   --->   Operation 34 'store' <Predicate = (exitcond5 & tmp)> <Delay = 1.76>
ST_2 : Operation 35 [1/1] (1.76ns)   --->   "br label %10" [pattern_generator.cpp:45]   --->   Operation 35 'br' <Predicate = (exitcond5 & tmp)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 3.45>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%x = phi i10 [ %x_1, %._crit_edge ], [ 0, %.preheader.preheader ]"   --->   Operation 36 'phi' 'x' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%x_cast1 = zext i10 %x to i32" [pattern_generator.cpp:31]   --->   Operation 37 'zext' 'x_cast1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (1.77ns)   --->   "%exitcond = icmp eq i10 %x, -304" [pattern_generator.cpp:31]   --->   Operation 38 'icmp' 'exitcond' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 720, i64 720, i64 720)"   --->   Operation 39 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (1.73ns)   --->   "%x_1 = add i10 %x, 1" [pattern_generator.cpp:31]   --->   Operation 40 'add' 'x_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.loopexit.loopexit, label %1" [pattern_generator.cpp:31]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (1.77ns)   --->   "%tmp_4 = icmp ult i10 %x, -384" [pattern_generator.cpp:33]   --->   Operation 42 'icmp' 'tmp_4' <Predicate = (!exitcond)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.97ns)   --->   "%or_cond = and i1 %tmp_1, %tmp_4" [pattern_generator.cpp:33]   --->   Operation 43 'and' 'or_cond' <Predicate = (!exitcond)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %or_cond, label %2, label %._crit_edge" [pattern_generator.cpp:33]   --->   Operation 44 'br' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (2.47ns)   --->   "%tmp_7 = icmp eq i32 %x_cast1, %lineX_load" [pattern_generator.cpp:35]   --->   Operation 45 'icmp' 'tmp_7' <Predicate = (!exitcond & or_cond)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.97ns)   --->   "%or_cond7 = or i1 %tmp_7, %tmp_8" [pattern_generator.cpp:35]   --->   Operation 46 'or' 'or_cond7' <Predicate = (!exitcond & or_cond)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %or_cond7, label %3, label %4" [pattern_generator.cpp:35]   --->   Operation 47 'br' <Predicate = (!exitcond & or_cond)> <Delay = 0.00>
ST_3 : Operation 48 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outputStream_V, i8 62)" [pattern_generator.cpp:37]   --->   Operation 48 'write' <Predicate = (!exitcond & or_cond & !or_cond7)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 49 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outputStream_V, i8 -63)" [pattern_generator.cpp:36]   --->   Operation 49 'write' <Predicate = (!exitcond & or_cond & or_cond7)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 50 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 51 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outputStream_V, i8 62)" [pattern_generator.cpp:37]   --->   Operation 51 'write' <Predicate = (or_cond & !or_cond7)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "br label %5"   --->   Operation 52 'br' <Predicate = (or_cond & !or_cond7)> <Delay = 0.00>
ST_4 : Operation 53 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outputStream_V, i8 -63)" [pattern_generator.cpp:36]   --->   Operation 53 'write' <Predicate = (or_cond & or_cond7)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "br label %5" [pattern_generator.cpp:36]   --->   Operation 54 'br' <Predicate = (or_cond & or_cond7)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "br label %._crit_edge" [pattern_generator.cpp:38]   --->   Operation 55 'br' <Predicate = (or_cond)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "br label %.preheader" [pattern_generator.cpp:31]   --->   Operation 56 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 2> <Delay = 2.55>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_5 = phi i32 [ %lineX_load, %._crit_edge8 ], [ 0, %7 ]" [pattern_generator.cpp:35]   --->   Operation 57 'phi' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (2.47ns)   --->   "%tmp_6 = icmp eq i32 %lineY_load, 0" [pattern_generator.cpp:49]   --->   Operation 58 'icmp' 'tmp_6' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %tmp_6, label %11, label %12" [pattern_generator.cpp:49]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (2.47ns)   --->   "%tmp_9 = icmp eq i32 %lineY_load, 479" [pattern_generator.cpp:51]   --->   Operation 60 'icmp' 'tmp_9' <Predicate = (!tmp_6)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "br i1 %tmp_9, label %13, label %._crit_edge9" [pattern_generator.cpp:51]   --->   Operation 61 'br' <Predicate = (!tmp_6)> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (1.76ns)   --->   "store i1 true, i1* @dirY, align 1" [pattern_generator.cpp:52]   --->   Operation 62 'store' <Predicate = (!tmp_6 & tmp_9)> <Delay = 1.76>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "br label %._crit_edge9" [pattern_generator.cpp:52]   --->   Operation 63 'br' <Predicate = (!tmp_6 & tmp_9)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (1.76ns)   --->   "br label %14"   --->   Operation 64 'br' <Predicate = (!tmp_6)> <Delay = 1.76>
ST_5 : Operation 65 [1/1] (1.76ns)   --->   "store i1 false, i1* @dirY, align 1" [pattern_generator.cpp:50]   --->   Operation 65 'store' <Predicate = (tmp_6)> <Delay = 1.76>
ST_5 : Operation 66 [1/1] (1.76ns)   --->   "br label %14" [pattern_generator.cpp:50]   --->   Operation 66 'br' <Predicate = (tmp_6)> <Delay = 1.76>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%dirX_load = load i1* @dirX, align 1" [pattern_generator.cpp:58]   --->   Operation 67 'load' 'dirX_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node storemerge)   --->   "%storemerge_v_cast_ca = select i1 %dirX_load, i32 -1, i32 1" [pattern_generator.cpp:58]   --->   Operation 68 'select' 'storemerge_v_cast_ca' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (2.55ns) (out node of the LUT)   --->   "%storemerge = add i32 %tmp_5, %storemerge_v_cast_ca" [pattern_generator.cpp:58]   --->   Operation 69 'add' 'storemerge' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "store i32 %storemerge, i32* @lineX, align 4" [pattern_generator.cpp:59]   --->   Operation 70 'store' <Predicate = true> <Delay = 0.00>

State 6 <SV = 3> <Delay = 2.55>
ST_6 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node storemerge4)   --->   "%tmp_s = phi i32 [ %lineY_load, %._crit_edge9 ], [ 0, %11 ]" [pattern_generator.cpp:35]   --->   Operation 71 'phi' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%dirY_load = load i1* @dirY, align 1" [pattern_generator.cpp:62]   --->   Operation 72 'load' 'dirY_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node storemerge4)   --->   "%storemerge4_v_cast_c = select i1 %dirY_load, i32 -1, i32 1" [pattern_generator.cpp:62]   --->   Operation 73 'select' 'storemerge4_v_cast_c' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (2.55ns) (out node of the LUT)   --->   "%storemerge4 = add i32 %tmp_s, %storemerge4_v_cast_c" [pattern_generator.cpp:62]   --->   Operation 74 'add' 'storemerge4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "store i32 %storemerge4, i32* @lineY, align 4" [pattern_generator.cpp:63]   --->   Operation 75 'store' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "ret void" [pattern_generator.cpp:66]   --->   Operation 76 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('y') with incoming values : ('y', pattern_generator.cpp:30) [18]  (1.77 ns)

 <State 2>: 2.47ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', pattern_generator.cpp:30) [18]  (0 ns)
	'icmp' operation ('tmp_8', pattern_generator.cpp:35) [26]  (2.47 ns)

 <State 3>: 3.45ns
The critical path consists of the following:
	'phi' operation ('x') with incoming values : ('x', pattern_generator.cpp:31) [29]  (0 ns)
	'icmp' operation ('tmp_7', pattern_generator.cpp:35) [40]  (2.47 ns)
	'or' operation ('or_cond7', pattern_generator.cpp:35) [41]  (0.978 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 2.55ns
The critical path consists of the following:
	'phi' operation ('tmp_5', pattern_generator.cpp:35) with incoming values : ('lineX_load', pattern_generator.cpp:35) [70]  (0 ns)
	'add' operation ('storemerge', pattern_generator.cpp:58) [88]  (2.55 ns)

 <State 6>: 2.55ns
The critical path consists of the following:
	'phi' operation ('tmp_s', pattern_generator.cpp:35) with incoming values : ('lineY_load', pattern_generator.cpp:35) [85]  (0 ns)
	'add' operation ('storemerge4', pattern_generator.cpp:62) [92]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
