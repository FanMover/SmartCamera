

================================================================
== Vivado HLS Report for 'axis_to_ddr_writer'
================================================================
* Date:           Mon Jun  3 10:44:03 2019

* Version:        2018.1 (Build 2188600 on Wed Apr 04 19:04:02 MDT 2018)
* Project:        AXIS_TO_DDR_WRITER_AXILITE_prj
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------------+------+------+----------+-----------+-----------+------+----------+
        |                                    |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |              Loop Name             |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1                            |     ?|     ?|      4618|          -|          -|     ?|    no    |
        | + Loop 1.1                         |  4096|  4096|         2|          1|          1|  4096|    yes   |
        | + memcpy.base_ddr_addr.buffer.gep  |   513|   513|         3|          1|          1|   512|    yes   |
        +------------------------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 2
  Pipeline-0 : II = 1, D = 2, States = { 3 4 }
  Pipeline-1 : II = 1, D = 3, States = { 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp_1)
3 --> 
	5  / (exitcond_flatten)
	4  / (!exitcond_flatten)
4 --> 
	3  / true
5 --> 
	6  / true
6 --> 
	9  / (exitcond)
	7  / (!exitcond)
7 --> 
	8  / true
8 --> 
	6  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	2  / true

* FSM state operations: 

 <State 1> : 6.75ns
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %inputStream_V), !map !67"
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %base_ddr_addr), !map !71"
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %frame_index_V), !map !77"
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %frame_count), !map !81"
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %base_address), !map !85"
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %frame_buffer_dim), !map !91"
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %frame_buffer_offset), !map !95"
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %frame_buffer_number), !map !99"
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %update_intr), !map !103"
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @axis_to_ddr_writer_s) nounwind"
ST_1 : Operation 24 [1/1] (1.00ns)   --->   "%update_intr_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %update_intr)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 25 [1/1] (1.00ns)   --->   "%frame_buffer_number_s = call i8 @_ssdm_op_Read.s_axilite.i8(i8 %frame_buffer_number)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 26 [1/1] (1.00ns)   --->   "%frame_buffer_offset_s = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %frame_buffer_offset)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 27 [1/1] (1.00ns)   --->   "%frame_buffer_dim_rea = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %frame_buffer_dim)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 28 [1/1] (1.00ns)   --->   "%base_address_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %base_address)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%buffer = alloca [512 x i64], align 16" [axis_to_ddr_writer.cpp:46]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %base_address, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:8]
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:9]
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %update_intr, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:10]
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %frame_buffer_offset, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:11]
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %frame_buffer_dim, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:12]
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %frame_buffer_number, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:13]
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %base_ddr_addr, [6 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:23]
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %inputStream_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:24]
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %frame_count, [8 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:25]
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %frame_index_V, [8 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:26]
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([512 x i64]* %buffer, [1 x i8]* @p_str1, [12 x i8]* @p_str6, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [axis_to_ddr_writer.cpp:47]
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i8* @inner_index_V, i32 1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:52]
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%t_V = load i8* @inner_index_V, align 1" [axis_to_ddr_writer.cpp:58]
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.volatile.i8P(i8* %frame_index_V, i8 %t_V)" [axis_to_ddr_writer.cpp:58]
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_BUFFER_DIM_r, i32 0, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:61]
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%FRAME_OFFSET_load = load i32* @FRAME_OFFSET, align 4" [axis_to_ddr_writer.cpp:63]
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_OFFSET, i32 0, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:63]
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i8* @FRAME_BUFFER_NUMBER_r, i32 0, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:65]
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%BASE_ADDRESS_load = load i29* @BASE_ADDRESS_r, align 4"
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i29* @BASE_ADDRESS_r, i32 0, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:67]
ST_1 : Operation 50 [1/1] (0.65ns)   --->   "br i1 %update_intr_read, label %0, label %._crit_edge98" [axis_to_ddr_writer.cpp:72]
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "store i32 %frame_buffer_dim_rea, i32* @FRAME_BUFFER_DIM_r, align 4" [axis_to_ddr_writer.cpp:75]
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "store i8 %frame_buffer_number_s, i8* @FRAME_BUFFER_NUMBER_r, align 1" [axis_to_ddr_writer.cpp:76]
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "store i32 %frame_buffer_offset_s, i32* @FRAME_OFFSET, align 4" [axis_to_ddr_writer.cpp:77]
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_3_cast4 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %base_address_read, i32 3, i32 31)"
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "store i29 %tmp_3_cast4, i29* @BASE_ADDRESS_r, align 4" [axis_to_ddr_writer.cpp:78]
ST_1 : Operation 56 [1/1] (0.65ns)   --->   "br label %._crit_edge98" [axis_to_ddr_writer.cpp:79]
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%i_op_assign = phi i32 [ %frame_buffer_offset_s, %0 ], [ %FRAME_OFFSET_load, %codeRepl ]" [axis_to_ddr_writer.cpp:63]
ST_1 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node offset)   --->   "%i_op_assign_1 = phi i29 [ %tmp_3_cast4, %0 ], [ %BASE_ADDRESS_load, %codeRepl ]"
ST_1 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node offset)   --->   "%i_op_assign_1_cast = zext i29 %i_op_assign_1 to i32" [axis_to_ddr_writer.cpp:83]
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%lhs_V_cast = zext i8 %t_V to i35" [axis_to_ddr_writer.cpp:83]
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%rhs_V_cast = zext i32 %i_op_assign to i35" [axis_to_ddr_writer.cpp:83]
ST_1 : Operation 62 [1/1] (3.42ns)   --->   "%r_V = mul i35 %rhs_V_cast, %lhs_V_cast" [axis_to_ddr_writer.cpp:83]   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node offset)   --->   "%tmp_8 = call i32 @_ssdm_op_PartSelect.i32.i35.i32.i32(i35 %r_V, i32 3, i32 34)" [axis_to_ddr_writer.cpp:83]
ST_1 : Operation 64 [1/1] (1.01ns) (out node of the LUT)   --->   "%offset = add i32 %tmp_8, %i_op_assign_1_cast" [axis_to_ddr_writer.cpp:83]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.65ns)   --->   "br label %1" [axis_to_ddr_writer.cpp:90]

 <State 2> : 2.04ns
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%offset1 = phi i32 [ %offset, %._crit_edge98 ], [ %offset_1, %memcpy.tail ]"
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%idx = phi i32 [ 0, %._crit_edge98 ], [ %idx_1, %memcpy.tail ]"
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%FRAME_BUFFER_DIM_loa = load i32* @FRAME_BUFFER_DIM_r, align 4" [axis_to_ddr_writer.cpp:90]
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_s = call i20 @_ssdm_op_PartSelect.i20.i32.i32.i32(i32 %FRAME_BUFFER_DIM_loa, i32 12, i32 31)" [axis_to_ddr_writer.cpp:90]
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_3 = zext i20 %tmp_s to i32" [axis_to_ddr_writer.cpp:90]
ST_2 : Operation 71 [1/1] (0.99ns)   --->   "%tmp_1 = icmp ult i32 %idx, %tmp_3" [axis_to_ddr_writer.cpp:90]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (1.01ns)   --->   "%idx_1 = add nsw i32 %idx, 1" [axis_to_ddr_writer.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %.preheader.preheader, label %._crit_edge99" [axis_to_ddr_writer.cpp:90]
ST_2 : Operation 74 [1/1] (0.65ns)   --->   "br label %.preheader"
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%FRAME_BUFFER_NUMBER_s = load i8* @FRAME_BUFFER_NUMBER_r, align 1" [axis_to_ddr_writer.cpp:144]
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_2_cast = zext i8 %FRAME_BUFFER_NUMBER_s to i9" [axis_to_ddr_writer.cpp:144]
ST_2 : Operation 77 [1/1] (0.76ns)   --->   "%op2_assign = add i9 %tmp_2_cast, -1" [axis_to_ddr_writer.cpp:144]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_4_cast = zext i8 %t_V to i9" [axis_to_ddr_writer.cpp:144]
ST_2 : Operation 79 [1/1] (0.88ns)   --->   "%tmp_5 = icmp eq i9 %tmp_4_cast, %op2_assign" [axis_to_ddr_writer.cpp:144]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.76ns)   --->   "%tmp_7 = add i8 %t_V, 1" [axis_to_ddr_writer.cpp:146]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.39ns)   --->   "%p_tmp_7 = select i1 %tmp_5, i8 0, i8 %tmp_7" [axis_to_ddr_writer.cpp:144]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "store i8 %p_tmp_7, i8* @inner_index_V, align 1" [axis_to_ddr_writer.cpp:145]
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%frame_count_inner_lo = load i32* @frame_count_inner, align 4" [axis_to_ddr_writer.cpp:153]
ST_2 : Operation 84 [1/1] (1.01ns)   --->   "%tmp_2 = add nsw i32 %frame_count_inner_lo, 1" [axis_to_ddr_writer.cpp:153]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "store i32 %tmp_2, i32* @frame_count_inner, align 4" [axis_to_ddr_writer.cpp:153]
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i32P(i32* %frame_count, i32 %tmp_2)" [axis_to_ddr_writer.cpp:154]
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "ret void" [axis_to_ddr_writer.cpp:156]

 <State 3> : 1.29ns
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i13 [ %indvar_flatten_next, %ifFalse ], [ 0, %.preheader.preheader ]"
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%j = phi i10 [ %j_mid2, %ifFalse ], [ 0, %.preheader.preheader ]" [axis_to_ddr_writer.cpp:105]
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%temp = phi i64 [ %temp_2, %ifFalse ], [ 0, %.preheader.preheader ]"
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%i = phi i4 [ %i_1, %ifFalse ], [ 0, %.preheader.preheader ]"
ST_3 : Operation 92 [1/1] (1.00ns)   --->   "%exitcond_flatten = icmp eq i13 %indvar_flatten, -4096"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.82ns)   --->   "%indvar_flatten_next = add i13 %indvar_flatten, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %2, label %.preheader95"
ST_3 : Operation 95 [1/1] (0.78ns)   --->   "%j_s = add i10 %j, 1" [axis_to_ddr_writer.cpp:97]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (0.72ns)   --->   "%tmp_4 = icmp eq i4 %i, -8" [axis_to_ddr_writer.cpp:105]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.40ns)   --->   "%j_mid2 = select i1 %tmp_4, i10 %j_s, i10 %j" [axis_to_ddr_writer.cpp:105]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 98 [2/2] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %inputStream_V)" [axis_to_ddr_writer.cpp:123]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 99 [1/1] (0.79ns)   --->   "%i_op = add i4 %i, 1" [axis_to_ddr_writer.cpp:105]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (0.39ns)   --->   "%i_1 = select i1 %tmp_4, i4 1, i4 %i_op" [axis_to_ddr_writer.cpp:105]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

 <State 4> : 1.60ns
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)" [axis_to_ddr_writer.cpp:106]
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:122]
ST_4 : Operation 103 [1/2] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %inputStream_V)" [axis_to_ddr_writer.cpp:123]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_11 = call i56 @_ssdm_op_PartSelect.i56.i64.i32.i32(i64 %temp, i32 8, i32 63)" [axis_to_ddr_writer.cpp:128]
ST_4 : Operation 105 [1/1] (0.36ns)   --->   "%temp_1 = select i1 %tmp_4, i56 0, i56 %tmp_11" [axis_to_ddr_writer.cpp:105]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%temp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i8.i56(i8 %tmp, i56 %temp_1)" [axis_to_ddr_writer.cpp:129]
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_6)" [axis_to_ddr_writer.cpp:133]
ST_4 : Operation 108 [1/1] (0.72ns)   --->   "%ifzero = icmp eq i4 %i_1, -8" [axis_to_ddr_writer.cpp:105]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "br i1 %ifzero, label %ifTrue, label %ifFalse" [axis_to_ddr_writer.cpp:105]
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_10 = zext i10 %j_mid2 to i64" [axis_to_ddr_writer.cpp:134]
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%buffer_addr = getelementptr inbounds [512 x i64]* %buffer, i64 0, i64 %tmp_10" [axis_to_ddr_writer.cpp:134]
ST_4 : Operation 112 [1/1] (1.23ns)   --->   "store i64 %temp_2, i64* %buffer_addr, align 8" [axis_to_ddr_writer.cpp:134]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "br label %ifFalse"
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "br label %.preheader"

 <State 5> : 8.75ns
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_9 = sext i32 %offset1 to i64" [axis_to_ddr_writer.cpp:138]
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%base_ddr_addr_addr = getelementptr inbounds i64* %base_ddr_addr, i64 %tmp_9" [axis_to_ddr_writer.cpp:138]
ST_5 : Operation 117 [1/1] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [axis_to_ddr_writer.cpp:138]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 118 [1/1] (0.65ns)   --->   "br label %burst.wr.header"

 <State 6> : 1.24ns
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%indvar = phi i10 [ 0, %2 ], [ %indvar_next, %burst.wr.body ]"
ST_6 : Operation 120 [1/1] (0.91ns)   --->   "%exitcond = icmp eq i10 %indvar, -512"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)"
ST_6 : Operation 122 [1/1] (0.78ns)   --->   "%indvar_next = add i10 %indvar, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 123 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %memcpy.tail, label %burst.wr.body"
ST_6 : Operation 124 [1/1] (0.00ns)   --->   "%indvar1 = zext i10 %indvar to i64"
ST_6 : Operation 125 [1/1] (0.00ns)   --->   "%buffer_addr_1 = getelementptr [512 x i64]* %buffer, i64 0, i64 %indvar1" [axis_to_ddr_writer.cpp:138]
ST_6 : Operation 126 [2/2] (1.23ns)   --->   "%buffer_load = load i64* %buffer_addr_1, align 8" [axis_to_ddr_writer.cpp:138]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>

 <State 7> : 1.24ns
ST_7 : Operation 127 [1/2] (1.23ns)   --->   "%buffer_load = load i64* %buffer_addr_1, align 8" [axis_to_ddr_writer.cpp:138]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>

 <State 8> : 8.75ns
ST_8 : Operation 128 [1/1] (0.00ns)   --->   "%burstwrite_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region) nounwind"
ST_8 : Operation 129 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str8)"
ST_8 : Operation 130 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopName([32 x i8]* @memcpy_OC_base_ddr_a) nounwind"
ST_8 : Operation 131 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i64P(i64* %base_ddr_addr_addr, i64 %buffer_load, i8 -1)" [axis_to_ddr_writer.cpp:138]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 132 [1/1] (0.00ns)   --->   "%burstwrite_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region, i32 %burstwrite_rbegin) nounwind"
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "br label %burst.wr.header"

 <State 9> : 8.75ns
ST_9 : Operation 134 [5/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:138]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 135 [1/1] (1.01ns)   --->   "%offset_1 = add i32 %offset1, 512" [axis_to_ddr_writer.cpp:140]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 10> : 8.75ns
ST_10 : Operation 136 [4/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:138]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 11> : 8.75ns
ST_11 : Operation 137 [3/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:138]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 12> : 8.75ns
ST_12 : Operation 138 [2/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:138]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 13> : 8.75ns
ST_13 : Operation 139 [1/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:138]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 140 [1/1] (0.00ns)   --->   "br label %1" [axis_to_ddr_writer.cpp:90]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 6.75ns
The critical path consists of the following:
	s_axi read on port 'update_intr' [26]  (1 ns)
	multiplexor before 'phi' operation ('i_op', axis_to_ddr_writer.cpp:63) with incoming values : ('frame_buffer_offset') ('FRAME_OFFSET_load', axis_to_ddr_writer.cpp:63) [61]  (0.656 ns)
	'phi' operation ('i_op', axis_to_ddr_writer.cpp:63) with incoming values : ('frame_buffer_offset') ('FRAME_OFFSET_load', axis_to_ddr_writer.cpp:63) [61]  (0 ns)
	'mul' operation ('r.V', axis_to_ddr_writer.cpp:83) [66]  (3.42 ns)
	'add' operation ('offset', axis_to_ddr_writer.cpp:83) [68]  (1.02 ns)
	multiplexor before 'phi' operation ('offset') with incoming values : ('offset', axis_to_ddr_writer.cpp:83) ('offset', axis_to_ddr_writer.cpp:140) [71]  (0.656 ns)

 <State 2>: 2.04ns
The critical path consists of the following:
	'load' operation ('FRAME_BUFFER_NUMBER_s', axis_to_ddr_writer.cpp:144) on static variable 'FRAME_BUFFER_NUMBER_r' [137]  (0 ns)
	'add' operation ('op2', axis_to_ddr_writer.cpp:144) [139]  (0.765 ns)
	'icmp' operation ('tmp_5', axis_to_ddr_writer.cpp:144) [141]  (0.881 ns)
	'select' operation ('p_tmp_7', axis_to_ddr_writer.cpp:144) [143]  (0.393 ns)

 <State 3>: 1.29ns
The critical path consists of the following:
	'icmp' operation ('exitcond_flatten') [86]  (1.01 ns)
	blocking operation 0.287 ns on control path)

 <State 4>: 1.6ns
The critical path consists of the following:
	'select' operation ('temp', axis_to_ddr_writer.cpp:105) [97]  (0.365 ns)
	'store' operation (axis_to_ddr_writer.cpp:134) of variable 'temp', axis_to_ddr_writer.cpp:129 on array 'buffer', axis_to_ddr_writer.cpp:46 [107]  (1.24 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('base_ddr_addr_addr', axis_to_ddr_writer.cpp:138) [113]  (0 ns)
	bus request on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:138) [114]  (8.75 ns)

 <State 6>: 1.24ns
The critical path consists of the following:
	'phi' operation ('indvar') with incoming values : ('indvar_next') [117]  (0 ns)
	'getelementptr' operation ('buffer_addr_1', axis_to_ddr_writer.cpp:138) [127]  (0 ns)
	'load' operation ('buffer_load', axis_to_ddr_writer.cpp:138) on array 'buffer', axis_to_ddr_writer.cpp:46 [128]  (1.24 ns)

 <State 7>: 1.24ns
The critical path consists of the following:
	'load' operation ('buffer_load', axis_to_ddr_writer.cpp:138) on array 'buffer', axis_to_ddr_writer.cpp:46 [128]  (1.24 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus write on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:138) [129]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:138) [133]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:138) [133]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:138) [133]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:138) [133]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:138) [133]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
