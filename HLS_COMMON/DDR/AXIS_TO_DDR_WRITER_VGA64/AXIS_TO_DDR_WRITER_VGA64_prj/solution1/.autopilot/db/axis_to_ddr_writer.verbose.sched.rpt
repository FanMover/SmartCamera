

================================================================
== Vivado HLS Report for 'axis_to_ddr_writer'
================================================================
* Date:           Mon Jun  3 11:35:22 2019

* Version:        2018.1 (Build 2188600 on Wed Apr 04 19:04:02 MDT 2018)
* Project:        AXIS_TO_DDR_WRITER_VGA64_prj
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  346351|  346351|  346351|  346351|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                                    |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |              Loop Name             |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1                            |  346350|  346350|      4618|          -|          -|    75|    no    |
        | + Loop 1.1                         |    4096|    4096|         2|          1|          1|  4096|    yes   |
        | + memcpy.base_ddr_addr.buffer.gep  |     513|     513|         3|          1|          1|   512|    yes   |
        +------------------------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 2
  Pipeline-0 : II = 1, D = 2, States = { 3 4 }
  Pipeline-1 : II = 1, D = 3, States = { 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
3 --> 
	5  / (exitcond_flatten)
	4  / (!exitcond_flatten)
4 --> 
	3  / true
5 --> 
	6  / true
6 --> 
	9  / (exitcond1)
	7  / (!exitcond1)
7 --> 
	8  / true
8 --> 
	6  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	2  / true

* FSM state operations: 

 <State 1> : 3.25ns
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %inputStream_V), !map !56"
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %base_ddr_addr), !map !60"
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3* %frame_index_V), !map !66"
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %frame_count), !map !70"
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @axis_to_ddr_writer_s) nounwind"
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%buffer = alloca [512 x i64], align 16" [axis_to_ddr_writer.cpp:39]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %base_ddr_addr, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:16]
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %inputStream_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:17]
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %frame_count, [8 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:18]
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i3* %frame_index_V, [8 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:19]
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([512 x i64]* %buffer, [1 x i8]* @p_str1, [12 x i8]* @p_str5, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [axis_to_ddr_writer.cpp:40]
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i3* @inner_index_V, i32 1, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:45]
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%inner_index_V_load = load i3* @inner_index_V, align 1" [axis_to_ddr_writer.cpp:52]
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i3P(i3* %frame_index_V, i3 %inner_index_V_load)" [axis_to_ddr_writer.cpp:52]
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_cast = zext i3 %inner_index_V_load to i22" [axis_to_ddr_writer.cpp:55]
ST_1 : Operation 29 [1/1] (2.59ns)   --->   "%tmp_1 = mul i22 %tmp_cast, 307200" [axis_to_ddr_writer.cpp:55]   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%offset_cast = call i19 @_ssdm_op_PartSelect.i19.i22.i32.i32(i22 %tmp_1, i32 3, i32 21)" [axis_to_ddr_writer.cpp:55]
ST_1 : Operation 31 [1/1] (0.65ns)   --->   "br label %0" [axis_to_ddr_writer.cpp:63]

 <State 2> : 1.10ns
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%offset1 = phi i19 [ %offset_cast, %codeRepl ], [ %offset, %memcpy.tail ]"
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%idx = phi i7 [ 0, %codeRepl ], [ %idx_1, %memcpy.tail ]"
ST_2 : Operation 34 [1/1] (0.81ns)   --->   "%exitcond = icmp eq i7 %idx, -53" [axis_to_ddr_writer.cpp:63]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 75, i64 75, i64 75)"
ST_2 : Operation 36 [1/1] (0.77ns)   --->   "%idx_1 = add i7 %idx, 1" [axis_to_ddr_writer.cpp:63]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %._crit_edge59, label %.preheader.preheader" [axis_to_ddr_writer.cpp:63]
ST_2 : Operation 38 [1/1] (0.65ns)   --->   "br label %.preheader"
ST_2 : Operation 39 [1/1] (0.67ns)   --->   "%tmp_4 = add i3 %inner_index_V_load, 1" [axis_to_ddr_writer.cpp:124]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "store i3 %tmp_4, i3* @inner_index_V, align 1" [axis_to_ddr_writer.cpp:123]
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%frame_count_inner_lo = load i32* @frame_count_inner, align 4" [axis_to_ddr_writer.cpp:131]
ST_2 : Operation 42 [1/1] (1.01ns)   --->   "%tmp_6 = add nsw i32 %frame_count_inner_lo, 1" [axis_to_ddr_writer.cpp:131]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "store i32 %tmp_6, i32* @frame_count_inner, align 4" [axis_to_ddr_writer.cpp:131]
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i32P(i32* %frame_count, i32 %tmp_6)" [axis_to_ddr_writer.cpp:132]
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "ret void" [axis_to_ddr_writer.cpp:134]

 <State 3> : 1.01ns
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i13 [ %indvar_flatten_next, %.preheader57 ], [ 0, %.preheader.preheader ]"
ST_3 : Operation 47 [1/1] (1.00ns)   --->   "%exitcond_flatten = icmp eq i13 %indvar_flatten, -4096"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.82ns)   --->   "%indvar_flatten_next = add i13 %indvar_flatten, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %1, label %.preheader57"
ST_3 : Operation 50 [2/2] (0.00ns)   --->   "%tmp_0 = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %inputStream_V)" [axis_to_ddr_writer.cpp:98]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

 <State 4> : 0.00ns
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)" [axis_to_ddr_writer.cpp:79]
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [axis_to_ddr_writer.cpp:97]
ST_4 : Operation 53 [1/2] (0.00ns)   --->   "%tmp_0 = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %inputStream_V)" [axis_to_ddr_writer.cpp:98]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_3)" [axis_to_ddr_writer.cpp:111]
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "br label %.preheader" [axis_to_ddr_writer.cpp:78]

 <State 5> : 8.75ns
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_7 = zext i19 %offset1 to i64" [axis_to_ddr_writer.cpp:116]
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%base_ddr_addr_addr = getelementptr inbounds i64* %base_ddr_addr, i64 %tmp_7" [axis_to_ddr_writer.cpp:116]
ST_5 : Operation 58 [1/1] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [axis_to_ddr_writer.cpp:116]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 59 [1/1] (0.65ns)   --->   "br label %burst.wr.header"

 <State 6> : 1.24ns
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%indvar = phi i10 [ 0, %1 ], [ %indvar_next, %burst.wr.body ]"
ST_6 : Operation 61 [1/1] (0.91ns)   --->   "%exitcond1 = icmp eq i10 %indvar, -512"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)"
ST_6 : Operation 63 [1/1] (0.78ns)   --->   "%indvar_next = add i10 %indvar, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %memcpy.tail, label %burst.wr.body"
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%indvar1 = zext i10 %indvar to i64"
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%buffer_addr = getelementptr [512 x i64]* %buffer, i64 0, i64 %indvar1" [axis_to_ddr_writer.cpp:116]
ST_6 : Operation 67 [2/2] (1.23ns)   --->   "%buffer_load = load i64* %buffer_addr, align 8" [axis_to_ddr_writer.cpp:116]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>

 <State 7> : 1.24ns
ST_7 : Operation 68 [1/2] (1.23ns)   --->   "%buffer_load = load i64* %buffer_addr, align 8" [axis_to_ddr_writer.cpp:116]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>

 <State 8> : 8.75ns
ST_8 : Operation 69 [1/1] (0.00ns)   --->   "%burstwrite_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region) nounwind"
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str7)"
ST_8 : Operation 71 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopName([32 x i8]* @memcpy_OC_base_ddr_a) nounwind"
ST_8 : Operation 72 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i64P(i64* %base_ddr_addr_addr, i64 %buffer_load, i8 -1)" [axis_to_ddr_writer.cpp:116]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 73 [1/1] (0.00ns)   --->   "%burstwrite_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region, i32 %burstwrite_rbegin) nounwind"
ST_8 : Operation 74 [1/1] (0.00ns)   --->   "br label %burst.wr.header"

 <State 9> : 8.75ns
ST_9 : Operation 75 [5/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:116]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 76 [1/1] (0.88ns)   --->   "%offset = add i19 %offset1, 512" [axis_to_ddr_writer.cpp:118]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 10> : 8.75ns
ST_10 : Operation 77 [4/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:116]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 11> : 8.75ns
ST_11 : Operation 78 [3/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:116]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 12> : 8.75ns
ST_12 : Operation 79 [2/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:116]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 13> : 8.75ns
ST_13 : Operation 80 [1/5] (8.75ns)   --->   "%base_ddr_addr_addr_1_1 = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %base_ddr_addr_addr)" [axis_to_ddr_writer.cpp:116]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 81 [1/1] (0.00ns)   --->   "br label %0" [axis_to_ddr_writer.cpp:63]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.25ns
The critical path consists of the following:
	'load' operation ('inner_index_V_load', axis_to_ddr_writer.cpp:52) on static variable 'inner_index_V' [19]  (0 ns)
	'mul' operation ('tmp_1', axis_to_ddr_writer.cpp:55) [22]  (2.59 ns)
	multiplexor before 'phi' operation ('offset') with incoming values : ('offset_cast', axis_to_ddr_writer.cpp:55) ('offset', axis_to_ddr_writer.cpp:118) [26]  (0.656 ns)

 <State 2>: 1.1ns
The critical path consists of the following:
	'icmp' operation ('exitcond', axis_to_ddr_writer.cpp:63) [28]  (0.817 ns)
	blocking operation 0.287 ns on control path)

 <State 3>: 1.01ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [35]  (0 ns)
	'icmp' operation ('exitcond_flatten') [36]  (1.01 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('base_ddr_addr_addr', axis_to_ddr_writer.cpp:116) [47]  (0 ns)
	bus request on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:116) [48]  (8.75 ns)

 <State 6>: 1.24ns
The critical path consists of the following:
	'phi' operation ('indvar') with incoming values : ('indvar_next') [51]  (0 ns)
	'getelementptr' operation ('buffer_addr', axis_to_ddr_writer.cpp:116) [61]  (0 ns)
	'load' operation ('buffer_load', axis_to_ddr_writer.cpp:116) on array 'buffer', axis_to_ddr_writer.cpp:39 [62]  (1.24 ns)

 <State 7>: 1.24ns
The critical path consists of the following:
	'load' operation ('buffer_load', axis_to_ddr_writer.cpp:116) on array 'buffer', axis_to_ddr_writer.cpp:39 [62]  (1.24 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus write on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:116) [63]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:116) [67]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:116) [67]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:116) [67]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:116) [67]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'base_ddr_addr' (axis_to_ddr_writer.cpp:116) [67]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
