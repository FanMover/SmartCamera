

================================================================
== Vivado HLS Report for 'ddr_to_axis_reader'
================================================================
* Date:           Mon Jun  3 12:10:28 2019

* Version:        2018.1 (Build 2188600 on Wed Apr 04 19:04:02 MDT 2018)
* Project:        DDR_TO_AXIS_READER_VGA64_prj
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  346576|  346576|  346576|  346576|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                                |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |            Loop Name           |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1                        |  346575|  346575|      4621|          -|          -|    75|    no    |
        | + memcpy.buffer.base_ddr_addr  |     513|     513|         3|          1|          1|   512|    yes   |
        | + Loop 1.2                     |    4097|    4097|         3|          1|          1|  4096|    yes   |
        +--------------------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 2
  Pipeline-0 : II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1 : II = 1, D = 3, States = { 13 14 15 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	12  / (exitcond1)
	10  / (!exitcond1)
10 --> 
	11  / true
11 --> 
	9  / true
12 --> 
	13  / true
13 --> 
	16  / (tmp_7)
	14  / (!tmp_7)
14 --> 
	15  / true
15 --> 
	13  / true
16 --> 
	2  / true

* FSM state operations: 

 <State 1> : 3.92ns
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %outStream_V), !map !59"
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %base_ddr_addr), !map !63"
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3* %frame_index_V), !map !69"
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %frame_count), !map !73"
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %frame_count_equals), !map !77"
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @ddr_to_axis_reader_s) nounwind"
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%buffer = alloca [512 x i64], align 16" [ddr_to_axis_reader.cpp:18]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %frame_count_equals, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader.cpp:12]
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %frame_count, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader.cpp:13]
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %outStream_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader.cpp:14]
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %base_ddr_addr, [6 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 128, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader.cpp:15]
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i3* %frame_index_V, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader.cpp:16]
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([512 x i64]* %buffer, [1 x i8]* @p_str1, [12 x i8]* @p_str5, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [ddr_to_axis_reader.cpp:19]
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%inner_index_V = call i3 @_ssdm_op_Read.ap_none.i3P(i3* %frame_index_V)" [ddr_to_axis_reader.cpp:27]
ST_1 : Operation 31 [1/1] (0.67ns)   --->   "%inner_index_V_2 = add i3 %inner_index_V, -1" [ddr_to_axis_reader.cpp:34]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp = zext i3 %inner_index_V_2 to i32" [ddr_to_axis_reader.cpp:37]
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_cast3 = zext i3 %inner_index_V_2 to i22" [ddr_to_axis_reader.cpp:37]
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_cast = zext i3 %inner_index_V_2 to i4" [ddr_to_axis_reader.cpp:37]
ST_1 : Operation 35 [1/1] (2.59ns)   --->   "%tmp_1 = mul i22 %tmp_cast3, 307200" [ddr_to_axis_reader.cpp:37]   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%offset_cast = call i19 @_ssdm_op_PartSelect.i19.i22.i32.i32(i22 %tmp_1, i32 3, i32 21)" [ddr_to_axis_reader.cpp:37]
ST_1 : Operation 37 [1/1] (0.65ns)   --->   "br label %1" [ddr_to_axis_reader.cpp:38]

 <State 2> : 8.75ns
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%offset1 = phi i19 [ %offset_cast, %0 ], [ %offset, %4 ]"
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%i = phi i7 [ 0, %0 ], [ %i_1, %4 ]"
ST_2 : Operation 40 [1/1] (0.81ns)   --->   "%exitcond = icmp eq i7 %i, -53" [ddr_to_axis_reader.cpp:38]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 75, i64 75, i64 75)"
ST_2 : Operation 42 [1/1] (0.77ns)   --->   "%i_1 = add i7 %i, 1" [ddr_to_axis_reader.cpp:38]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %5, label %2" [ddr_to_axis_reader.cpp:38]
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_5 = zext i19 %offset1 to i64" [ddr_to_axis_reader.cpp:40]
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%base_ddr_addr_addr = getelementptr inbounds i64* %base_ddr_addr, i64 %tmp_5" [ddr_to_axis_reader.cpp:40]
ST_2 : Operation 46 [7/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader.cpp:40]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%frame_count_inner_lo = load i32* @frame_count_inner, align 4" [ddr_to_axis_reader.cpp:49]
ST_2 : Operation 48 [1/1] (1.01ns)   --->   "%tmp_3 = add nsw i32 1, %frame_count_inner_lo" [ddr_to_axis_reader.cpp:49]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "store i32 %tmp_3, i32* @frame_count_inner, align 4" [ddr_to_axis_reader.cpp:49]
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i32P(i32* %frame_count, i32 %tmp_3)" [ddr_to_axis_reader.cpp:50]
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%index_old_load = load i32* @index_old, align 4" [ddr_to_axis_reader.cpp:52]
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_2 = trunc i32 %index_old_load to i4" [ddr_to_axis_reader.cpp:52]
ST_2 : Operation 53 [1/1] (0.72ns)   --->   "%tmp_4 = icmp eq i4 %tmp_cast, %tmp_2" [ddr_to_axis_reader.cpp:52]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %6, label %._crit_edge" [ddr_to_axis_reader.cpp:52]
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%frame_count_equals_i_1 = load i32* @frame_count_equals_i, align 4" [ddr_to_axis_reader.cpp:54]
ST_2 : Operation 56 [1/1] (1.01ns)   --->   "%tmp_6 = add nsw i32 %frame_count_equals_i_1, 1" [ddr_to_axis_reader.cpp:54]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "store i32 %tmp_6, i32* @frame_count_equals_i, align 4" [ddr_to_axis_reader.cpp:54]
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i32P(i32* %frame_count_equals, i32 %tmp_6)" [ddr_to_axis_reader.cpp:55]
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "br label %._crit_edge" [ddr_to_axis_reader.cpp:56]
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "store i32 %tmp, i32* @index_old, align 4" [ddr_to_axis_reader.cpp:58]
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "ret void" [ddr_to_axis_reader.cpp:61]

 <State 3> : 8.75ns
ST_3 : Operation 62 [6/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader.cpp:40]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 4> : 8.75ns
ST_4 : Operation 63 [5/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader.cpp:40]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 5> : 8.75ns
ST_5 : Operation 64 [4/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader.cpp:40]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 6> : 8.75ns
ST_6 : Operation 65 [3/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader.cpp:40]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 7> : 8.75ns
ST_7 : Operation 66 [2/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader.cpp:40]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 8> : 8.75ns
ST_8 : Operation 67 [1/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader.cpp:40]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 68 [1/1] (0.65ns)   --->   "br label %burst.rd.header"

 <State 9> : 0.91ns
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%indvar = phi i10 [ 0, %2 ], [ %indvar_next, %burst.rd.body ]"
ST_9 : Operation 70 [1/1] (0.91ns)   --->   "%exitcond1 = icmp eq i10 %indvar, -512"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)"
ST_9 : Operation 72 [1/1] (0.78ns)   --->   "%indvar_next = add i10 %indvar, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %burst.rd.end.preheader, label %burst.rd.body"

 <State 10> : 8.75ns
ST_10 : Operation 74 [1/1] (8.75ns)   --->   "%base_ddr_addr_addr_r = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %base_ddr_addr_addr)" [ddr_to_axis_reader.cpp:40]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 11> : 1.24ns
ST_11 : Operation 75 [1/1] (0.00ns)   --->   "%burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_s) nounwind"
ST_11 : Operation 76 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str7)"
ST_11 : Operation 77 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopName([28 x i8]* @memcpy_OC_buffer_OC_s) nounwind"
ST_11 : Operation 78 [1/1] (0.00ns)   --->   "%indvar1 = zext i10 %indvar to i64"
ST_11 : Operation 79 [1/1] (0.00ns)   --->   "%buffer_addr = getelementptr [512 x i64]* %buffer, i64 0, i64 %indvar1" [ddr_to_axis_reader.cpp:40]
ST_11 : Operation 80 [1/1] (1.23ns)   --->   "store i64 %base_ddr_addr_addr_r, i64* %buffer_addr, align 8" [ddr_to_axis_reader.cpp:40]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_11 : Operation 81 [1/1] (0.00ns)   --->   "%burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_s, i32 %burstread_rbegin) nounwind"
ST_11 : Operation 82 [1/1] (0.00ns)   --->   "br label %burst.rd.header"

 <State 12> : 0.66ns
ST_12 : Operation 83 [1/1] (0.65ns)   --->   "br label %burst.rd.end" [ddr_to_axis_reader.cpp:41]

 <State 13> : 1.39ns
ST_13 : Operation 84 [1/1] (0.00ns)   --->   "%j = phi i13 [ %j_1, %3 ], [ 0, %burst.rd.end.preheader ]"
ST_13 : Operation 85 [1/1] (1.00ns)   --->   "%tmp_7 = icmp eq i13 %j, -4096" [ddr_to_axis_reader.cpp:41]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 86 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4096, i64 4096, i64 4096)"
ST_13 : Operation 87 [1/1] (0.82ns)   --->   "%j_1 = add i13 %j, 1" [ddr_to_axis_reader.cpp:41]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 88 [1/1] (0.00ns)   --->   "br i1 %tmp_7, label %4, label %3" [ddr_to_axis_reader.cpp:41]
ST_13 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_8 = trunc i13 %j to i3" [ddr_to_axis_reader.cpp:41]
ST_13 : Operation 90 [1/1] (0.00ns)   --->   "%gepindex_cast = call i9 @_ssdm_op_PartSelect.i9.i13.i32.i32(i13 %j, i32 3, i32 11)" [ddr_to_axis_reader.cpp:41]
ST_13 : Operation 91 [1/1] (0.00ns)   --->   "%gepindex2_cast = zext i9 %gepindex_cast to i64" [ddr_to_axis_reader.cpp:41]
ST_13 : Operation 92 [1/1] (0.00ns)   --->   "%buffer_addr_1 = getelementptr [512 x i64]* %buffer, i64 0, i64 %gepindex2_cast" [ddr_to_axis_reader.cpp:41]
ST_13 : Operation 93 [2/2] (1.23ns)   --->   "%buffer_load = load i64* %buffer_addr_1, align 8" [ddr_to_axis_reader.cpp:41]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>

 <State 14> : 3.51ns
ST_14 : Operation 94 [1/2] (1.23ns)   --->   "%buffer_load = load i64* %buffer_addr_1, align 8" [ddr_to_axis_reader.cpp:41]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_14 : Operation 95 [1/1] (0.00ns)   --->   "%start_pos = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_8, i3 0)" [ddr_to_axis_reader.cpp:41]
ST_14 : Operation 96 [1/1] (0.00ns)   --->   "%end_pos = or i6 %start_pos, 7" [ddr_to_axis_reader.cpp:41]
ST_14 : Operation 97 [1/1] (0.78ns)   --->   "%tmp_10 = icmp ugt i6 %start_pos, %end_pos" [ddr_to_axis_reader.cpp:41]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_11 = zext i6 %start_pos to i7" [ddr_to_axis_reader.cpp:41]
ST_14 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_12 = zext i6 %end_pos to i7" [ddr_to_axis_reader.cpp:41]
ST_14 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node tmp_23)   --->   "%tmp_13 = call i64 @llvm.part.select.i64(i64 %buffer_load, i32 63, i32 0)" [ddr_to_axis_reader.cpp:41]
ST_14 : Operation 101 [1/1] (0.78ns)   --->   "%tmp_14 = sub i7 %tmp_11, %tmp_12" [ddr_to_axis_reader.cpp:41]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node tmp_23)   --->   "%tmp_15 = xor i7 %tmp_11, 63" [ddr_to_axis_reader.cpp:41]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 103 [1/1] (0.78ns)   --->   "%tmp_16 = sub i7 %tmp_12, %tmp_11" [ddr_to_axis_reader.cpp:41]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node tmp_20)   --->   "%tmp_17 = select i1 %tmp_10, i7 %tmp_14, i7 %tmp_16" [ddr_to_axis_reader.cpp:41]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node tmp_23)   --->   "%tmp_18 = select i1 %tmp_10, i64 %tmp_13, i64 %buffer_load" [ddr_to_axis_reader.cpp:41]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node tmp_23)   --->   "%tmp_19 = select i1 %tmp_10, i7 %tmp_15, i7 %tmp_11" [ddr_to_axis_reader.cpp:41]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 107 [1/1] (0.77ns) (out node of the LUT)   --->   "%tmp_20 = sub i7 63, %tmp_17" [ddr_to_axis_reader.cpp:41]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node tmp_23)   --->   "%tmp_21 = zext i7 %tmp_19 to i64" [ddr_to_axis_reader.cpp:41]
ST_14 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node tmp_25)   --->   "%tmp_22 = zext i7 %tmp_20 to i64" [ddr_to_axis_reader.cpp:41]
ST_14 : Operation 110 [1/1] (1.53ns) (out node of the LUT)   --->   "%tmp_23 = lshr i64 %tmp_18, %tmp_21" [ddr_to_axis_reader.cpp:41]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node tmp_25)   --->   "%tmp_24 = lshr i64 -1, %tmp_22" [ddr_to_axis_reader.cpp:41]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 112 [1/1] (0.73ns) (out node of the LUT)   --->   "%tmp_25 = and i64 %tmp_23, %tmp_24" [ddr_to_axis_reader.cpp:41]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_26 = trunc i64 %tmp_25 to i8" [ddr_to_axis_reader.cpp:41]
ST_14 : Operation 114 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_V, i8 %tmp_26)" [ddr_to_axis_reader.cpp:44]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

 <State 15> : 0.00ns
ST_15 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)" [ddr_to_axis_reader.cpp:42]
ST_15 : Operation 116 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader.cpp:43]
ST_15 : Operation 117 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_V, i8 %tmp_26)" [ddr_to_axis_reader.cpp:44]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 118 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_9)" [ddr_to_axis_reader.cpp:45]
ST_15 : Operation 119 [1/1] (0.00ns)   --->   "br label %burst.rd.end" [ddr_to_axis_reader.cpp:41]

 <State 16> : 0.88ns
ST_16 : Operation 120 [1/1] (0.88ns)   --->   "%offset = add i19 %offset1, 512" [ddr_to_axis_reader.cpp:46]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 121 [1/1] (0.00ns)   --->   "br label %1" [ddr_to_axis_reader.cpp:38]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.92ns
The critical path consists of the following:
	wire read on port 'frame_index_V' (ddr_to_axis_reader.cpp:27) [22]  (0 ns)
	'add' operation ('inner_index.V', ddr_to_axis_reader.cpp:34) [23]  (0.673 ns)
	'mul' operation ('tmp_1', ddr_to_axis_reader.cpp:37) [27]  (2.59 ns)
	multiplexor before 'phi' operation ('offset') with incoming values : ('offset_cast', ddr_to_axis_reader.cpp:37) ('offset', ddr_to_axis_reader.cpp:46) [31]  (0.656 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	'phi' operation ('offset') with incoming values : ('offset_cast', ddr_to_axis_reader.cpp:37) ('offset', ddr_to_axis_reader.cpp:46) [31]  (0 ns)
	'getelementptr' operation ('base_ddr_addr_addr', ddr_to_axis_reader.cpp:40) [39]  (0 ns)
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader.cpp:40) [40]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader.cpp:40) [40]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader.cpp:40) [40]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader.cpp:40) [40]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader.cpp:40) [40]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader.cpp:40) [40]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader.cpp:40) [40]  (8.75 ns)

 <State 9>: 0.912ns
The critical path consists of the following:
	'phi' operation ('indvar') with incoming values : ('indvar_next') [43]  (0 ns)
	'icmp' operation ('exitcond1') [44]  (0.912 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'base_ddr_addr' (ddr_to_axis_reader.cpp:40) [53]  (8.75 ns)

 <State 11>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('buffer_addr', ddr_to_axis_reader.cpp:40) [54]  (0 ns)
	'store' operation (ddr_to_axis_reader.cpp:40) of variable 'base_ddr_addr_addr_r', ddr_to_axis_reader.cpp:40 on array 'buffer', ddr_to_axis_reader.cpp:18 [55]  (1.24 ns)

 <State 12>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', ddr_to_axis_reader.cpp:41) [61]  (0.656 ns)

 <State 13>: 1.39ns
The critical path consists of the following:
	'icmp' operation ('tmp_7', ddr_to_axis_reader.cpp:41) [62]  (1.01 ns)
	blocking operation 0.379 ns on control path)

 <State 14>: 3.51ns
The critical path consists of the following:
	'load' operation ('buffer_load', ddr_to_axis_reader.cpp:41) on array 'buffer', ddr_to_axis_reader.cpp:18 [73]  (1.24 ns)
	'select' operation ('tmp_18', ddr_to_axis_reader.cpp:41) [84]  (0 ns)
	'lshr' operation ('tmp_23', ddr_to_axis_reader.cpp:41) [89]  (1.54 ns)
	'and' operation ('tmp_25', ddr_to_axis_reader.cpp:41) [91]  (0.738 ns)

 <State 15>: 0ns
The critical path consists of the following:

 <State 16>: 0.884ns
The critical path consists of the following:
	'add' operation ('offset', ddr_to_axis_reader.cpp:46) [97]  (0.884 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
