

================================================================
== Vivado HLS Report for 'ddr_to_axis_reader_SD'
================================================================
* Date:           Mon Jun  3 12:07:55 2019

* Version:        2018.1 (Build 2188600 on Wed Apr 04 19:04:02 MDT 2018)
* Project:        DDR_TO_AXIS_READER_AXILITE_SD_prj
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------+------+------+----------+-----------+-----------+-------------+----------+
        |                                |   Latency   | Iteration|  Initiation Interval  |     Trip    |          |
        |            Loop Name           |  min |  max |  Latency |  achieved |   target  |    Count    | Pipelined|
        +--------------------------------+------+------+----------+-----------+-----------+-------------+----------+
        |- Loop 1                        |     ?|     ?|         ?|          -|          -| 0 ~ 1048575 |    no    |
        | + memcpy.buffer.base_ddr_addr  |   513|   513|         3|          1|          1|          512|    yes   |
        | + Loop 1.2                     |     ?|     ?|         3|          1|          1|            ?|    yes   |
        | + Loop 1.3                     |  2049|  2049|         3|          1|          1|         2048|    yes   |
        +--------------------------------+------+------+----------+-----------+-----------+-------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3
  * Pipeline-2: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 3
  Pipeline-0 : II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1 : II = 1, D = 3, States = { 13 14 15 }
  Pipeline-2 : II = 1, D = 3, States = { 17 18 19 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	12  / (exitcond)
	10  / (!exitcond)
10 --> 
	11  / true
11 --> 
	9  / true
12 --> 
	13  / (!stereo_enabler_read)
	17  / (stereo_enabler_read)
13 --> 
	16  / (tmp_6)
	14  / (!tmp_6)
14 --> 
	15  / true
15 --> 
	13  / true
16 --> 
	2  / true
17 --> 
	16  / (tmp)
	18  / (!tmp)
18 --> 
	19  / true
19 --> 
	17  / true

* FSM state operations: 

 <State 1> : 7.20ns
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %outStream_channel_1_V), !map !20"
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %outstream_channel_2_V), !map !24"
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %base_ddr_addr), !map !28"
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %base_address), !map !34"
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %frame_buffer_dim), !map !40"
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %frame_buffer_offset), !map !44"
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %frame_buffer_number), !map !48"
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %update_intr), !map !52"
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %stereo_enabler), !map !56"
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([22 x i8]* @ddr_to_axis_reader_S) nounwind"
ST_1 : Operation 30 [1/1] (1.00ns)   --->   "%stereo_enabler_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %stereo_enabler)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 31 [1/1] (1.00ns)   --->   "%update_intr_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %update_intr)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 32 [1/1] (1.00ns)   --->   "%frame_buffer_number_s = call i8 @_ssdm_op_Read.s_axilite.i8(i8 %frame_buffer_number)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 33 [1/1] (1.00ns)   --->   "%frame_buffer_offset_1 = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %frame_buffer_offset)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%frame_buffer_dim_rea = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %frame_buffer_dim)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%base_address_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %base_address)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%buffer = alloca [512 x i64], align 16" [ddr_to_axis_reader_SD.cpp:17]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:6]
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %base_address, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:7]
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %update_intr, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:8]
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %frame_buffer_number, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:9]
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %frame_buffer_offset, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:10]
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %frame_buffer_dim, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:11]
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %stereo_enabler, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:12]
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %outStream_channel_1_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:13]
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %outstream_channel_2_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:14]
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %base_ddr_addr, [6 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 128, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:15]
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([512 x i64]* %buffer, [1 x i8]* @p_str1, [12 x i8]* @p_str5, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [ddr_to_axis_reader_SD.cpp:18]
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%inner_index_load = load i32* @inner_index, align 4" [ddr_to_axis_reader_SD.cpp:22]
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @inner_index, i32 1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:22]
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @luma_chroma_switch, i32 1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:25]
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%guard_variable_for_d_4 = load i1* @guard_variable_for_d_2, align 1"
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%FRAME_BUFFER_DIM_loa = load i32* @FRAME_BUFFER_DIM_r, align 4" [ddr_to_axis_reader_SD.cpp:50]
ST_1 : Operation 53 [1/1] (0.65ns)   --->   "br i1 %guard_variable_for_d_4, label %._crit_edge, label %codeRepl1" [ddr_to_axis_reader_SD.cpp:27]
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "store i1 true, i1* @guard_variable_for_d_2, align 1" [ddr_to_axis_reader_SD.cpp:27]
ST_1 : Operation 55 [1/1] (0.65ns)   --->   "br label %._crit_edge"
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%FRAME_BUFFER_DIM_fla = phi i1 [ true, %codeRepl1 ], [ false, %0 ]"
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%FRAME_BUFFER_DIM_loc = phi i32 [ %frame_buffer_dim_rea, %codeRepl1 ], [ %FRAME_BUFFER_DIM_loa, %0 ]" [ddr_to_axis_reader_SD.cpp:50]
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_BUFFER_DIM_r, i32 1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:28]
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%guard_variable_for_d_5 = load i1* @guard_variable_for_d, align 1"
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%FRAME_OFFSET_load = load i32* @FRAME_OFFSET, align 4" [ddr_to_axis_reader_SD.cpp:31]
ST_1 : Operation 61 [1/1] (0.65ns)   --->   "br i1 %guard_variable_for_d_5, label %._crit_edge14, label %codeRepl" [ddr_to_axis_reader_SD.cpp:30]
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "store i1 true, i1* @guard_variable_for_d, align 1" [ddr_to_axis_reader_SD.cpp:30]
ST_1 : Operation 63 [1/1] (0.65ns)   --->   "br label %._crit_edge14"
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%FRAME_OFFSET_flag = phi i1 [ true, %codeRepl ], [ false, %._crit_edge ]"
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%FRAME_OFFSET_loc = phi i32 [ %frame_buffer_offset_1, %codeRepl ], [ %FRAME_OFFSET_load, %._crit_edge ]" [ddr_to_axis_reader_SD.cpp:31]
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @FRAME_OFFSET, i32 1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:31]
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%guard_variable_for_d_6 = load i1* @guard_variable_for_d_1, align 1"
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%FRAME_BUFFER_NUMBER_s = load i8* @FRAME_BUFFER_NUMBER_r, align 1"
ST_1 : Operation 69 [1/1] (0.65ns)   --->   "br i1 %guard_variable_for_d_6, label %._crit_edge15, label %codeRepl2" [ddr_to_axis_reader_SD.cpp:33]
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "store i1 true, i1* @guard_variable_for_d_1, align 1" [ddr_to_axis_reader_SD.cpp:33]
ST_1 : Operation 71 [1/1] (0.65ns)   --->   "br label %._crit_edge15"
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%FRAME_BUFFER_NUMBER_1 = phi i1 [ true, %codeRepl2 ], [ false, %._crit_edge14 ]"
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%FRAME_BUFFER_NUMBER_2 = phi i8 [ %frame_buffer_number_s, %codeRepl2 ], [ %FRAME_BUFFER_NUMBER_s, %._crit_edge14 ]"
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i8* @FRAME_BUFFER_NUMBER_r, i32 1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:34]
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%guard_variable_for_d_7 = load i1* @guard_variable_for_d_3, align 1"
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%BASE_ADDRESS_load = load i32* @BASE_ADDRESS_r, align 4" [ddr_to_axis_reader_SD.cpp:37]
ST_1 : Operation 77 [1/1] (0.65ns)   --->   "br i1 %guard_variable_for_d_7, label %._crit_edge16, label %codeRepl3" [ddr_to_axis_reader_SD.cpp:36]
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "store i1 true, i1* @guard_variable_for_d_3, align 1" [ddr_to_axis_reader_SD.cpp:36]
ST_1 : Operation 79 [1/1] (0.65ns)   --->   "br label %._crit_edge16"
ST_1 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node p_BASE_ADDRESS_flag)   --->   "%BASE_ADDRESS_flag = phi i1 [ true, %codeRepl3 ], [ false, %._crit_edge15 ]"
ST_1 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node offset)   --->   "%BASE_ADDRESS_loc = phi i32 [ %base_address_read, %codeRepl3 ], [ %BASE_ADDRESS_load, %._crit_edge15 ]" [ddr_to_axis_reader_SD.cpp:37]
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @BASE_ADDRESS_r, i32 1, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:37]
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_7 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %base_address_read, i32 3, i32 31)" [ddr_to_axis_reader_SD.cpp:45]
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_8 = zext i29 %tmp_7 to i32" [ddr_to_axis_reader_SD.cpp:45]
ST_1 : Operation 85 [1/1] (0.28ns)   --->   "%p_FRAME_BUFFER_DIM_fl = or i1 %FRAME_BUFFER_DIM_fla, %update_intr_read" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.44ns)   --->   "%frame_buffer_dim_FRA = select i1 %update_intr_read, i32 %frame_buffer_dim_rea, i32 %FRAME_BUFFER_DIM_loc" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.28ns)   --->   "%p_FRAME_OFFSET_flag = or i1 %FRAME_OFFSET_flag, %update_intr_read" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.28ns)   --->   "%p_FRAME_BUFFER_NUMBER = or i1 %FRAME_BUFFER_NUMBER_1, %update_intr_read" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.39ns)   --->   "%tmp_1_FRAME_BUFFER_N = select i1 %update_intr_read, i8 %frame_buffer_number_s, i8 %FRAME_BUFFER_NUMBER_2" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_1_FRAME_BUFFER_N_1 = zext i8 %tmp_1_FRAME_BUFFER_N to i32" [ddr_to_axis_reader_SD.cpp:39]
ST_1 : Operation 91 [1/1] (0.28ns) (out node of the LUT)   --->   "%p_BASE_ADDRESS_flag = or i1 %BASE_ADDRESS_flag, %update_intr_read" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.44ns)   --->   "%tmp_7_base_address = select i1 %update_intr_read, i32 %tmp_8, i32 %base_address_read" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.44ns)   --->   "%frame_buffer_offset_s = select i1 %update_intr_read, i32 %frame_buffer_offset_1, i32 %FRAME_OFFSET_loc" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node offset)   --->   "%tmp_7_BASE_ADDRESS_l = select i1 %update_intr_read, i32 %tmp_8, i32 %BASE_ADDRESS_loc" [ddr_to_axis_reader_SD.cpp:39]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (3.42ns)   --->   "%tmp_s = mul i32 %inner_index_load, %frame_buffer_offset_s" [ddr_to_axis_reader_SD.cpp:49]   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node offset)   --->   "%tmp_2 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %tmp_s, i32 3, i32 31)" [ddr_to_axis_reader_SD.cpp:49]
ST_1 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node offset)   --->   "%tmp_9 = zext i29 %tmp_2 to i32" [ddr_to_axis_reader_SD.cpp:49]
ST_1 : Operation 98 [1/1] (1.01ns) (out node of the LUT)   --->   "%offset = add i32 %tmp_9, %tmp_7_BASE_ADDRESS_l" [ddr_to_axis_reader_SD.cpp:49]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "br i1 %p_BASE_ADDRESS_flag, label %mergeST20, label %._crit_edge17.new21" [ddr_to_axis_reader_SD.cpp:39]
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "store i32 %tmp_7_base_address, i32* @BASE_ADDRESS_r, align 4" [ddr_to_axis_reader_SD.cpp:36]
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "br label %._crit_edge17.new21"
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "br i1 %p_FRAME_BUFFER_NUMBER, label %mergeST18, label %._crit_edge17.new19" [ddr_to_axis_reader_SD.cpp:39]
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "store i8 %frame_buffer_number_s, i8* @FRAME_BUFFER_NUMBER_r, align 1" [ddr_to_axis_reader_SD.cpp:33]
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "br label %._crit_edge17.new19"
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "br i1 %p_FRAME_OFFSET_flag, label %mergeST16, label %._crit_edge17.new17" [ddr_to_axis_reader_SD.cpp:39]
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "store i32 %frame_buffer_offset_1, i32* @FRAME_OFFSET, align 4" [ddr_to_axis_reader_SD.cpp:30]
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "br label %._crit_edge17.new17"
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "br i1 %p_FRAME_BUFFER_DIM_fl, label %mergeST, label %._crit_edge17.new" [ddr_to_axis_reader_SD.cpp:39]
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "store i32 %frame_buffer_dim_rea, i32* @FRAME_BUFFER_DIM_r, align 4" [ddr_to_axis_reader_SD.cpp:27]
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "br label %._crit_edge17.new"
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_5 = call i20 @_ssdm_op_PartSelect.i20.i32.i32.i32(i32 %frame_buffer_dim_FRA, i32 12, i32 31)" [ddr_to_axis_reader_SD.cpp:39]
ST_1 : Operation 112 [1/1] (0.65ns)   --->   "br label %1" [ddr_to_axis_reader_SD.cpp:50]

 <State 2> : 8.75ns
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%offset1 = phi i32 [ %offset, %._crit_edge17.new ], [ %offset_1, %.loopexit ]"
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%i = phi i20 [ 0, %._crit_edge17.new ], [ %i_1, %.loopexit ]"
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 1048575, i64 0)"
ST_2 : Operation 116 [1/1] (1.07ns)   --->   "%exitcond1 = icmp eq i20 %i, %tmp_5" [ddr_to_axis_reader_SD.cpp:50]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.89ns)   --->   "%i_1 = add i20 %i, 1" [ddr_to_axis_reader_SD.cpp:50]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %._crit_edge18, label %2" [ddr_to_axis_reader_SD.cpp:50]
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_1 = sext i32 %offset1 to i64" [ddr_to_axis_reader_SD.cpp:52]
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%base_ddr_addr_addr = getelementptr inbounds i64* %base_ddr_addr, i64 %tmp_1" [ddr_to_axis_reader_SD.cpp:52]
ST_2 : Operation 121 [7/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 122 [1/1] (0.99ns)   --->   "%tmp_3 = icmp eq i32 %inner_index_load, %tmp_1_FRAME_BUFFER_N_1" [ddr_to_axis_reader_SD.cpp:84]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 123 [1/1] (1.01ns)   --->   "%tmp_4 = add nsw i32 %inner_index_load, 1" [ddr_to_axis_reader_SD.cpp:87]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 124 [1/1] (0.44ns)   --->   "%storemerge = select i1 %tmp_3, i32 0, i32 %tmp_4" [ddr_to_axis_reader_SD.cpp:84]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "store i32 %storemerge, i32* @inner_index, align 4" [ddr_to_axis_reader_SD.cpp:85]
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "ret void" [ddr_to_axis_reader_SD.cpp:89]

 <State 3> : 8.75ns
ST_3 : Operation 127 [6/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 4> : 8.75ns
ST_4 : Operation 128 [5/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 5> : 8.75ns
ST_5 : Operation 129 [4/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 6> : 8.75ns
ST_6 : Operation 130 [3/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 7> : 8.75ns
ST_7 : Operation 131 [2/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 8> : 8.75ns
ST_8 : Operation 132 [1/7] (8.75ns)   --->   "%base_ddr_addr_addr_1 = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %base_ddr_addr_addr, i32 512)" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 133 [1/1] (0.65ns)   --->   "br label %burst.rd.header"

 <State 9> : 0.91ns
ST_9 : Operation 134 [1/1] (0.00ns)   --->   "%indvar = phi i10 [ 0, %2 ], [ %indvar_next, %burst.rd.body ]"
ST_9 : Operation 135 [1/1] (0.91ns)   --->   "%exitcond = icmp eq i10 %indvar, -512"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 136 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)"
ST_9 : Operation 137 [1/1] (0.78ns)   --->   "%indvar_next = add i10 %indvar, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 138 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %burst.rd.end, label %burst.rd.body"

 <State 10> : 8.75ns
ST_10 : Operation 139 [1/1] (8.75ns)   --->   "%base_ddr_addr_addr_r = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %base_ddr_addr_addr)" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 11> : 1.24ns
ST_11 : Operation 140 [1/1] (0.00ns)   --->   "%burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_s) nounwind"
ST_11 : Operation 141 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str8)"
ST_11 : Operation 142 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopName([28 x i8]* @memcpy_OC_buffer_OC_s) nounwind"
ST_11 : Operation 143 [1/1] (0.00ns)   --->   "%indvar1 = zext i10 %indvar to i64"
ST_11 : Operation 144 [1/1] (0.00ns)   --->   "%buffer_addr = getelementptr [512 x i64]* %buffer, i64 0, i64 %indvar1" [ddr_to_axis_reader_SD.cpp:52]
ST_11 : Operation 145 [1/1] (1.23ns)   --->   "store i64 %base_ddr_addr_addr_r, i64* %buffer_addr, align 8" [ddr_to_axis_reader_SD.cpp:52]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_11 : Operation 146 [1/1] (0.00ns)   --->   "%burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_s, i32 %burstread_rbegin) nounwind"
ST_11 : Operation 147 [1/1] (0.00ns)   --->   "br label %burst.rd.header"

 <State 12> : 0.66ns
ST_12 : Operation 148 [1/1] (0.00ns)   --->   "br i1 %stereo_enabler_read, label %.preheader.preheader, label %.preheader9.preheader" [ddr_to_axis_reader_SD.cpp:53]
ST_12 : Operation 149 [1/1] (0.65ns)   --->   "br label %.preheader9" [ddr_to_axis_reader_SD.cpp:55]
ST_12 : Operation 150 [1/1] (0.65ns)   --->   "br label %.preheader" [ddr_to_axis_reader_SD.cpp:73]

 <State 13> : 4.08ns
ST_13 : Operation 151 [1/1] (0.00ns)   --->   "%j = phi i13 [ %j_4, %6 ], [ 0, %.preheader9.preheader ]"
ST_13 : Operation 152 [1/1] (0.00ns)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %j, i32 12)" [ddr_to_axis_reader_SD.cpp:55]
ST_13 : Operation 153 [1/1] (0.00ns)   --->   "br i1 %tmp_6, label %.loopexit.loopexit119, label %3" [ddr_to_axis_reader_SD.cpp:55]
ST_13 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_14 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)" [ddr_to_axis_reader_SD.cpp:56]
ST_13 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:57]
ST_13 : Operation 156 [1/1] (0.00ns)   --->   "%luma_chroma_switch_l = load i32* @luma_chroma_switch, align 4" [ddr_to_axis_reader_SD.cpp:58]
ST_13 : Operation 157 [1/1] (0.99ns)   --->   "%tmp_16 = icmp eq i32 %luma_chroma_switch_l, 1" [ddr_to_axis_reader_SD.cpp:58]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 158 [1/1] (0.00ns)   --->   "br i1 %tmp_16, label %4, label %5" [ddr_to_axis_reader_SD.cpp:58]
ST_13 : Operation 159 [1/1] (1.01ns)   --->   "%tmp_18 = add nsw i32 1, %luma_chroma_switch_l" [ddr_to_axis_reader_SD.cpp:66]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 160 [1/1] (0.65ns)   --->   "store i32 %tmp_18, i32* @luma_chroma_switch, align 4" [ddr_to_axis_reader_SD.cpp:66]
ST_13 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_70 = trunc i13 %j to i3" [ddr_to_axis_reader_SD.cpp:55]
ST_13 : Operation 162 [1/1] (0.00ns)   --->   "%gepindex62_cast = call i9 @_ssdm_op_PartSelect.i9.i13.i32.i32(i13 %j, i32 3, i32 11)" [ddr_to_axis_reader_SD.cpp:55]
ST_13 : Operation 163 [1/1] (0.00ns)   --->   "%gepindex264_cast = zext i9 %gepindex62_cast to i64" [ddr_to_axis_reader_SD.cpp:55]
ST_13 : Operation 164 [1/1] (0.00ns)   --->   "%buffer_addr_3 = getelementptr [512 x i64]* %buffer, i64 0, i64 %gepindex264_cast" [ddr_to_axis_reader_SD.cpp:55]
ST_13 : Operation 165 [2/2] (1.23ns)   --->   "%buffer_load_3 = load i64* %buffer_addr_3, align 8" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_13 : Operation 166 [1/1] (0.65ns)   --->   "br label %6"
ST_13 : Operation 167 [1/1] (0.65ns)   --->   "store i32 0, i32* @luma_chroma_switch, align 4" [ddr_to_axis_reader_SD.cpp:60]
ST_13 : Operation 168 [1/1] (0.82ns)   --->   "%j_3 = add i13 -1, %j" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 169 [1/1] (0.00ns)   --->   "%tmp_51 = trunc i13 %j_3 to i3" [ddr_to_axis_reader_SD.cpp:61]
ST_13 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_52 = call i10 @_ssdm_op_PartSelect.i10.i13.i32.i32(i13 %j_3, i32 3, i32 12)" [ddr_to_axis_reader_SD.cpp:61]
ST_13 : Operation 171 [1/1] (0.00ns)   --->   "%adjSize = sext i10 %tmp_52 to i14" [ddr_to_axis_reader_SD.cpp:61]
ST_13 : Operation 172 [1/1] (0.78ns)   --->   "%mem_index_gep = add i14 4, %adjSize" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 173 [1/1] (0.00ns)   --->   "%adjSize55_cast = zext i14 %mem_index_gep to i15" [ddr_to_axis_reader_SD.cpp:62]
ST_13 : Operation 174 [1/1] (0.91ns)   --->   "%addrCmp = icmp ult i10 %tmp_52, -4" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 175 [1/1] (0.94ns)   --->   "%addrCmp1 = icmp ult i14 %mem_index_gep, 516" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 176 [1/1] (0.79ns)   --->   "%gepindex = add i15 -4, %adjSize55_cast" [ddr_to_axis_reader_SD.cpp:62]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node gepindex2)   --->   "%gepindex1 = select i1 %addrCmp, i15 %gepindex, i15 511" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 178 [1/1] (0.29ns) (out node of the LUT)   --->   "%gepindex2 = select i1 %addrCmp1, i15 %gepindex1, i15 511" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 179 [1/1] (0.00ns)   --->   "%gepindex2_cast = sext i15 %gepindex2 to i64" [ddr_to_axis_reader_SD.cpp:61]
ST_13 : Operation 180 [1/1] (0.00ns)   --->   "%buffer_addr_2 = getelementptr [512 x i64]* %buffer, i64 0, i64 %gepindex2_cast" [ddr_to_axis_reader_SD.cpp:61]
ST_13 : Operation 181 [2/2] (1.23ns)   --->   "%buffer_load_2 = load i64* %buffer_addr_2, align 8" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_13 : Operation 182 [1/1] (0.65ns)   --->   "br label %6" [ddr_to_axis_reader_SD.cpp:63]
ST_13 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node j_4)   --->   "%j_1 = phi i13 [ %j_3, %4 ], [ %j, %5 ]"
ST_13 : Operation 184 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_14)" [ddr_to_axis_reader_SD.cpp:69]
ST_13 : Operation 185 [1/1] (0.82ns) (out node of the LUT)   --->   "%j_4 = add i13 %j_1, 1" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 186 [1/1] (0.00ns)   --->   "br label %.preheader9" [ddr_to_axis_reader_SD.cpp:55]

 <State 14> : 3.51ns
ST_14 : Operation 187 [1/2] (1.23ns)   --->   "%buffer_load_3 = load i64* %buffer_addr_3, align 8" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_14 : Operation 188 [1/1] (0.00ns)   --->   "%start_pos3 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_70, i3 0)" [ddr_to_axis_reader_SD.cpp:55]
ST_14 : Operation 189 [1/1] (0.00ns)   --->   "%end_pos3 = or i6 %start_pos3, 7" [ddr_to_axis_reader_SD.cpp:55]
ST_14 : Operation 190 [1/1] (0.78ns)   --->   "%tmp_71 = icmp ugt i6 %start_pos3, %end_pos3" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 191 [1/1] (0.00ns)   --->   "%tmp_72 = zext i6 %start_pos3 to i7" [ddr_to_axis_reader_SD.cpp:55]
ST_14 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_73 = zext i6 %end_pos3 to i7" [ddr_to_axis_reader_SD.cpp:55]
ST_14 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node tmp_84)   --->   "%tmp_74 = call i64 @llvm.part.select.i64(i64 %buffer_load_3, i32 63, i32 0)" [ddr_to_axis_reader_SD.cpp:55]
ST_14 : Operation 194 [1/1] (0.78ns)   --->   "%tmp_75 = sub i7 %tmp_72, %tmp_73" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node tmp_84)   --->   "%tmp_76 = xor i7 %tmp_72, 63" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 196 [1/1] (0.78ns)   --->   "%tmp_77 = sub i7 %tmp_73, %tmp_72" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node tmp_81)   --->   "%tmp_78 = select i1 %tmp_71, i7 %tmp_75, i7 %tmp_77" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node tmp_84)   --->   "%tmp_79 = select i1 %tmp_71, i64 %tmp_74, i64 %buffer_load_3" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node tmp_84)   --->   "%tmp_80 = select i1 %tmp_71, i7 %tmp_76, i7 %tmp_72" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 200 [1/1] (0.77ns) (out node of the LUT)   --->   "%tmp_81 = sub i7 63, %tmp_78" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node tmp_84)   --->   "%tmp_82 = zext i7 %tmp_80 to i64" [ddr_to_axis_reader_SD.cpp:55]
ST_14 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node tmp_86)   --->   "%tmp_83 = zext i7 %tmp_81 to i64" [ddr_to_axis_reader_SD.cpp:55]
ST_14 : Operation 203 [1/1] (1.53ns) (out node of the LUT)   --->   "%tmp_84 = lshr i64 %tmp_79, %tmp_82" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node tmp_86)   --->   "%tmp_85 = lshr i64 -1, %tmp_83" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 205 [1/1] (0.73ns) (out node of the LUT)   --->   "%tmp_86 = and i64 %tmp_84, %tmp_85" [ddr_to_axis_reader_SD.cpp:55]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_87 = trunc i64 %tmp_86 to i8" [ddr_to_axis_reader_SD.cpp:55]
ST_14 : Operation 207 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_87)" [ddr_to_axis_reader_SD.cpp:67]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 208 [1/2] (1.23ns)   --->   "%buffer_load_2 = load i64* %buffer_addr_2, align 8" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_14 : Operation 209 [1/1] (0.00ns)   --->   "%start_pos = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_51, i3 0)" [ddr_to_axis_reader_SD.cpp:61]
ST_14 : Operation 210 [1/1] (0.00ns)   --->   "%end_pos2 = or i6 %start_pos, 7" [ddr_to_axis_reader_SD.cpp:61]
ST_14 : Operation 211 [1/1] (0.78ns)   --->   "%tmp_53 = icmp ugt i6 %start_pos, %end_pos2" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 212 [1/1] (0.00ns)   --->   "%tmp_54 = zext i6 %start_pos to i7" [ddr_to_axis_reader_SD.cpp:61]
ST_14 : Operation 213 [1/1] (0.00ns)   --->   "%tmp_55 = zext i6 %end_pos2 to i7" [ddr_to_axis_reader_SD.cpp:61]
ST_14 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%tmp_56 = call i64 @llvm.part.select.i64(i64 %buffer_load_2, i32 63, i32 0)" [ddr_to_axis_reader_SD.cpp:61]
ST_14 : Operation 215 [1/1] (0.78ns)   --->   "%tmp_57 = sub i7 %tmp_54, %tmp_55" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 216 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%tmp_58 = xor i7 %tmp_54, 63" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 217 [1/1] (0.78ns)   --->   "%tmp_59 = sub i7 %tmp_55, %tmp_54" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node tmp_63)   --->   "%tmp_60 = select i1 %tmp_53, i7 %tmp_57, i7 %tmp_59" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%tmp_61 = select i1 %tmp_53, i64 %tmp_56, i64 %buffer_load_2" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%tmp_62 = select i1 %tmp_53, i7 %tmp_58, i7 %tmp_54" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 221 [1/1] (0.77ns) (out node of the LUT)   --->   "%tmp_63 = sub i7 63, %tmp_60" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%tmp_64 = zext i7 %tmp_62 to i64" [ddr_to_axis_reader_SD.cpp:61]
ST_14 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node tmp_68)   --->   "%tmp_65 = zext i7 %tmp_63 to i64" [ddr_to_axis_reader_SD.cpp:61]
ST_14 : Operation 224 [1/1] (1.53ns) (out node of the LUT)   --->   "%tmp_66 = lshr i64 %tmp_61, %tmp_64" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node tmp_68)   --->   "%tmp_67 = lshr i64 -1, %tmp_65" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 226 [1/1] (0.73ns) (out node of the LUT)   --->   "%tmp_68 = and i64 %tmp_66, %tmp_67" [ddr_to_axis_reader_SD.cpp:61]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 227 [1/1] (0.00ns)   --->   "%tmp_69 = trunc i64 %tmp_68 to i8" [ddr_to_axis_reader_SD.cpp:61]
ST_14 : Operation 228 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_69)" [ddr_to_axis_reader_SD.cpp:62]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

 <State 15> : 0.00ns
ST_15 : Operation 229 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_87)" [ddr_to_axis_reader_SD.cpp:67]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 230 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_69)" [ddr_to_axis_reader_SD.cpp:62]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

 <State 16> : 1.02ns
ST_16 : Operation 231 [1/1] (0.00ns)   --->   "br label %.loopexit"
ST_16 : Operation 232 [1/1] (0.00ns)   --->   "br label %.loopexit"
ST_16 : Operation 233 [1/1] (1.01ns)   --->   "%offset_1 = add i32 %offset1, 512" [ddr_to_axis_reader_SD.cpp:81]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 234 [1/1] (0.00ns)   --->   "br label %1" [ddr_to_axis_reader_SD.cpp:50]

 <State 17> : 1.24ns
ST_17 : Operation 235 [1/1] (0.00ns)   --->   "%j1 = phi i13 [ %j_2, %7 ], [ 0, %.preheader.preheader ]"
ST_17 : Operation 236 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %j1, i32 12)" [ddr_to_axis_reader_SD.cpp:73]
ST_17 : Operation 237 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2048, i64 2048, i64 2048)"
ST_17 : Operation 238 [1/1] (0.00ns)   --->   "br i1 %tmp, label %.loopexit.loopexit, label %7" [ddr_to_axis_reader_SD.cpp:73]
ST_17 : Operation 239 [1/1] (0.00ns)   --->   "%tmp_11 = trunc i13 %j1 to i3" [ddr_to_axis_reader_SD.cpp:73]
ST_17 : Operation 240 [1/1] (0.00ns)   --->   "%gepindex74_cast = call i9 @_ssdm_op_PartSelect.i9.i13.i32.i32(i13 %j1, i32 3, i32 11)" [ddr_to_axis_reader_SD.cpp:73]
ST_17 : Operation 241 [1/1] (0.00ns)   --->   "%gepindex276_cast = zext i9 %gepindex74_cast to i64" [ddr_to_axis_reader_SD.cpp:73]
ST_17 : Operation 242 [1/1] (0.00ns)   --->   "%buffer_addr_1 = getelementptr [512 x i64]* %buffer, i64 0, i64 %gepindex276_cast" [ddr_to_axis_reader_SD.cpp:73]
ST_17 : Operation 243 [2/2] (1.23ns)   --->   "%buffer_load = load i64* %buffer_addr_1, align 8" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_17 : Operation 244 [1/1] (0.00ns)   --->   "%tmp_13 = call i2 @_ssdm_op_PartSelect.i2.i13.i32.i32(i13 %j1, i32 1, i32 2)" [ddr_to_axis_reader_SD.cpp:73]
ST_17 : Operation 245 [2/2] (1.23ns)   --->   "%buffer_load_1 = load i64* %buffer_addr_1, align 8" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_17 : Operation 246 [1/1] (0.82ns)   --->   "%j_2 = add i13 2, %j1" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 18> : 3.51ns
ST_18 : Operation 247 [1/2] (1.23ns)   --->   "%buffer_load = load i64* %buffer_addr_1, align 8" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_18 : Operation 248 [1/1] (0.00ns)   --->   "%start_pos1 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_13, i4 0)" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 249 [1/1] (0.00ns)   --->   "%end_pos = or i6 %start_pos1, 7" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 250 [1/1] (0.78ns)   --->   "%tmp_15 = icmp ugt i6 %start_pos1, %end_pos" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 251 [1/1] (0.00ns)   --->   "%tmp_17 = zext i6 %start_pos1 to i7" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 252 [1/1] (0.00ns)   --->   "%tmp_19 = zext i6 %end_pos to i7" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node tmp_30)   --->   "%tmp_20 = call i64 @llvm.part.select.i64(i64 %buffer_load, i32 63, i32 0)" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 254 [1/1] (0.78ns)   --->   "%tmp_21 = sub i7 %tmp_17, %tmp_19" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node tmp_30)   --->   "%tmp_22 = xor i7 %tmp_17, 63" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 256 [1/1] (0.78ns)   --->   "%tmp_23 = sub i7 %tmp_19, %tmp_17" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_24 = select i1 %tmp_15, i7 %tmp_21, i7 %tmp_23" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 258 [1/1] (0.00ns) (grouped into LUT with out node tmp_30)   --->   "%tmp_25 = select i1 %tmp_15, i64 %tmp_20, i64 %buffer_load" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 259 [1/1] (0.00ns) (grouped into LUT with out node tmp_30)   --->   "%tmp_26 = select i1 %tmp_15, i7 %tmp_22, i7 %tmp_17" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 260 [1/1] (0.77ns) (out node of the LUT)   --->   "%tmp_27 = sub i7 63, %tmp_24" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 261 [1/1] (0.00ns) (grouped into LUT with out node tmp_30)   --->   "%tmp_28 = zext i7 %tmp_26 to i64" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 262 [1/1] (0.00ns) (grouped into LUT with out node tmp_32)   --->   "%tmp_29 = zext i7 %tmp_27 to i64" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 263 [1/1] (1.53ns) (out node of the LUT)   --->   "%tmp_30 = lshr i64 %tmp_25, %tmp_28" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 264 [1/1] (0.00ns) (grouped into LUT with out node tmp_32)   --->   "%tmp_31 = lshr i64 -1, %tmp_29" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 265 [1/1] (0.73ns) (out node of the LUT)   --->   "%tmp_32 = and i64 %tmp_30, %tmp_31" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 266 [1/1] (0.00ns)   --->   "%tmp_33 = trunc i64 %tmp_32 to i8" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 267 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_33)" [ddr_to_axis_reader_SD.cpp:76]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_18 : Operation 268 [1/1] (0.00ns)   --->   "%tmp_12 = or i3 %tmp_11, 1" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 269 [1/2] (1.23ns)   --->   "%buffer_load_1 = load i64* %buffer_addr_1, align 8" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 41 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_18 : Operation 270 [1/1] (0.00ns)   --->   "%start_pos2 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_12, i3 0)" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 271 [1/1] (0.00ns)   --->   "%end_pos1 = or i6 %start_pos2, 7" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 272 [1/1] (0.78ns)   --->   "%tmp_34 = icmp ugt i6 %start_pos2, %end_pos1" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 273 [1/1] (0.00ns)   --->   "%tmp_35 = zext i6 %start_pos2 to i7" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 274 [1/1] (0.00ns)   --->   "%tmp_36 = zext i6 %end_pos1 to i7" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node tmp_47)   --->   "%tmp_37 = call i64 @llvm.part.select.i64(i64 %buffer_load_1, i32 63, i32 0)" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 276 [1/1] (0.78ns)   --->   "%tmp_38 = sub i7 %tmp_35, %tmp_36" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 277 [1/1] (0.00ns) (grouped into LUT with out node tmp_47)   --->   "%tmp_39 = xor i7 %tmp_35, 63" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 278 [1/1] (0.78ns)   --->   "%tmp_40 = sub i7 %tmp_36, %tmp_35" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 279 [1/1] (0.00ns) (grouped into LUT with out node tmp_44)   --->   "%tmp_41 = select i1 %tmp_34, i7 %tmp_38, i7 %tmp_40" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 280 [1/1] (0.00ns) (grouped into LUT with out node tmp_47)   --->   "%tmp_42 = select i1 %tmp_34, i64 %tmp_37, i64 %buffer_load_1" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node tmp_47)   --->   "%tmp_43 = select i1 %tmp_34, i7 %tmp_39, i7 %tmp_35" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 282 [1/1] (0.77ns) (out node of the LUT)   --->   "%tmp_44 = sub i7 63, %tmp_41" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 283 [1/1] (0.00ns) (grouped into LUT with out node tmp_47)   --->   "%tmp_45 = zext i7 %tmp_43 to i64" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 284 [1/1] (0.00ns) (grouped into LUT with out node tmp_49)   --->   "%tmp_46 = zext i7 %tmp_44 to i64" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 285 [1/1] (1.53ns) (out node of the LUT)   --->   "%tmp_47 = lshr i64 %tmp_42, %tmp_45" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 286 [1/1] (0.00ns) (grouped into LUT with out node tmp_49)   --->   "%tmp_48 = lshr i64 -1, %tmp_46" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 287 [1/1] (0.73ns) (out node of the LUT)   --->   "%tmp_49 = and i64 %tmp_47, %tmp_48" [ddr_to_axis_reader_SD.cpp:73]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 288 [1/1] (0.00ns)   --->   "%tmp_50 = trunc i64 %tmp_49 to i8" [ddr_to_axis_reader_SD.cpp:73]
ST_18 : Operation 289 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outstream_channel_2_V, i8 %tmp_50)" [ddr_to_axis_reader_SD.cpp:77]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

 <State 19> : 0.00ns
ST_19 : Operation 290 [1/1] (0.00ns)   --->   "%tmp_10 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)" [ddr_to_axis_reader_SD.cpp:74]
ST_19 : Operation 291 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [ddr_to_axis_reader_SD.cpp:75]
ST_19 : Operation 292 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_channel_1_V, i8 %tmp_33)" [ddr_to_axis_reader_SD.cpp:76]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_19 : Operation 293 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outstream_channel_2_V, i8 %tmp_50)" [ddr_to_axis_reader_SD.cpp:77]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_19 : Operation 294 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_10)" [ddr_to_axis_reader_SD.cpp:78]
ST_19 : Operation 295 [1/1] (0.00ns)   --->   "br label %.preheader" [ddr_to_axis_reader_SD.cpp:73]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.2ns
The critical path consists of the following:
	s_axi read on port 'frame_buffer_offset' [33]  (1 ns)
	multiplexor before 'phi' operation ('FRAME_OFFSET_loc', ddr_to_axis_reader_SD.cpp:31) with incoming values : ('frame_buffer_offset') ('FRAME_OFFSET_load', ddr_to_axis_reader_SD.cpp:31) [69]  (0.656 ns)
	'phi' operation ('FRAME_OFFSET_loc', ddr_to_axis_reader_SD.cpp:31) with incoming values : ('frame_buffer_offset') ('FRAME_OFFSET_load', ddr_to_axis_reader_SD.cpp:31) [69]  (0 ns)
	'select' operation ('frame_buffer_offset_s', ddr_to_axis_reader_SD.cpp:39) [101]  (0.449 ns)
	'mul' operation ('tmp_s', ddr_to_axis_reader_SD.cpp:49) [103]  (3.42 ns)
	'add' operation ('offset', ddr_to_axis_reader_SD.cpp:49) [106]  (1.02 ns)
	multiplexor before 'phi' operation ('offset') with incoming values : ('offset', ddr_to_axis_reader_SD.cpp:49) ('offset', ddr_to_axis_reader_SD.cpp:81) [130]  (0.656 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	'phi' operation ('offset') with incoming values : ('offset', ddr_to_axis_reader_SD.cpp:49) ('offset', ddr_to_axis_reader_SD.cpp:81) [130]  (0 ns)
	'getelementptr' operation ('base_ddr_addr_addr', ddr_to_axis_reader_SD.cpp:52) [138]  (0 ns)
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader_SD.cpp:52) [139]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader_SD.cpp:52) [139]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader_SD.cpp:52) [139]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader_SD.cpp:52) [139]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader_SD.cpp:52) [139]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader_SD.cpp:52) [139]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'base_ddr_addr' (ddr_to_axis_reader_SD.cpp:52) [139]  (8.75 ns)

 <State 9>: 0.912ns
The critical path consists of the following:
	'phi' operation ('indvar') with incoming values : ('indvar_next') [142]  (0 ns)
	'icmp' operation ('exitcond') [143]  (0.912 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'base_ddr_addr' (ddr_to_axis_reader_SD.cpp:52) [152]  (8.75 ns)

 <State 11>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('buffer_addr', ddr_to_axis_reader_SD.cpp:52) [153]  (0 ns)
	'store' operation (ddr_to_axis_reader_SD.cpp:52) of variable 'base_ddr_addr_addr_r', ddr_to_axis_reader_SD.cpp:52 on array 'buffer', ddr_to_axis_reader_SD.cpp:17 [154]  (1.24 ns)

 <State 12>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', ddr_to_axis_reader_SD.cpp:55) [162]  (0.656 ns)

 <State 13>: 4.08ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ddr_to_axis_reader_SD.cpp:55) [162]  (0 ns)
	'add' operation ('j', ddr_to_axis_reader_SD.cpp:61) [202]  (0.82 ns)
	'add' operation ('mem_index_gep', ddr_to_axis_reader_SD.cpp:61) [206]  (0.787 ns)
	'icmp' operation ('addrCmp1', ddr_to_axis_reader_SD.cpp:61) [209]  (0.944 ns)
	'select' operation ('gepindex2', ddr_to_axis_reader_SD.cpp:61) [212]  (0.294 ns)
	'getelementptr' operation ('buffer_addr_2', ddr_to_axis_reader_SD.cpp:61) [214]  (0 ns)
	'load' operation ('buffer_load_2', ddr_to_axis_reader_SD.cpp:61) on array 'buffer', ddr_to_axis_reader_SD.cpp:17 [215]  (1.24 ns)

 <State 14>: 3.51ns
The critical path consists of the following:
	'load' operation ('buffer_load_3', ddr_to_axis_reader_SD.cpp:55) on array 'buffer', ddr_to_axis_reader_SD.cpp:17 [178]  (1.24 ns)
	'select' operation ('tmp_79', ddr_to_axis_reader_SD.cpp:55) [189]  (0 ns)
	'lshr' operation ('tmp_84', ddr_to_axis_reader_SD.cpp:55) [194]  (1.54 ns)
	'and' operation ('tmp_86', ddr_to_axis_reader_SD.cpp:55) [196]  (0.738 ns)

 <State 15>: 0ns
The critical path consists of the following:

 <State 16>: 1.02ns
The critical path consists of the following:
	'add' operation ('offset', ddr_to_axis_reader_SD.cpp:81) [308]  (1.02 ns)

 <State 17>: 1.24ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ddr_to_axis_reader_SD.cpp:73) [247]  (0 ns)
	'getelementptr' operation ('buffer_addr_1', ddr_to_axis_reader_SD.cpp:73) [257]  (0 ns)
	'load' operation ('buffer_load', ddr_to_axis_reader_SD.cpp:73) on array 'buffer', ddr_to_axis_reader_SD.cpp:17 [258]  (1.24 ns)

 <State 18>: 3.51ns
The critical path consists of the following:
	'load' operation ('buffer_load', ddr_to_axis_reader_SD.cpp:73) on array 'buffer', ddr_to_axis_reader_SD.cpp:17 [258]  (1.24 ns)
	'select' operation ('tmp_25', ddr_to_axis_reader_SD.cpp:73) [270]  (0 ns)
	'lshr' operation ('tmp_30', ddr_to_axis_reader_SD.cpp:73) [275]  (1.54 ns)
	'and' operation ('tmp_32', ddr_to_axis_reader_SD.cpp:73) [277]  (0.738 ns)

 <State 19>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
