// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ddr_to_axis_reader_SD_HH_
#define _ddr_to_axis_reader_SD_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ddr_to_axis_readebkb.h"
#include "ddr_to_axis_reader_SD_AXILiteS_s_axi.h"
#include "ddr_to_axis_reader_SD_base_ddr_addr_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_BASE_DDR_ADDR_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_BASE_DDR_ADDR_ID_WIDTH = 1,
         unsigned int C_M_AXI_BASE_DDR_ADDR_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH = 64,
         unsigned int C_M_AXI_BASE_DDR_ADDR_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_BASE_DDR_ADDR_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_BASE_DDR_ADDR_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_BASE_DDR_ADDR_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct ddr_to_axis_reader_SD : public sc_module {
    // Port declarations 71
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<8> > outStream_channel_1_V_TDATA;
    sc_out< sc_logic > outStream_channel_1_V_TVALID;
    sc_in< sc_logic > outStream_channel_1_V_TREADY;
    sc_out< sc_lv<8> > outstream_channel_2_V_TDATA;
    sc_out< sc_logic > outstream_channel_2_V_TVALID;
    sc_in< sc_logic > outstream_channel_2_V_TREADY;
    sc_out< sc_logic > m_axi_base_ddr_addr_AWVALID;
    sc_in< sc_logic > m_axi_base_ddr_addr_AWREADY;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_ADDR_WIDTH> > m_axi_base_ddr_addr_AWADDR;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_ID_WIDTH> > m_axi_base_ddr_addr_AWID;
    sc_out< sc_lv<8> > m_axi_base_ddr_addr_AWLEN;
    sc_out< sc_lv<3> > m_axi_base_ddr_addr_AWSIZE;
    sc_out< sc_lv<2> > m_axi_base_ddr_addr_AWBURST;
    sc_out< sc_lv<2> > m_axi_base_ddr_addr_AWLOCK;
    sc_out< sc_lv<4> > m_axi_base_ddr_addr_AWCACHE;
    sc_out< sc_lv<3> > m_axi_base_ddr_addr_AWPROT;
    sc_out< sc_lv<4> > m_axi_base_ddr_addr_AWQOS;
    sc_out< sc_lv<4> > m_axi_base_ddr_addr_AWREGION;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_AWUSER_WIDTH> > m_axi_base_ddr_addr_AWUSER;
    sc_out< sc_logic > m_axi_base_ddr_addr_WVALID;
    sc_in< sc_logic > m_axi_base_ddr_addr_WREADY;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH> > m_axi_base_ddr_addr_WDATA;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH/8> > m_axi_base_ddr_addr_WSTRB;
    sc_out< sc_logic > m_axi_base_ddr_addr_WLAST;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_ID_WIDTH> > m_axi_base_ddr_addr_WID;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_WUSER_WIDTH> > m_axi_base_ddr_addr_WUSER;
    sc_out< sc_logic > m_axi_base_ddr_addr_ARVALID;
    sc_in< sc_logic > m_axi_base_ddr_addr_ARREADY;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_ADDR_WIDTH> > m_axi_base_ddr_addr_ARADDR;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_ID_WIDTH> > m_axi_base_ddr_addr_ARID;
    sc_out< sc_lv<8> > m_axi_base_ddr_addr_ARLEN;
    sc_out< sc_lv<3> > m_axi_base_ddr_addr_ARSIZE;
    sc_out< sc_lv<2> > m_axi_base_ddr_addr_ARBURST;
    sc_out< sc_lv<2> > m_axi_base_ddr_addr_ARLOCK;
    sc_out< sc_lv<4> > m_axi_base_ddr_addr_ARCACHE;
    sc_out< sc_lv<3> > m_axi_base_ddr_addr_ARPROT;
    sc_out< sc_lv<4> > m_axi_base_ddr_addr_ARQOS;
    sc_out< sc_lv<4> > m_axi_base_ddr_addr_ARREGION;
    sc_out< sc_uint<C_M_AXI_BASE_DDR_ADDR_ARUSER_WIDTH> > m_axi_base_ddr_addr_ARUSER;
    sc_in< sc_logic > m_axi_base_ddr_addr_RVALID;
    sc_out< sc_logic > m_axi_base_ddr_addr_RREADY;
    sc_in< sc_uint<C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH> > m_axi_base_ddr_addr_RDATA;
    sc_in< sc_logic > m_axi_base_ddr_addr_RLAST;
    sc_in< sc_uint<C_M_AXI_BASE_DDR_ADDR_ID_WIDTH> > m_axi_base_ddr_addr_RID;
    sc_in< sc_uint<C_M_AXI_BASE_DDR_ADDR_RUSER_WIDTH> > m_axi_base_ddr_addr_RUSER;
    sc_in< sc_lv<2> > m_axi_base_ddr_addr_RRESP;
    sc_in< sc_logic > m_axi_base_ddr_addr_BVALID;
    sc_out< sc_logic > m_axi_base_ddr_addr_BREADY;
    sc_in< sc_lv<2> > m_axi_base_ddr_addr_BRESP;
    sc_in< sc_uint<C_M_AXI_BASE_DDR_ADDR_ID_WIDTH> > m_axi_base_ddr_addr_BID;
    sc_in< sc_uint<C_M_AXI_BASE_DDR_ADDR_BUSER_WIDTH> > m_axi_base_ddr_addr_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<64> > ap_var_for_const8;


    // Module declarations
    ddr_to_axis_reader_SD(sc_module_name name);
    SC_HAS_PROCESS(ddr_to_axis_reader_SD);

    ~ddr_to_axis_reader_SD();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    ddr_to_axis_reader_SD_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* ddr_to_axis_reader_SD_AXILiteS_s_axi_U;
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_BASE_DDR_ADDR_ID_WIDTH,C_M_AXI_BASE_DDR_ADDR_ADDR_WIDTH,C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH,C_M_AXI_BASE_DDR_ADDR_AWUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_ARUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_WUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_RUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_BUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR,C_M_AXI_BASE_DDR_ADDR_USER_VALUE,C_M_AXI_BASE_DDR_ADDR_PROT_VALUE,C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE>* ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U;
    ddr_to_axis_readebkb* buffer_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<8> > outStream_channel_1_V_1_data_in;
    sc_signal< sc_lv<8> > outStream_channel_1_V_1_data_out;
    sc_signal< sc_logic > outStream_channel_1_V_1_vld_in;
    sc_signal< sc_logic > outStream_channel_1_V_1_vld_out;
    sc_signal< sc_logic > outStream_channel_1_V_1_ack_in;
    sc_signal< sc_logic > outStream_channel_1_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_channel_1_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_channel_1_V_1_payload_B;
    sc_signal< sc_logic > outStream_channel_1_V_1_sel_rd;
    sc_signal< sc_logic > outStream_channel_1_V_1_sel_wr;
    sc_signal< sc_logic > outStream_channel_1_V_1_sel;
    sc_signal< sc_logic > outStream_channel_1_V_1_load_A;
    sc_signal< sc_logic > outStream_channel_1_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_channel_1_V_1_state;
    sc_signal< sc_logic > outStream_channel_1_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > outstream_channel_2_V_1_data_out;
    sc_signal< sc_logic > outstream_channel_2_V_1_vld_in;
    sc_signal< sc_logic > outstream_channel_2_V_1_vld_out;
    sc_signal< sc_logic > outstream_channel_2_V_1_ack_in;
    sc_signal< sc_logic > outstream_channel_2_V_1_ack_out;
    sc_signal< sc_lv<8> > outstream_channel_2_V_1_payload_A;
    sc_signal< sc_lv<8> > outstream_channel_2_V_1_payload_B;
    sc_signal< sc_logic > outstream_channel_2_V_1_sel_rd;
    sc_signal< sc_logic > outstream_channel_2_V_1_sel_wr;
    sc_signal< sc_logic > outstream_channel_2_V_1_sel;
    sc_signal< sc_logic > outstream_channel_2_V_1_load_A;
    sc_signal< sc_logic > outstream_channel_2_V_1_load_B;
    sc_signal< sc_lv<2> > outstream_channel_2_V_1_state;
    sc_signal< sc_logic > outstream_channel_2_V_1_state_cmp_full;
    sc_signal< sc_lv<32> > base_address;
    sc_signal< sc_lv<32> > frame_buffer_dim;
    sc_signal< sc_lv<32> > frame_buffer_offset;
    sc_signal< sc_lv<8> > frame_buffer_number;
    sc_signal< sc_logic > update_intr;
    sc_signal< sc_logic > stereo_enabler;
    sc_signal< sc_lv<32> > inner_index;
    sc_signal< sc_lv<1> > guard_variable_for_d_2;
    sc_signal< sc_lv<32> > FRAME_BUFFER_DIM_r;
    sc_signal< sc_lv<1> > guard_variable_for_d;
    sc_signal< sc_lv<32> > FRAME_OFFSET;
    sc_signal< sc_lv<1> > guard_variable_for_d_1;
    sc_signal< sc_lv<8> > FRAME_BUFFER_NUMBER_r;
    sc_signal< sc_lv<1> > guard_variable_for_d_3;
    sc_signal< sc_lv<32> > BASE_ADDRESS_r;
    sc_signal< sc_lv<32> > luma_chroma_switch;
    sc_signal< sc_logic > outStream_channel_1_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > tmp_6_reg_1440;
    sc_signal< sc_lv<1> > tmp_16_reg_1444;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<1> > tmp_6_reg_1440_pp1_iter1_reg;
    sc_signal< sc_lv<1> > tmp_16_reg_1444_pp1_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<1> > tmp_reg_1488;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_lv<1> > tmp_reg_1488_pp2_iter1_reg;
    sc_signal< sc_logic > outstream_channel_2_V_TDATA_blk_n;
    sc_signal< sc_logic > base_ddr_addr_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond1_fu_647_p2;
    sc_signal< sc_logic > base_ddr_addr_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_reg_1426;
    sc_signal< sc_logic > base_ddr_addr_AWREADY;
    sc_signal< sc_logic > base_ddr_addr_WREADY;
    sc_signal< sc_logic > base_ddr_addr_ARVALID;
    sc_signal< sc_logic > base_ddr_addr_ARREADY;
    sc_signal< sc_lv<32> > base_ddr_addr_ARADDR;
    sc_signal< sc_logic > base_ddr_addr_RVALID;
    sc_signal< sc_logic > base_ddr_addr_RREADY;
    sc_signal< sc_lv<64> > base_ddr_addr_RDATA;
    sc_signal< sc_logic > base_ddr_addr_RLAST;
    sc_signal< sc_lv<1> > base_ddr_addr_RID;
    sc_signal< sc_lv<1> > base_ddr_addr_RUSER;
    sc_signal< sc_lv<2> > base_ddr_addr_RRESP;
    sc_signal< sc_logic > base_ddr_addr_BVALID;
    sc_signal< sc_lv<2> > base_ddr_addr_BRESP;
    sc_signal< sc_lv<1> > base_ddr_addr_BID;
    sc_signal< sc_lv<1> > base_ddr_addr_BUSER;
    sc_signal< sc_lv<10> > indvar_reg_397;
    sc_signal< sc_lv<10> > indvar_reg_397_pp0_iter1_reg;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<13> > j_reg_409;
    sc_signal< sc_lv<13> > j1_reg_430;
    sc_signal< sc_lv<1> > stereo_enabler_read_reg_1363;
    sc_signal< sc_lv<32> > inner_index_load_reg_1367;
    sc_signal< sc_lv<32> > tmp_1_FRAME_BUFFER_N_1_fu_553_p1;
    sc_signal< sc_lv<32> > tmp_1_FRAME_BUFFER_N_1_reg_1394;
    sc_signal< sc_lv<32> > offset_fu_607_p2;
    sc_signal< sc_lv<20> > tmp_5_reg_1407;
    sc_signal< sc_lv<20> > i_1_fu_652_p2;
    sc_signal< sc_lv<20> > i_1_reg_1415;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_logic > ap_sig_ioackin_base_ddr_addr_ARREADY;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<1> > exitcond_fu_692_p2;
    sc_signal< sc_lv<1> > exitcond_reg_1426_pp0_iter1_reg;
    sc_signal< sc_lv<10> > indvar_next_fu_698_p2;
    sc_signal< sc_lv<10> > indvar_next_reg_1430;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > base_ddr_addr_addr_r_reg_1435;
    sc_signal< sc_lv<1> > tmp_6_fu_709_p3;
    sc_signal< bool > ap_block_state13_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state14_pp1_stage0_iter1;
    sc_signal< bool > ap_predicate_op207_write_state14;
    sc_signal< bool > ap_predicate_op228_write_state14;
    sc_signal< bool > ap_block_state14_io;
    sc_signal< bool > ap_block_state15_pp1_stage0_iter2;
    sc_signal< bool > ap_predicate_op229_write_state15;
    sc_signal< bool > ap_predicate_op230_write_state15;
    sc_signal< bool > ap_block_state15_io;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > tmp_16_fu_721_p2;
    sc_signal< sc_lv<3> > tmp_70_fu_739_p1;
    sc_signal< sc_lv<3> > tmp_70_reg_1448;
    sc_signal< sc_lv<3> > tmp_51_fu_771_p1;
    sc_signal< sc_lv<3> > tmp_51_reg_1458;
    sc_signal< sc_lv<13> > j_4_fu_838_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<8> > tmp_87_fu_955_p1;
    sc_signal< sc_lv<8> > tmp_69_fu_1071_p1;
    sc_signal< sc_lv<32> > offset_1_fu_1076_p2;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<1> > tmp_fu_1082_p3;
    sc_signal< bool > ap_block_state17_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state18_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state18_io;
    sc_signal< bool > ap_block_state19_pp2_stage0_iter2;
    sc_signal< bool > ap_block_state19_io;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<3> > tmp_11_fu_1090_p1;
    sc_signal< sc_lv<3> > tmp_11_reg_1492;
    sc_signal< sc_lv<2> > tmp_13_reg_1503;
    sc_signal< sc_lv<13> > j_2_fu_1119_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<8> > tmp_33_fu_1236_p1;
    sc_signal< sc_lv<8> > tmp_50_fu_1358_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state13;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state17;
    sc_signal< sc_lv<9> > buffer_address0;
    sc_signal< sc_logic > buffer_ce0;
    sc_signal< sc_lv<64> > buffer_q0;
    sc_signal< sc_lv<9> > buffer_address1;
    sc_signal< sc_logic > buffer_ce1;
    sc_signal< sc_logic > buffer_we1;
    sc_signal< sc_lv<64> > buffer_q1;
    sc_signal< sc_lv<1> > ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4;
    sc_signal< sc_lv<1> > guard_variable_for_d_4_load_fu_445_p1;
    sc_signal< sc_lv<32> > ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4;
    sc_signal< sc_lv<1> > ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4;
    sc_signal< sc_lv<1> > guard_variable_for_d_5_load_fu_460_p1;
    sc_signal< sc_lv<32> > ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4;
    sc_signal< sc_lv<1> > ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4;
    sc_signal< sc_lv<1> > guard_variable_for_d_6_load_fu_475_p1;
    sc_signal< sc_lv<8> > ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4;
    sc_signal< sc_lv<1> > ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4;
    sc_signal< sc_lv<1> > guard_variable_for_d_7_load_fu_490_p1;
    sc_signal< sc_lv<32> > ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4;
    sc_signal< sc_lv<32> > offset1_reg_376;
    sc_signal< sc_lv<20> > i_reg_386;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar_phi_fu_401_p4;
    sc_signal< sc_lv<13> > ap_phi_mux_j_1_phi_fu_423_p4;
    sc_signal< sc_lv<13> > j_3_fu_764_p2;
    sc_signal< sc_lv<13> > ap_phi_reg_pp1_iter0_j_1_reg_420;
    sc_signal< sc_lv<64> > indvar1_fu_704_p1;
    sc_signal< sc_lv<64> > gepindex264_cast_fu_753_p1;
    sc_signal< sc_lv<64> > gepindex2_cast_fu_833_p1;
    sc_signal< sc_lv<64> > gepindex276_cast_fu_1104_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_658_p1;
    sc_signal< sc_logic > ap_reg_ioackin_base_ddr_addr_ARREADY;
    sc_signal< sc_lv<32> > storemerge_fu_678_p3;
    sc_signal< sc_lv<1> > p_FRAME_BUFFER_DIM_fl_fu_519_p2;
    sc_signal< sc_lv<1> > p_FRAME_OFFSET_flag_fu_533_p2;
    sc_signal< sc_lv<1> > p_FRAME_BUFFER_NUMBER_fu_539_p2;
    sc_signal< sc_lv<32> > tmp_7_base_address_fu_563_p3;
    sc_signal< sc_lv<1> > p_BASE_ADDRESS_flag_fu_557_p2;
    sc_signal< sc_lv<32> > tmp_18_fu_727_p2;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< bool > ap_block_pp2_stage0_01001;
    sc_signal< sc_lv<29> > tmp_7_fu_505_p4;
    sc_signal< sc_lv<1> > p_FRAME_BUFFER_DIM_fl_fu_519_p1;
    sc_signal< sc_lv<1> > frame_buffer_dim_FRA_fu_525_p0;
    sc_signal< sc_lv<1> > p_FRAME_OFFSET_flag_fu_533_p1;
    sc_signal< sc_lv<1> > p_FRAME_BUFFER_NUMBER_fu_539_p1;
    sc_signal< sc_lv<1> > tmp_1_FRAME_BUFFER_N_fu_545_p0;
    sc_signal< sc_lv<8> > tmp_1_FRAME_BUFFER_N_fu_545_p3;
    sc_signal< sc_lv<1> > p_BASE_ADDRESS_flag_fu_557_p1;
    sc_signal< sc_lv<1> > tmp_7_base_address_fu_563_p0;
    sc_signal< sc_lv<32> > tmp_8_fu_515_p1;
    sc_signal< sc_lv<1> > frame_buffer_offset_s_fu_571_p0;
    sc_signal< sc_lv<1> > tmp_7_BASE_ADDRESS_l_fu_579_p0;
    sc_signal< sc_lv<32> > tmp_s_fu_587_p0;
    sc_signal< sc_lv<32> > frame_buffer_offset_s_fu_571_p3;
    sc_signal< sc_lv<32> > tmp_s_fu_587_p2;
    sc_signal< sc_lv<29> > tmp_2_fu_593_p4;
    sc_signal< sc_lv<32> > tmp_9_fu_603_p1;
    sc_signal< sc_lv<32> > tmp_7_BASE_ADDRESS_l_fu_579_p3;
    sc_signal< sc_lv<32> > frame_buffer_dim_FRA_fu_525_p3;
    sc_signal< sc_lv<1> > tmp_3_fu_669_p2;
    sc_signal< sc_lv<32> > tmp_4_fu_673_p2;
    sc_signal< sc_lv<9> > gepindex62_cast_fu_743_p4;
    sc_signal< sc_lv<10> > tmp_52_fu_775_p4;
    sc_signal< sc_lv<14> > adjSize_fu_785_p1;
    sc_signal< sc_lv<14> > mem_index_gep_fu_789_p2;
    sc_signal< sc_lv<15> > adjSize55_cast_fu_795_p1;
    sc_signal< sc_lv<1> > addrCmp_fu_799_p2;
    sc_signal< sc_lv<15> > gepindex_fu_811_p2;
    sc_signal< sc_lv<1> > addrCmp1_fu_805_p2;
    sc_signal< sc_lv<15> > gepindex1_fu_817_p3;
    sc_signal< sc_lv<15> > gepindex2_fu_825_p3;
    sc_signal< sc_lv<6> > start_pos3_fu_844_p3;
    sc_signal< sc_lv<6> > end_pos3_fu_851_p2;
    sc_signal< sc_lv<7> > tmp_72_fu_863_p1;
    sc_signal< sc_lv<7> > tmp_73_fu_867_p1;
    sc_signal< sc_lv<1> > tmp_71_fu_857_p2;
    sc_signal< sc_lv<7> > tmp_75_fu_881_p2;
    sc_signal< sc_lv<7> > tmp_77_fu_893_p2;
    sc_signal< sc_lv<64> > tmp_74_fu_871_p4;
    sc_signal< sc_lv<7> > tmp_76_fu_887_p2;
    sc_signal< sc_lv<7> > tmp_78_fu_899_p3;
    sc_signal< sc_lv<7> > tmp_80_fu_915_p3;
    sc_signal< sc_lv<7> > tmp_81_fu_923_p2;
    sc_signal< sc_lv<64> > tmp_79_fu_907_p3;
    sc_signal< sc_lv<64> > tmp_82_fu_929_p1;
    sc_signal< sc_lv<64> > tmp_83_fu_933_p1;
    sc_signal< sc_lv<64> > tmp_84_fu_937_p2;
    sc_signal< sc_lv<64> > tmp_85_fu_943_p2;
    sc_signal< sc_lv<64> > tmp_86_fu_949_p2;
    sc_signal< sc_lv<6> > start_pos_fu_960_p3;
    sc_signal< sc_lv<6> > end_pos2_fu_967_p2;
    sc_signal< sc_lv<7> > tmp_54_fu_979_p1;
    sc_signal< sc_lv<7> > tmp_55_fu_983_p1;
    sc_signal< sc_lv<1> > tmp_53_fu_973_p2;
    sc_signal< sc_lv<7> > tmp_57_fu_997_p2;
    sc_signal< sc_lv<7> > tmp_59_fu_1009_p2;
    sc_signal< sc_lv<64> > tmp_56_fu_987_p4;
    sc_signal< sc_lv<7> > tmp_58_fu_1003_p2;
    sc_signal< sc_lv<7> > tmp_60_fu_1015_p3;
    sc_signal< sc_lv<7> > tmp_62_fu_1031_p3;
    sc_signal< sc_lv<7> > tmp_63_fu_1039_p2;
    sc_signal< sc_lv<64> > tmp_61_fu_1023_p3;
    sc_signal< sc_lv<64> > tmp_64_fu_1045_p1;
    sc_signal< sc_lv<64> > tmp_65_fu_1049_p1;
    sc_signal< sc_lv<64> > tmp_66_fu_1053_p2;
    sc_signal< sc_lv<64> > tmp_67_fu_1059_p2;
    sc_signal< sc_lv<64> > tmp_68_fu_1065_p2;
    sc_signal< sc_lv<9> > gepindex74_cast_fu_1094_p4;
    sc_signal< sc_lv<6> > start_pos1_fu_1125_p3;
    sc_signal< sc_lv<6> > end_pos_fu_1132_p2;
    sc_signal< sc_lv<7> > tmp_17_fu_1144_p1;
    sc_signal< sc_lv<7> > tmp_19_fu_1148_p1;
    sc_signal< sc_lv<1> > tmp_15_fu_1138_p2;
    sc_signal< sc_lv<7> > tmp_21_fu_1162_p2;
    sc_signal< sc_lv<7> > tmp_23_fu_1174_p2;
    sc_signal< sc_lv<64> > tmp_20_fu_1152_p4;
    sc_signal< sc_lv<7> > tmp_22_fu_1168_p2;
    sc_signal< sc_lv<7> > tmp_24_fu_1180_p3;
    sc_signal< sc_lv<7> > tmp_26_fu_1196_p3;
    sc_signal< sc_lv<7> > tmp_27_fu_1204_p2;
    sc_signal< sc_lv<64> > tmp_25_fu_1188_p3;
    sc_signal< sc_lv<64> > tmp_28_fu_1210_p1;
    sc_signal< sc_lv<64> > tmp_29_fu_1214_p1;
    sc_signal< sc_lv<64> > tmp_30_fu_1218_p2;
    sc_signal< sc_lv<64> > tmp_31_fu_1224_p2;
    sc_signal< sc_lv<64> > tmp_32_fu_1230_p2;
    sc_signal< sc_lv<3> > tmp_12_fu_1241_p2;
    sc_signal< sc_lv<6> > start_pos2_fu_1246_p3;
    sc_signal< sc_lv<6> > end_pos1_fu_1254_p2;
    sc_signal< sc_lv<7> > tmp_35_fu_1266_p1;
    sc_signal< sc_lv<7> > tmp_36_fu_1270_p1;
    sc_signal< sc_lv<1> > tmp_34_fu_1260_p2;
    sc_signal< sc_lv<7> > tmp_38_fu_1284_p2;
    sc_signal< sc_lv<7> > tmp_40_fu_1296_p2;
    sc_signal< sc_lv<64> > tmp_37_fu_1274_p4;
    sc_signal< sc_lv<7> > tmp_39_fu_1290_p2;
    sc_signal< sc_lv<7> > tmp_41_fu_1302_p3;
    sc_signal< sc_lv<7> > tmp_43_fu_1318_p3;
    sc_signal< sc_lv<7> > tmp_44_fu_1326_p2;
    sc_signal< sc_lv<64> > tmp_42_fu_1310_p3;
    sc_signal< sc_lv<64> > tmp_45_fu_1332_p1;
    sc_signal< sc_lv<64> > tmp_46_fu_1336_p1;
    sc_signal< sc_lv<64> > tmp_47_fu_1340_p2;
    sc_signal< sc_lv<64> > tmp_48_fu_1346_p2;
    sc_signal< sc_lv<64> > tmp_49_fu_1352_p2;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    sc_signal< bool > ap_condition_782;
    sc_signal< bool > ap_condition_1458;
    sc_signal< bool > ap_condition_473;
    sc_signal< bool > ap_condition_544;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_state8;
    static const sc_lv<13> ap_ST_fsm_pp0_stage0;
    static const sc_lv<13> ap_ST_fsm_state12;
    static const sc_lv<13> ap_ST_fsm_pp1_stage0;
    static const sc_lv<13> ap_ST_fsm_state16;
    static const sc_lv<13> ap_ST_fsm_pp2_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR;
    static const int C_M_AXI_BASE_DDR_ADDR_USER_VALUE;
    static const int C_M_AXI_BASE_DDR_ADDR_PROT_VALUE;
    static const int C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<20> ap_const_lv20_1;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<13> ap_const_lv13_1FFF;
    static const sc_lv<14> ap_const_lv14_4;
    static const sc_lv<10> ap_const_lv10_3FC;
    static const sc_lv<14> ap_const_lv14_204;
    static const sc_lv<15> ap_const_lv15_7FFC;
    static const sc_lv<15> ap_const_lv15_1FF;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<6> ap_const_lv6_7;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<7> ap_const_lv7_3F;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFF;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<13> ap_const_lv13_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<64> ap_const_lv64_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_addrCmp1_fu_805_p2();
    void thread_addrCmp_fu_799_p2();
    void thread_adjSize55_cast_fu_795_p1();
    void thread_adjSize_fu_785_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_01001();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state13_pp1_stage0_iter0();
    void thread_ap_block_state14_io();
    void thread_ap_block_state14_pp1_stage0_iter1();
    void thread_ap_block_state15_io();
    void thread_ap_block_state15_pp1_stage0_iter2();
    void thread_ap_block_state17_pp2_stage0_iter0();
    void thread_ap_block_state18_io();
    void thread_ap_block_state18_pp2_stage0_iter1();
    void thread_ap_block_state19_io();
    void thread_ap_block_state19_pp2_stage0_iter2();
    void thread_ap_block_state2();
    void thread_ap_block_state2_io();
    void thread_ap_block_state9_pp0_stage0_iter0();
    void thread_ap_condition_1458();
    void thread_ap_condition_473();
    void thread_ap_condition_544();
    void thread_ap_condition_782();
    void thread_ap_condition_pp0_exit_iter0_state9();
    void thread_ap_condition_pp1_exit_iter0_state13();
    void thread_ap_condition_pp2_exit_iter0_state17();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4();
    void thread_ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4();
    void thread_ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4();
    void thread_ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4();
    void thread_ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4();
    void thread_ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4();
    void thread_ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4();
    void thread_ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4();
    void thread_ap_phi_mux_indvar_phi_fu_401_p4();
    void thread_ap_phi_mux_j_1_phi_fu_423_p4();
    void thread_ap_phi_reg_pp1_iter0_j_1_reg_420();
    void thread_ap_predicate_op207_write_state14();
    void thread_ap_predicate_op228_write_state14();
    void thread_ap_predicate_op229_write_state15();
    void thread_ap_predicate_op230_write_state15();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_base_ddr_addr_ARREADY();
    void thread_base_ddr_addr_ARADDR();
    void thread_base_ddr_addr_ARVALID();
    void thread_base_ddr_addr_RREADY();
    void thread_base_ddr_addr_blk_n_AR();
    void thread_base_ddr_addr_blk_n_R();
    void thread_buffer_address0();
    void thread_buffer_address1();
    void thread_buffer_ce0();
    void thread_buffer_ce1();
    void thread_buffer_we1();
    void thread_end_pos1_fu_1254_p2();
    void thread_end_pos2_fu_967_p2();
    void thread_end_pos3_fu_851_p2();
    void thread_end_pos_fu_1132_p2();
    void thread_exitcond1_fu_647_p2();
    void thread_exitcond_fu_692_p2();
    void thread_frame_buffer_dim_FRA_fu_525_p0();
    void thread_frame_buffer_dim_FRA_fu_525_p3();
    void thread_frame_buffer_offset_s_fu_571_p0();
    void thread_frame_buffer_offset_s_fu_571_p3();
    void thread_gepindex1_fu_817_p3();
    void thread_gepindex264_cast_fu_753_p1();
    void thread_gepindex276_cast_fu_1104_p1();
    void thread_gepindex2_cast_fu_833_p1();
    void thread_gepindex2_fu_825_p3();
    void thread_gepindex62_cast_fu_743_p4();
    void thread_gepindex74_cast_fu_1094_p4();
    void thread_gepindex_fu_811_p2();
    void thread_guard_variable_for_d_4_load_fu_445_p1();
    void thread_guard_variable_for_d_5_load_fu_460_p1();
    void thread_guard_variable_for_d_6_load_fu_475_p1();
    void thread_guard_variable_for_d_7_load_fu_490_p1();
    void thread_i_1_fu_652_p2();
    void thread_indvar1_fu_704_p1();
    void thread_indvar_next_fu_698_p2();
    void thread_j_2_fu_1119_p2();
    void thread_j_3_fu_764_p2();
    void thread_j_4_fu_838_p2();
    void thread_mem_index_gep_fu_789_p2();
    void thread_offset_1_fu_1076_p2();
    void thread_offset_fu_607_p2();
    void thread_outStream_channel_1_V_1_ack_in();
    void thread_outStream_channel_1_V_1_ack_out();
    void thread_outStream_channel_1_V_1_data_in();
    void thread_outStream_channel_1_V_1_data_out();
    void thread_outStream_channel_1_V_1_load_A();
    void thread_outStream_channel_1_V_1_load_B();
    void thread_outStream_channel_1_V_1_sel();
    void thread_outStream_channel_1_V_1_state_cmp_full();
    void thread_outStream_channel_1_V_1_vld_in();
    void thread_outStream_channel_1_V_1_vld_out();
    void thread_outStream_channel_1_V_TDATA();
    void thread_outStream_channel_1_V_TDATA_blk_n();
    void thread_outStream_channel_1_V_TVALID();
    void thread_outstream_channel_2_V_1_ack_in();
    void thread_outstream_channel_2_V_1_ack_out();
    void thread_outstream_channel_2_V_1_data_out();
    void thread_outstream_channel_2_V_1_load_A();
    void thread_outstream_channel_2_V_1_load_B();
    void thread_outstream_channel_2_V_1_sel();
    void thread_outstream_channel_2_V_1_state_cmp_full();
    void thread_outstream_channel_2_V_1_vld_in();
    void thread_outstream_channel_2_V_1_vld_out();
    void thread_outstream_channel_2_V_TDATA();
    void thread_outstream_channel_2_V_TDATA_blk_n();
    void thread_outstream_channel_2_V_TVALID();
    void thread_p_BASE_ADDRESS_flag_fu_557_p1();
    void thread_p_BASE_ADDRESS_flag_fu_557_p2();
    void thread_p_FRAME_BUFFER_DIM_fl_fu_519_p1();
    void thread_p_FRAME_BUFFER_DIM_fl_fu_519_p2();
    void thread_p_FRAME_BUFFER_NUMBER_fu_539_p1();
    void thread_p_FRAME_BUFFER_NUMBER_fu_539_p2();
    void thread_p_FRAME_OFFSET_flag_fu_533_p1();
    void thread_p_FRAME_OFFSET_flag_fu_533_p2();
    void thread_start_pos1_fu_1125_p3();
    void thread_start_pos2_fu_1246_p3();
    void thread_start_pos3_fu_844_p3();
    void thread_start_pos_fu_960_p3();
    void thread_storemerge_fu_678_p3();
    void thread_tmp_11_fu_1090_p1();
    void thread_tmp_12_fu_1241_p2();
    void thread_tmp_15_fu_1138_p2();
    void thread_tmp_16_fu_721_p2();
    void thread_tmp_17_fu_1144_p1();
    void thread_tmp_18_fu_727_p2();
    void thread_tmp_19_fu_1148_p1();
    void thread_tmp_1_FRAME_BUFFER_N_1_fu_553_p1();
    void thread_tmp_1_FRAME_BUFFER_N_fu_545_p0();
    void thread_tmp_1_FRAME_BUFFER_N_fu_545_p3();
    void thread_tmp_1_fu_658_p1();
    void thread_tmp_20_fu_1152_p4();
    void thread_tmp_21_fu_1162_p2();
    void thread_tmp_22_fu_1168_p2();
    void thread_tmp_23_fu_1174_p2();
    void thread_tmp_24_fu_1180_p3();
    void thread_tmp_25_fu_1188_p3();
    void thread_tmp_26_fu_1196_p3();
    void thread_tmp_27_fu_1204_p2();
    void thread_tmp_28_fu_1210_p1();
    void thread_tmp_29_fu_1214_p1();
    void thread_tmp_2_fu_593_p4();
    void thread_tmp_30_fu_1218_p2();
    void thread_tmp_31_fu_1224_p2();
    void thread_tmp_32_fu_1230_p2();
    void thread_tmp_33_fu_1236_p1();
    void thread_tmp_34_fu_1260_p2();
    void thread_tmp_35_fu_1266_p1();
    void thread_tmp_36_fu_1270_p1();
    void thread_tmp_37_fu_1274_p4();
    void thread_tmp_38_fu_1284_p2();
    void thread_tmp_39_fu_1290_p2();
    void thread_tmp_3_fu_669_p2();
    void thread_tmp_40_fu_1296_p2();
    void thread_tmp_41_fu_1302_p3();
    void thread_tmp_42_fu_1310_p3();
    void thread_tmp_43_fu_1318_p3();
    void thread_tmp_44_fu_1326_p2();
    void thread_tmp_45_fu_1332_p1();
    void thread_tmp_46_fu_1336_p1();
    void thread_tmp_47_fu_1340_p2();
    void thread_tmp_48_fu_1346_p2();
    void thread_tmp_49_fu_1352_p2();
    void thread_tmp_4_fu_673_p2();
    void thread_tmp_50_fu_1358_p1();
    void thread_tmp_51_fu_771_p1();
    void thread_tmp_52_fu_775_p4();
    void thread_tmp_53_fu_973_p2();
    void thread_tmp_54_fu_979_p1();
    void thread_tmp_55_fu_983_p1();
    void thread_tmp_56_fu_987_p4();
    void thread_tmp_57_fu_997_p2();
    void thread_tmp_58_fu_1003_p2();
    void thread_tmp_59_fu_1009_p2();
    void thread_tmp_60_fu_1015_p3();
    void thread_tmp_61_fu_1023_p3();
    void thread_tmp_62_fu_1031_p3();
    void thread_tmp_63_fu_1039_p2();
    void thread_tmp_64_fu_1045_p1();
    void thread_tmp_65_fu_1049_p1();
    void thread_tmp_66_fu_1053_p2();
    void thread_tmp_67_fu_1059_p2();
    void thread_tmp_68_fu_1065_p2();
    void thread_tmp_69_fu_1071_p1();
    void thread_tmp_6_fu_709_p3();
    void thread_tmp_70_fu_739_p1();
    void thread_tmp_71_fu_857_p2();
    void thread_tmp_72_fu_863_p1();
    void thread_tmp_73_fu_867_p1();
    void thread_tmp_74_fu_871_p4();
    void thread_tmp_75_fu_881_p2();
    void thread_tmp_76_fu_887_p2();
    void thread_tmp_77_fu_893_p2();
    void thread_tmp_78_fu_899_p3();
    void thread_tmp_79_fu_907_p3();
    void thread_tmp_7_BASE_ADDRESS_l_fu_579_p0();
    void thread_tmp_7_BASE_ADDRESS_l_fu_579_p3();
    void thread_tmp_7_base_address_fu_563_p0();
    void thread_tmp_7_base_address_fu_563_p3();
    void thread_tmp_7_fu_505_p4();
    void thread_tmp_80_fu_915_p3();
    void thread_tmp_81_fu_923_p2();
    void thread_tmp_82_fu_929_p1();
    void thread_tmp_83_fu_933_p1();
    void thread_tmp_84_fu_937_p2();
    void thread_tmp_85_fu_943_p2();
    void thread_tmp_86_fu_949_p2();
    void thread_tmp_87_fu_955_p1();
    void thread_tmp_8_fu_515_p1();
    void thread_tmp_9_fu_603_p1();
    void thread_tmp_fu_1082_p3();
    void thread_tmp_s_fu_587_p0();
    void thread_tmp_s_fu_587_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
