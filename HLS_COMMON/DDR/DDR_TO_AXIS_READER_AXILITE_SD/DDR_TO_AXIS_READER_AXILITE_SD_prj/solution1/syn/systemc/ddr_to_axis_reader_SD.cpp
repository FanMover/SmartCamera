// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ddr_to_axis_reader_SD.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ddr_to_axis_reader_SD::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ddr_to_axis_reader_SD::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state1 = "1";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state2 = "10";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state3 = "100";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state4 = "1000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state5 = "10000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state6 = "100000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state12 = "1000000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_pp1_stage0 = "10000000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_state16 = "100000000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_ST_fsm_pp2_stage0 = "1000000000000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool ddr_to_axis_reader_SD::ap_const_boolean_1 = true;
const sc_lv<1> ddr_to_axis_reader_SD::ap_const_lv1_0 = "0";
const sc_lv<1> ddr_to_axis_reader_SD::ap_const_lv1_1 = "1";
const sc_lv<2> ddr_to_axis_reader_SD::ap_const_lv2_0 = "00";
const sc_lv<2> ddr_to_axis_reader_SD::ap_const_lv2_2 = "10";
const sc_lv<2> ddr_to_axis_reader_SD::ap_const_lv2_3 = "11";
const sc_lv<2> ddr_to_axis_reader_SD::ap_const_lv2_1 = "1";
const sc_lv<8> ddr_to_axis_reader_SD::ap_const_lv8_0 = "00000000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_A = "1010";
const bool ddr_to_axis_reader_SD::ap_const_boolean_0 = false;
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_C = "1100";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_1 = "1";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_8 = "1000";
const int ddr_to_axis_reader_SD::C_S_AXI_DATA_WIDTH = "100000";
const int ddr_to_axis_reader_SD::C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader_SD::C_M_AXI_BASE_DDR_ADDR_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader_SD::C_M_AXI_BASE_DDR_ADDR_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ddr_to_axis_reader_SD::C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE = "11";
const int ddr_to_axis_reader_SD::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_B = "1011";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_7 = "111";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_9 = "1001";
const sc_lv<20> ddr_to_axis_reader_SD::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<10> ddr_to_axis_reader_SD::ap_const_lv10_0 = "0000000000";
const sc_lv<13> ddr_to_axis_reader_SD::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_200 = "1000000000";
const sc_lv<3> ddr_to_axis_reader_SD::ap_const_lv3_0 = "000";
const sc_lv<4> ddr_to_axis_reader_SD::ap_const_lv4_0 = "0000";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_3 = "11";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_1F = "11111";
const sc_lv<20> ddr_to_axis_reader_SD::ap_const_lv20_1 = "1";
const sc_lv<10> ddr_to_axis_reader_SD::ap_const_lv10_200 = "1000000000";
const sc_lv<10> ddr_to_axis_reader_SD::ap_const_lv10_1 = "1";
const sc_lv<13> ddr_to_axis_reader_SD::ap_const_lv13_1FFF = "1111111111111";
const sc_lv<14> ddr_to_axis_reader_SD::ap_const_lv14_4 = "100";
const sc_lv<10> ddr_to_axis_reader_SD::ap_const_lv10_3FC = "1111111100";
const sc_lv<14> ddr_to_axis_reader_SD::ap_const_lv14_204 = "1000000100";
const sc_lv<15> ddr_to_axis_reader_SD::ap_const_lv15_7FFC = "111111111111100";
const sc_lv<15> ddr_to_axis_reader_SD::ap_const_lv15_1FF = "111111111";
const sc_lv<13> ddr_to_axis_reader_SD::ap_const_lv13_1 = "1";
const sc_lv<6> ddr_to_axis_reader_SD::ap_const_lv6_7 = "111";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_3F = "111111";
const sc_lv<7> ddr_to_axis_reader_SD::ap_const_lv7_3F = "111111";
const sc_lv<64> ddr_to_axis_reader_SD::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> ddr_to_axis_reader_SD::ap_const_lv32_2 = "10";
const sc_lv<13> ddr_to_axis_reader_SD::ap_const_lv13_2 = "10";
const sc_lv<3> ddr_to_axis_reader_SD::ap_const_lv3_1 = "1";
const sc_lv<64> ddr_to_axis_reader_SD::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

ddr_to_axis_reader_SD::ddr_to_axis_reader_SD(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U = new ddr_to_axis_reader_SD_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("ddr_to_axis_reader_SD_AXILiteS_s_axi_U");
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ACLK(ap_clk);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ap_start(ap_start);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->interrupt(interrupt);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ap_ready(ap_ready);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ap_done(ap_done);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->ap_idle(ap_idle);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->base_address(base_address);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->frame_buffer_dim(frame_buffer_dim);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->frame_buffer_offset(frame_buffer_offset);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->frame_buffer_number(frame_buffer_number);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->update_intr(update_intr);
    ddr_to_axis_reader_SD_AXILiteS_s_axi_U->stereo_enabler(stereo_enabler);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U = new ddr_to_axis_reader_SD_base_ddr_addr_m_axi<0,64,32,5,16,16,16,16,C_M_AXI_BASE_DDR_ADDR_ID_WIDTH,C_M_AXI_BASE_DDR_ADDR_ADDR_WIDTH,C_M_AXI_BASE_DDR_ADDR_DATA_WIDTH,C_M_AXI_BASE_DDR_ADDR_AWUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_ARUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_WUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_RUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_BUSER_WIDTH,C_M_AXI_BASE_DDR_ADDR_TARGET_ADDR,C_M_AXI_BASE_DDR_ADDR_USER_VALUE,C_M_AXI_BASE_DDR_ADDR_PROT_VALUE,C_M_AXI_BASE_DDR_ADDR_CACHE_VALUE>("ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U");
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWVALID(m_axi_base_ddr_addr_AWVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWREADY(m_axi_base_ddr_addr_AWREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWADDR(m_axi_base_ddr_addr_AWADDR);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWID(m_axi_base_ddr_addr_AWID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWLEN(m_axi_base_ddr_addr_AWLEN);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWSIZE(m_axi_base_ddr_addr_AWSIZE);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWBURST(m_axi_base_ddr_addr_AWBURST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWLOCK(m_axi_base_ddr_addr_AWLOCK);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWCACHE(m_axi_base_ddr_addr_AWCACHE);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWPROT(m_axi_base_ddr_addr_AWPROT);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWQOS(m_axi_base_ddr_addr_AWQOS);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWREGION(m_axi_base_ddr_addr_AWREGION);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->AWUSER(m_axi_base_ddr_addr_AWUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WVALID(m_axi_base_ddr_addr_WVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WREADY(m_axi_base_ddr_addr_WREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WDATA(m_axi_base_ddr_addr_WDATA);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WSTRB(m_axi_base_ddr_addr_WSTRB);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WLAST(m_axi_base_ddr_addr_WLAST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WID(m_axi_base_ddr_addr_WID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->WUSER(m_axi_base_ddr_addr_WUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARVALID(m_axi_base_ddr_addr_ARVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARREADY(m_axi_base_ddr_addr_ARREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARADDR(m_axi_base_ddr_addr_ARADDR);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARID(m_axi_base_ddr_addr_ARID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARLEN(m_axi_base_ddr_addr_ARLEN);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARSIZE(m_axi_base_ddr_addr_ARSIZE);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARBURST(m_axi_base_ddr_addr_ARBURST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARLOCK(m_axi_base_ddr_addr_ARLOCK);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARCACHE(m_axi_base_ddr_addr_ARCACHE);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARPROT(m_axi_base_ddr_addr_ARPROT);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARQOS(m_axi_base_ddr_addr_ARQOS);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARREGION(m_axi_base_ddr_addr_ARREGION);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARUSER(m_axi_base_ddr_addr_ARUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RVALID(m_axi_base_ddr_addr_RVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RREADY(m_axi_base_ddr_addr_RREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RDATA(m_axi_base_ddr_addr_RDATA);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RLAST(m_axi_base_ddr_addr_RLAST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RID(m_axi_base_ddr_addr_RID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RUSER(m_axi_base_ddr_addr_RUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->RRESP(m_axi_base_ddr_addr_RRESP);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BVALID(m_axi_base_ddr_addr_BVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BREADY(m_axi_base_ddr_addr_BREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BRESP(m_axi_base_ddr_addr_BRESP);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BID(m_axi_base_ddr_addr_BID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->BUSER(m_axi_base_ddr_addr_BUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ACLK(ap_clk);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ARESET(ap_rst_n_inv);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->ACLK_EN(ap_var_for_const0);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARVALID(base_ddr_addr_ARVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARREADY(base_ddr_addr_ARREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARADDR(base_ddr_addr_ARADDR);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARID(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARLEN(ap_var_for_const2);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARSIZE(ap_var_for_const3);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARLOCK(ap_var_for_const4);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARCACHE(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARQOS(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARPROT(ap_var_for_const3);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARUSER(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARBURST(ap_var_for_const4);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_ARREGION(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RVALID(base_ddr_addr_RVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RREADY(base_ddr_addr_RREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RDATA(base_ddr_addr_RDATA);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RID(base_ddr_addr_RID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RUSER(base_ddr_addr_RUSER);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RRESP(base_ddr_addr_RRESP);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_RLAST(base_ddr_addr_RLAST);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWVALID(ap_var_for_const6);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWREADY(base_ddr_addr_AWREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWADDR(ap_var_for_const7);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWID(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWLEN(ap_var_for_const7);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWSIZE(ap_var_for_const3);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWLOCK(ap_var_for_const4);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWCACHE(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWQOS(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWPROT(ap_var_for_const3);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWUSER(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWBURST(ap_var_for_const4);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_AWREGION(ap_var_for_const5);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WVALID(ap_var_for_const6);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WREADY(base_ddr_addr_WREADY);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WDATA(ap_var_for_const8);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WID(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WUSER(ap_var_for_const1);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WLAST(ap_var_for_const6);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_WSTRB(ap_var_for_const9);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BVALID(base_ddr_addr_BVALID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BREADY(ap_var_for_const6);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BRESP(base_ddr_addr_BRESP);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BID(base_ddr_addr_BID);
    ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U->I_BUSER(base_ddr_addr_BUSER);
    buffer_U = new ddr_to_axis_readebkb("buffer_U");
    buffer_U->clk(ap_clk);
    buffer_U->reset(ap_rst_n_inv);
    buffer_U->address0(buffer_address0);
    buffer_U->ce0(buffer_ce0);
    buffer_U->q0(buffer_q0);
    buffer_U->address1(buffer_address1);
    buffer_U->ce1(buffer_ce1);
    buffer_U->we1(buffer_we1);
    buffer_U->d1(base_ddr_addr_addr_r_reg_1435);
    buffer_U->q1(buffer_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_addrCmp1_fu_805_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( tmp_6_fu_709_p3 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( tmp_16_fu_721_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( mem_index_gep_fu_789_p2 );

    SC_METHOD(thread_addrCmp_fu_799_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( tmp_6_fu_709_p3 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( tmp_16_fu_721_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_52_fu_775_p4 );

    SC_METHOD(thread_adjSize55_cast_fu_795_p1);
    sensitive << ( mem_index_gep_fu_789_p2 );

    SC_METHOD(thread_adjSize_fu_785_p1);
    sensitive << ( tmp_52_fu_775_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_1426 );
    sensitive << ( base_ddr_addr_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_1426 );
    sensitive << ( base_ddr_addr_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state14_io );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state14_io );
    sensitive << ( ap_block_state15_io );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_01001);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_state18_io );
    sensitive << ( ap_block_state19_io );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_state18_io );
    sensitive << ( ap_block_state19_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);
    sensitive << ( exitcond_reg_1426 );
    sensitive << ( base_ddr_addr_RVALID );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state13_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state14_io);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( ap_predicate_op207_write_state14 );
    sensitive << ( ap_predicate_op228_write_state14 );

    SC_METHOD(thread_ap_block_state14_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state15_io);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( ap_predicate_op229_write_state15 );
    sensitive << ( ap_predicate_op230_write_state15 );

    SC_METHOD(thread_ap_block_state15_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state17_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state18_io);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( tmp_reg_1488 );

    SC_METHOD(thread_ap_block_state18_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state19_io);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( tmp_reg_1488_pp2_iter1_reg );

    SC_METHOD(thread_ap_block_state19_pp2_stage0_iter2);

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( exitcond1_fu_647_p2 );
    sensitive << ( ap_sig_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_1458);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( base_ddr_addr_ARREADY );

    SC_METHOD(thread_ap_condition_473);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_condition_544);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( tmp_6_fu_709_p3 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_condition_782);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_6_fu_709_p3 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state9);
    sensitive << ( exitcond_fu_692_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state13);
    sensitive << ( tmp_6_fu_709_p3 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state17);
    sensitive << ( tmp_fu_1082_p3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_647_p2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_d_7_load_fu_490_p1 );

    SC_METHOD(thread_ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( base_address );
    sensitive << ( BASE_ADDRESS_r );
    sensitive << ( guard_variable_for_d_7_load_fu_490_p1 );

    SC_METHOD(thread_ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_d_4_load_fu_445_p1 );

    SC_METHOD(thread_ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( frame_buffer_dim );
    sensitive << ( FRAME_BUFFER_DIM_r );
    sensitive << ( guard_variable_for_d_4_load_fu_445_p1 );

    SC_METHOD(thread_ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_d_6_load_fu_475_p1 );

    SC_METHOD(thread_ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( frame_buffer_number );
    sensitive << ( FRAME_BUFFER_NUMBER_r );
    sensitive << ( guard_variable_for_d_6_load_fu_475_p1 );

    SC_METHOD(thread_ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_d_5_load_fu_460_p1 );

    SC_METHOD(thread_ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( frame_buffer_offset );
    sensitive << ( FRAME_OFFSET );
    sensitive << ( guard_variable_for_d_5_load_fu_460_p1 );

    SC_METHOD(thread_ap_phi_mux_indvar_phi_fu_401_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_1426 );
    sensitive << ( indvar_reg_397 );
    sensitive << ( indvar_next_reg_1430 );

    SC_METHOD(thread_ap_phi_mux_j_1_phi_fu_423_p4);
    sensitive << ( j_reg_409 );
    sensitive << ( tmp_16_fu_721_p2 );
    sensitive << ( j_3_fu_764_p2 );
    sensitive << ( ap_phi_reg_pp1_iter0_j_1_reg_420 );
    sensitive << ( ap_condition_782 );

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_j_1_reg_420);

    SC_METHOD(thread_ap_predicate_op207_write_state14);
    sensitive << ( tmp_6_reg_1440 );
    sensitive << ( tmp_16_reg_1444 );

    SC_METHOD(thread_ap_predicate_op228_write_state14);
    sensitive << ( tmp_6_reg_1440 );
    sensitive << ( tmp_16_reg_1444 );

    SC_METHOD(thread_ap_predicate_op229_write_state15);
    sensitive << ( tmp_6_reg_1440_pp1_iter1_reg );
    sensitive << ( tmp_16_reg_1444_pp1_iter1_reg );

    SC_METHOD(thread_ap_predicate_op230_write_state15);
    sensitive << ( tmp_6_reg_1440_pp1_iter1_reg );
    sensitive << ( tmp_16_reg_1444_pp1_iter1_reg );

    SC_METHOD(thread_ap_ready);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_647_p2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_base_ddr_addr_ARREADY);
    sensitive << ( base_ddr_addr_ARREADY );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_ARADDR);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_647_p2 );
    sensitive << ( tmp_1_fu_658_p1 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_ARVALID);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_647_p2 );
    sensitive << ( ap_reg_ioackin_base_ddr_addr_ARREADY );

    SC_METHOD(thread_base_ddr_addr_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_1426 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_base_ddr_addr_blk_n_AR);
    sensitive << ( m_axi_base_ddr_addr_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_647_p2 );

    SC_METHOD(thread_base_ddr_addr_blk_n_R);
    sensitive << ( m_axi_base_ddr_addr_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_1426 );

    SC_METHOD(thread_buffer_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( tmp_6_fu_709_p3 );
    sensitive << ( tmp_16_fu_721_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( gepindex264_cast_fu_753_p1 );
    sensitive << ( gepindex2_cast_fu_833_p1 );
    sensitive << ( gepindex276_cast_fu_1104_p1 );

    SC_METHOD(thread_buffer_address1);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( indvar1_fu_704_p1 );
    sensitive << ( gepindex276_cast_fu_1104_p1 );

    SC_METHOD(thread_buffer_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( tmp_6_fu_709_p3 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( tmp_16_fu_721_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_buffer_ce1);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buffer_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_reg_1426_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_end_pos1_fu_1254_p2);
    sensitive << ( start_pos2_fu_1246_p3 );

    SC_METHOD(thread_end_pos2_fu_967_p2);
    sensitive << ( start_pos_fu_960_p3 );

    SC_METHOD(thread_end_pos3_fu_851_p2);
    sensitive << ( start_pos3_fu_844_p3 );

    SC_METHOD(thread_end_pos_fu_1132_p2);
    sensitive << ( start_pos1_fu_1125_p3 );

    SC_METHOD(thread_exitcond1_fu_647_p2);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_5_reg_1407 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( i_reg_386 );

    SC_METHOD(thread_exitcond_fu_692_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_phi_fu_401_p4 );

    SC_METHOD(thread_frame_buffer_dim_FRA_fu_525_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_frame_buffer_dim_FRA_fu_525_p3);
    sensitive << ( frame_buffer_dim );
    sensitive << ( ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4 );
    sensitive << ( frame_buffer_dim_FRA_fu_525_p0 );

    SC_METHOD(thread_frame_buffer_offset_s_fu_571_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_frame_buffer_offset_s_fu_571_p3);
    sensitive << ( frame_buffer_offset );
    sensitive << ( ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4 );
    sensitive << ( frame_buffer_offset_s_fu_571_p0 );

    SC_METHOD(thread_gepindex1_fu_817_p3);
    sensitive << ( addrCmp_fu_799_p2 );
    sensitive << ( gepindex_fu_811_p2 );

    SC_METHOD(thread_gepindex264_cast_fu_753_p1);
    sensitive << ( gepindex62_cast_fu_743_p4 );

    SC_METHOD(thread_gepindex276_cast_fu_1104_p1);
    sensitive << ( gepindex74_cast_fu_1094_p4 );

    SC_METHOD(thread_gepindex2_cast_fu_833_p1);
    sensitive << ( gepindex2_fu_825_p3 );

    SC_METHOD(thread_gepindex2_fu_825_p3);
    sensitive << ( addrCmp1_fu_805_p2 );
    sensitive << ( gepindex1_fu_817_p3 );

    SC_METHOD(thread_gepindex62_cast_fu_743_p4);
    sensitive << ( j_reg_409 );

    SC_METHOD(thread_gepindex74_cast_fu_1094_p4);
    sensitive << ( j1_reg_430 );

    SC_METHOD(thread_gepindex_fu_811_p2);
    sensitive << ( adjSize55_cast_fu_795_p1 );

    SC_METHOD(thread_guard_variable_for_d_4_load_fu_445_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_d_2 );

    SC_METHOD(thread_guard_variable_for_d_5_load_fu_460_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_d );

    SC_METHOD(thread_guard_variable_for_d_6_load_fu_475_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_d_1 );

    SC_METHOD(thread_guard_variable_for_d_7_load_fu_490_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( guard_variable_for_d_3 );

    SC_METHOD(thread_i_1_fu_652_p2);
    sensitive << ( i_reg_386 );

    SC_METHOD(thread_indvar1_fu_704_p1);
    sensitive << ( indvar_reg_397_pp0_iter1_reg );

    SC_METHOD(thread_indvar_next_fu_698_p2);
    sensitive << ( ap_phi_mux_indvar_phi_fu_401_p4 );

    SC_METHOD(thread_j_2_fu_1119_p2);
    sensitive << ( j1_reg_430 );

    SC_METHOD(thread_j_3_fu_764_p2);
    sensitive << ( j_reg_409 );

    SC_METHOD(thread_j_4_fu_838_p2);
    sensitive << ( ap_phi_mux_j_1_phi_fu_423_p4 );

    SC_METHOD(thread_mem_index_gep_fu_789_p2);
    sensitive << ( adjSize_fu_785_p1 );

    SC_METHOD(thread_offset_1_fu_1076_p2);
    sensitive << ( offset1_reg_376 );

    SC_METHOD(thread_offset_fu_607_p2);
    sensitive << ( tmp_9_fu_603_p1 );
    sensitive << ( tmp_7_BASE_ADDRESS_l_fu_579_p3 );

    SC_METHOD(thread_outStream_channel_1_V_1_ack_in);
    sensitive << ( outStream_channel_1_V_1_state );

    SC_METHOD(thread_outStream_channel_1_V_1_ack_out);
    sensitive << ( outStream_channel_1_V_TREADY );

    SC_METHOD(thread_outStream_channel_1_V_1_data_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_reg_1488 );
    sensitive << ( ap_predicate_op207_write_state14 );
    sensitive << ( ap_predicate_op228_write_state14 );
    sensitive << ( tmp_87_fu_955_p1 );
    sensitive << ( tmp_69_fu_1071_p1 );
    sensitive << ( tmp_33_fu_1236_p1 );
    sensitive << ( ap_block_pp1_stage0_01001 );
    sensitive << ( ap_block_pp2_stage0_01001 );

    SC_METHOD(thread_outStream_channel_1_V_1_data_out);
    sensitive << ( outStream_channel_1_V_1_payload_A );
    sensitive << ( outStream_channel_1_V_1_payload_B );
    sensitive << ( outStream_channel_1_V_1_sel );

    SC_METHOD(thread_outStream_channel_1_V_1_load_A);
    sensitive << ( outStream_channel_1_V_1_sel_wr );
    sensitive << ( outStream_channel_1_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_channel_1_V_1_load_B);
    sensitive << ( outStream_channel_1_V_1_sel_wr );
    sensitive << ( outStream_channel_1_V_1_state_cmp_full );

    SC_METHOD(thread_outStream_channel_1_V_1_sel);
    sensitive << ( outStream_channel_1_V_1_sel_rd );

    SC_METHOD(thread_outStream_channel_1_V_1_state_cmp_full);
    sensitive << ( outStream_channel_1_V_1_state );

    SC_METHOD(thread_outStream_channel_1_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_reg_1488 );
    sensitive << ( ap_predicate_op207_write_state14 );
    sensitive << ( ap_predicate_op228_write_state14 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_outStream_channel_1_V_1_vld_out);
    sensitive << ( outStream_channel_1_V_1_state );

    SC_METHOD(thread_outStream_channel_1_V_TDATA);
    sensitive << ( outStream_channel_1_V_1_data_out );

    SC_METHOD(thread_outStream_channel_1_V_TDATA_blk_n);
    sensitive << ( outStream_channel_1_V_1_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_6_reg_1440 );
    sensitive << ( tmp_16_reg_1444 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( tmp_6_reg_1440_pp1_iter1_reg );
    sensitive << ( tmp_16_reg_1444_pp1_iter1_reg );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( tmp_reg_1488 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( tmp_reg_1488_pp2_iter1_reg );

    SC_METHOD(thread_outStream_channel_1_V_TVALID);
    sensitive << ( outStream_channel_1_V_1_state );

    SC_METHOD(thread_outstream_channel_2_V_1_ack_in);
    sensitive << ( outstream_channel_2_V_1_state );

    SC_METHOD(thread_outstream_channel_2_V_1_ack_out);
    sensitive << ( outstream_channel_2_V_TREADY );

    SC_METHOD(thread_outstream_channel_2_V_1_data_out);
    sensitive << ( outstream_channel_2_V_1_payload_A );
    sensitive << ( outstream_channel_2_V_1_payload_B );
    sensitive << ( outstream_channel_2_V_1_sel );

    SC_METHOD(thread_outstream_channel_2_V_1_load_A);
    sensitive << ( outstream_channel_2_V_1_sel_wr );
    sensitive << ( outstream_channel_2_V_1_state_cmp_full );

    SC_METHOD(thread_outstream_channel_2_V_1_load_B);
    sensitive << ( outstream_channel_2_V_1_sel_wr );
    sensitive << ( outstream_channel_2_V_1_state_cmp_full );

    SC_METHOD(thread_outstream_channel_2_V_1_sel);
    sensitive << ( outstream_channel_2_V_1_sel_rd );

    SC_METHOD(thread_outstream_channel_2_V_1_state_cmp_full);
    sensitive << ( outstream_channel_2_V_1_state );

    SC_METHOD(thread_outstream_channel_2_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_reg_1488 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_outstream_channel_2_V_1_vld_out);
    sensitive << ( outstream_channel_2_V_1_state );

    SC_METHOD(thread_outstream_channel_2_V_TDATA);
    sensitive << ( outstream_channel_2_V_1_data_out );

    SC_METHOD(thread_outstream_channel_2_V_TDATA_blk_n);
    sensitive << ( outstream_channel_2_V_1_state );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( tmp_reg_1488 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( tmp_reg_1488_pp2_iter1_reg );

    SC_METHOD(thread_outstream_channel_2_V_TVALID);
    sensitive << ( outstream_channel_2_V_1_state );

    SC_METHOD(thread_p_BASE_ADDRESS_flag_fu_557_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_p_BASE_ADDRESS_flag_fu_557_p2);
    sensitive << ( ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4 );
    sensitive << ( p_BASE_ADDRESS_flag_fu_557_p1 );

    SC_METHOD(thread_p_FRAME_BUFFER_DIM_fl_fu_519_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_p_FRAME_BUFFER_DIM_fl_fu_519_p2);
    sensitive << ( ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4 );
    sensitive << ( p_FRAME_BUFFER_DIM_fl_fu_519_p1 );

    SC_METHOD(thread_p_FRAME_BUFFER_NUMBER_fu_539_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_p_FRAME_BUFFER_NUMBER_fu_539_p2);
    sensitive << ( ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4 );
    sensitive << ( p_FRAME_BUFFER_NUMBER_fu_539_p1 );

    SC_METHOD(thread_p_FRAME_OFFSET_flag_fu_533_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_p_FRAME_OFFSET_flag_fu_533_p2);
    sensitive << ( ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4 );
    sensitive << ( p_FRAME_OFFSET_flag_fu_533_p1 );

    SC_METHOD(thread_start_pos1_fu_1125_p3);
    sensitive << ( tmp_13_reg_1503 );

    SC_METHOD(thread_start_pos2_fu_1246_p3);
    sensitive << ( tmp_12_fu_1241_p2 );

    SC_METHOD(thread_start_pos3_fu_844_p3);
    sensitive << ( tmp_70_reg_1448 );

    SC_METHOD(thread_start_pos_fu_960_p3);
    sensitive << ( tmp_51_reg_1458 );

    SC_METHOD(thread_storemerge_fu_678_p3);
    sensitive << ( tmp_3_fu_669_p2 );
    sensitive << ( tmp_4_fu_673_p2 );

    SC_METHOD(thread_tmp_11_fu_1090_p1);
    sensitive << ( j1_reg_430 );

    SC_METHOD(thread_tmp_12_fu_1241_p2);
    sensitive << ( tmp_11_reg_1492 );

    SC_METHOD(thread_tmp_15_fu_1138_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_reg_1488 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( start_pos1_fu_1125_p3 );
    sensitive << ( end_pos_fu_1132_p2 );

    SC_METHOD(thread_tmp_16_fu_721_p2);
    sensitive << ( luma_chroma_switch );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( tmp_6_fu_709_p3 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_tmp_17_fu_1144_p1);
    sensitive << ( start_pos1_fu_1125_p3 );

    SC_METHOD(thread_tmp_18_fu_727_p2);
    sensitive << ( luma_chroma_switch );

    SC_METHOD(thread_tmp_19_fu_1148_p1);
    sensitive << ( end_pos_fu_1132_p2 );

    SC_METHOD(thread_tmp_1_FRAME_BUFFER_N_1_fu_553_p1);
    sensitive << ( tmp_1_FRAME_BUFFER_N_fu_545_p3 );

    SC_METHOD(thread_tmp_1_FRAME_BUFFER_N_fu_545_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_tmp_1_FRAME_BUFFER_N_fu_545_p3);
    sensitive << ( frame_buffer_number );
    sensitive << ( ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4 );
    sensitive << ( tmp_1_FRAME_BUFFER_N_fu_545_p0 );

    SC_METHOD(thread_tmp_1_fu_658_p1);
    sensitive << ( offset1_reg_376 );

    SC_METHOD(thread_tmp_20_fu_1152_p4);
    sensitive << ( buffer_q0 );

    SC_METHOD(thread_tmp_21_fu_1162_p2);
    sensitive << ( tmp_17_fu_1144_p1 );
    sensitive << ( tmp_19_fu_1148_p1 );

    SC_METHOD(thread_tmp_22_fu_1168_p2);
    sensitive << ( tmp_17_fu_1144_p1 );

    SC_METHOD(thread_tmp_23_fu_1174_p2);
    sensitive << ( tmp_17_fu_1144_p1 );
    sensitive << ( tmp_19_fu_1148_p1 );

    SC_METHOD(thread_tmp_24_fu_1180_p3);
    sensitive << ( tmp_15_fu_1138_p2 );
    sensitive << ( tmp_21_fu_1162_p2 );
    sensitive << ( tmp_23_fu_1174_p2 );

    SC_METHOD(thread_tmp_25_fu_1188_p3);
    sensitive << ( buffer_q0 );
    sensitive << ( tmp_15_fu_1138_p2 );
    sensitive << ( tmp_20_fu_1152_p4 );

    SC_METHOD(thread_tmp_26_fu_1196_p3);
    sensitive << ( tmp_17_fu_1144_p1 );
    sensitive << ( tmp_15_fu_1138_p2 );
    sensitive << ( tmp_22_fu_1168_p2 );

    SC_METHOD(thread_tmp_27_fu_1204_p2);
    sensitive << ( tmp_24_fu_1180_p3 );

    SC_METHOD(thread_tmp_28_fu_1210_p1);
    sensitive << ( tmp_26_fu_1196_p3 );

    SC_METHOD(thread_tmp_29_fu_1214_p1);
    sensitive << ( tmp_27_fu_1204_p2 );

    SC_METHOD(thread_tmp_2_fu_593_p4);
    sensitive << ( tmp_s_fu_587_p2 );

    SC_METHOD(thread_tmp_30_fu_1218_p2);
    sensitive << ( tmp_25_fu_1188_p3 );
    sensitive << ( tmp_28_fu_1210_p1 );

    SC_METHOD(thread_tmp_31_fu_1224_p2);
    sensitive << ( tmp_29_fu_1214_p1 );

    SC_METHOD(thread_tmp_32_fu_1230_p2);
    sensitive << ( tmp_30_fu_1218_p2 );
    sensitive << ( tmp_31_fu_1224_p2 );

    SC_METHOD(thread_tmp_33_fu_1236_p1);
    sensitive << ( tmp_32_fu_1230_p2 );

    SC_METHOD(thread_tmp_34_fu_1260_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_reg_1488 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( start_pos2_fu_1246_p3 );
    sensitive << ( end_pos1_fu_1254_p2 );

    SC_METHOD(thread_tmp_35_fu_1266_p1);
    sensitive << ( start_pos2_fu_1246_p3 );

    SC_METHOD(thread_tmp_36_fu_1270_p1);
    sensitive << ( end_pos1_fu_1254_p2 );

    SC_METHOD(thread_tmp_37_fu_1274_p4);
    sensitive << ( buffer_q1 );

    SC_METHOD(thread_tmp_38_fu_1284_p2);
    sensitive << ( tmp_35_fu_1266_p1 );
    sensitive << ( tmp_36_fu_1270_p1 );

    SC_METHOD(thread_tmp_39_fu_1290_p2);
    sensitive << ( tmp_35_fu_1266_p1 );

    SC_METHOD(thread_tmp_3_fu_669_p2);
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_647_p2 );
    sensitive << ( inner_index_load_reg_1367 );
    sensitive << ( tmp_1_FRAME_BUFFER_N_1_reg_1394 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_tmp_40_fu_1296_p2);
    sensitive << ( tmp_35_fu_1266_p1 );
    sensitive << ( tmp_36_fu_1270_p1 );

    SC_METHOD(thread_tmp_41_fu_1302_p3);
    sensitive << ( tmp_34_fu_1260_p2 );
    sensitive << ( tmp_38_fu_1284_p2 );
    sensitive << ( tmp_40_fu_1296_p2 );

    SC_METHOD(thread_tmp_42_fu_1310_p3);
    sensitive << ( buffer_q1 );
    sensitive << ( tmp_34_fu_1260_p2 );
    sensitive << ( tmp_37_fu_1274_p4 );

    SC_METHOD(thread_tmp_43_fu_1318_p3);
    sensitive << ( tmp_35_fu_1266_p1 );
    sensitive << ( tmp_34_fu_1260_p2 );
    sensitive << ( tmp_39_fu_1290_p2 );

    SC_METHOD(thread_tmp_44_fu_1326_p2);
    sensitive << ( tmp_41_fu_1302_p3 );

    SC_METHOD(thread_tmp_45_fu_1332_p1);
    sensitive << ( tmp_43_fu_1318_p3 );

    SC_METHOD(thread_tmp_46_fu_1336_p1);
    sensitive << ( tmp_44_fu_1326_p2 );

    SC_METHOD(thread_tmp_47_fu_1340_p2);
    sensitive << ( tmp_42_fu_1310_p3 );
    sensitive << ( tmp_45_fu_1332_p1 );

    SC_METHOD(thread_tmp_48_fu_1346_p2);
    sensitive << ( tmp_46_fu_1336_p1 );

    SC_METHOD(thread_tmp_49_fu_1352_p2);
    sensitive << ( tmp_47_fu_1340_p2 );
    sensitive << ( tmp_48_fu_1346_p2 );

    SC_METHOD(thread_tmp_4_fu_673_p2);
    sensitive << ( inner_index_load_reg_1367 );

    SC_METHOD(thread_tmp_50_fu_1358_p1);
    sensitive << ( tmp_49_fu_1352_p2 );

    SC_METHOD(thread_tmp_51_fu_771_p1);
    sensitive << ( j_3_fu_764_p2 );

    SC_METHOD(thread_tmp_52_fu_775_p4);
    sensitive << ( j_3_fu_764_p2 );

    SC_METHOD(thread_tmp_53_fu_973_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_predicate_op228_write_state14 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( start_pos_fu_960_p3 );
    sensitive << ( end_pos2_fu_967_p2 );

    SC_METHOD(thread_tmp_54_fu_979_p1);
    sensitive << ( start_pos_fu_960_p3 );

    SC_METHOD(thread_tmp_55_fu_983_p1);
    sensitive << ( end_pos2_fu_967_p2 );

    SC_METHOD(thread_tmp_56_fu_987_p4);
    sensitive << ( buffer_q0 );

    SC_METHOD(thread_tmp_57_fu_997_p2);
    sensitive << ( tmp_54_fu_979_p1 );
    sensitive << ( tmp_55_fu_983_p1 );

    SC_METHOD(thread_tmp_58_fu_1003_p2);
    sensitive << ( tmp_54_fu_979_p1 );

    SC_METHOD(thread_tmp_59_fu_1009_p2);
    sensitive << ( tmp_54_fu_979_p1 );
    sensitive << ( tmp_55_fu_983_p1 );

    SC_METHOD(thread_tmp_60_fu_1015_p3);
    sensitive << ( tmp_53_fu_973_p2 );
    sensitive << ( tmp_57_fu_997_p2 );
    sensitive << ( tmp_59_fu_1009_p2 );

    SC_METHOD(thread_tmp_61_fu_1023_p3);
    sensitive << ( buffer_q0 );
    sensitive << ( tmp_53_fu_973_p2 );
    sensitive << ( tmp_56_fu_987_p4 );

    SC_METHOD(thread_tmp_62_fu_1031_p3);
    sensitive << ( tmp_54_fu_979_p1 );
    sensitive << ( tmp_53_fu_973_p2 );
    sensitive << ( tmp_58_fu_1003_p2 );

    SC_METHOD(thread_tmp_63_fu_1039_p2);
    sensitive << ( tmp_60_fu_1015_p3 );

    SC_METHOD(thread_tmp_64_fu_1045_p1);
    sensitive << ( tmp_62_fu_1031_p3 );

    SC_METHOD(thread_tmp_65_fu_1049_p1);
    sensitive << ( tmp_63_fu_1039_p2 );

    SC_METHOD(thread_tmp_66_fu_1053_p2);
    sensitive << ( tmp_61_fu_1023_p3 );
    sensitive << ( tmp_64_fu_1045_p1 );

    SC_METHOD(thread_tmp_67_fu_1059_p2);
    sensitive << ( tmp_65_fu_1049_p1 );

    SC_METHOD(thread_tmp_68_fu_1065_p2);
    sensitive << ( tmp_66_fu_1053_p2 );
    sensitive << ( tmp_67_fu_1059_p2 );

    SC_METHOD(thread_tmp_69_fu_1071_p1);
    sensitive << ( tmp_68_fu_1065_p2 );

    SC_METHOD(thread_tmp_6_fu_709_p3);
    sensitive << ( j_reg_409 );

    SC_METHOD(thread_tmp_70_fu_739_p1);
    sensitive << ( j_reg_409 );

    SC_METHOD(thread_tmp_71_fu_857_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_predicate_op207_write_state14 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( start_pos3_fu_844_p3 );
    sensitive << ( end_pos3_fu_851_p2 );

    SC_METHOD(thread_tmp_72_fu_863_p1);
    sensitive << ( start_pos3_fu_844_p3 );

    SC_METHOD(thread_tmp_73_fu_867_p1);
    sensitive << ( end_pos3_fu_851_p2 );

    SC_METHOD(thread_tmp_74_fu_871_p4);
    sensitive << ( buffer_q0 );

    SC_METHOD(thread_tmp_75_fu_881_p2);
    sensitive << ( tmp_72_fu_863_p1 );
    sensitive << ( tmp_73_fu_867_p1 );

    SC_METHOD(thread_tmp_76_fu_887_p2);
    sensitive << ( tmp_72_fu_863_p1 );

    SC_METHOD(thread_tmp_77_fu_893_p2);
    sensitive << ( tmp_72_fu_863_p1 );
    sensitive << ( tmp_73_fu_867_p1 );

    SC_METHOD(thread_tmp_78_fu_899_p3);
    sensitive << ( tmp_71_fu_857_p2 );
    sensitive << ( tmp_75_fu_881_p2 );
    sensitive << ( tmp_77_fu_893_p2 );

    SC_METHOD(thread_tmp_79_fu_907_p3);
    sensitive << ( buffer_q0 );
    sensitive << ( tmp_71_fu_857_p2 );
    sensitive << ( tmp_74_fu_871_p4 );

    SC_METHOD(thread_tmp_7_BASE_ADDRESS_l_fu_579_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_tmp_7_BASE_ADDRESS_l_fu_579_p3);
    sensitive << ( ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4 );
    sensitive << ( tmp_8_fu_515_p1 );
    sensitive << ( tmp_7_BASE_ADDRESS_l_fu_579_p0 );

    SC_METHOD(thread_tmp_7_base_address_fu_563_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( update_intr );

    SC_METHOD(thread_tmp_7_base_address_fu_563_p3);
    sensitive << ( base_address );
    sensitive << ( tmp_7_base_address_fu_563_p0 );
    sensitive << ( tmp_8_fu_515_p1 );

    SC_METHOD(thread_tmp_7_fu_505_p4);
    sensitive << ( base_address );

    SC_METHOD(thread_tmp_80_fu_915_p3);
    sensitive << ( tmp_72_fu_863_p1 );
    sensitive << ( tmp_71_fu_857_p2 );
    sensitive << ( tmp_76_fu_887_p2 );

    SC_METHOD(thread_tmp_81_fu_923_p2);
    sensitive << ( tmp_78_fu_899_p3 );

    SC_METHOD(thread_tmp_82_fu_929_p1);
    sensitive << ( tmp_80_fu_915_p3 );

    SC_METHOD(thread_tmp_83_fu_933_p1);
    sensitive << ( tmp_81_fu_923_p2 );

    SC_METHOD(thread_tmp_84_fu_937_p2);
    sensitive << ( tmp_79_fu_907_p3 );
    sensitive << ( tmp_82_fu_929_p1 );

    SC_METHOD(thread_tmp_85_fu_943_p2);
    sensitive << ( tmp_83_fu_933_p1 );

    SC_METHOD(thread_tmp_86_fu_949_p2);
    sensitive << ( tmp_84_fu_937_p2 );
    sensitive << ( tmp_85_fu_943_p2 );

    SC_METHOD(thread_tmp_87_fu_955_p1);
    sensitive << ( tmp_86_fu_949_p2 );

    SC_METHOD(thread_tmp_8_fu_515_p1);
    sensitive << ( tmp_7_fu_505_p4 );

    SC_METHOD(thread_tmp_9_fu_603_p1);
    sensitive << ( tmp_2_fu_593_p4 );

    SC_METHOD(thread_tmp_fu_1082_p3);
    sensitive << ( j1_reg_430 );

    SC_METHOD(thread_tmp_s_fu_587_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( inner_index );

    SC_METHOD(thread_tmp_s_fu_587_p2);
    sensitive << ( tmp_s_fu_587_p0 );
    sensitive << ( frame_buffer_offset_s_fu_571_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( outStream_channel_1_V_1_ack_in );
    sensitive << ( outstream_channel_2_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_647_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( stereo_enabler_read_reg_1363 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( exitcond_fu_692_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_6_fu_709_p3 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_fu_1082_p3 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp2_stage0_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "0000000000001";
    outStream_channel_1_V_1_sel_rd = SC_LOGIC_0;
    outStream_channel_1_V_1_sel_wr = SC_LOGIC_0;
    outStream_channel_1_V_1_state = "00";
    outstream_channel_2_V_1_sel_rd = SC_LOGIC_0;
    outstream_channel_2_V_1_sel_wr = SC_LOGIC_0;
    outstream_channel_2_V_1_state = "00";
    inner_index = "00000000000000000000000000000000";
    guard_variable_for_d_2 = "0";
    FRAME_BUFFER_DIM_r = "00000000000000000000000000000000";
    guard_variable_for_d = "0";
    FRAME_OFFSET = "00000000000000000000000000000000";
    guard_variable_for_d_1 = "0";
    FRAME_BUFFER_NUMBER_r = "00000000";
    guard_variable_for_d_3 = "0";
    BASE_ADDRESS_r = "00000000000000000000000000000000";
    luma_chroma_switch = "00000000000000000000000000000000";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_base_ddr_addr_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ddr_to_axis_reader_SD_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, outStream_channel_1_V_TDATA, "(port)outStream_channel_1_V_TDATA");
    sc_trace(mVcdFile, outStream_channel_1_V_TVALID, "(port)outStream_channel_1_V_TVALID");
    sc_trace(mVcdFile, outStream_channel_1_V_TREADY, "(port)outStream_channel_1_V_TREADY");
    sc_trace(mVcdFile, outstream_channel_2_V_TDATA, "(port)outstream_channel_2_V_TDATA");
    sc_trace(mVcdFile, outstream_channel_2_V_TVALID, "(port)outstream_channel_2_V_TVALID");
    sc_trace(mVcdFile, outstream_channel_2_V_TREADY, "(port)outstream_channel_2_V_TREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWVALID, "(port)m_axi_base_ddr_addr_AWVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWREADY, "(port)m_axi_base_ddr_addr_AWREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWADDR, "(port)m_axi_base_ddr_addr_AWADDR");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWID, "(port)m_axi_base_ddr_addr_AWID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWLEN, "(port)m_axi_base_ddr_addr_AWLEN");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWSIZE, "(port)m_axi_base_ddr_addr_AWSIZE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWBURST, "(port)m_axi_base_ddr_addr_AWBURST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWLOCK, "(port)m_axi_base_ddr_addr_AWLOCK");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWCACHE, "(port)m_axi_base_ddr_addr_AWCACHE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWPROT, "(port)m_axi_base_ddr_addr_AWPROT");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWQOS, "(port)m_axi_base_ddr_addr_AWQOS");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWREGION, "(port)m_axi_base_ddr_addr_AWREGION");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_AWUSER, "(port)m_axi_base_ddr_addr_AWUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WVALID, "(port)m_axi_base_ddr_addr_WVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WREADY, "(port)m_axi_base_ddr_addr_WREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WDATA, "(port)m_axi_base_ddr_addr_WDATA");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WSTRB, "(port)m_axi_base_ddr_addr_WSTRB");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WLAST, "(port)m_axi_base_ddr_addr_WLAST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WID, "(port)m_axi_base_ddr_addr_WID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_WUSER, "(port)m_axi_base_ddr_addr_WUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARVALID, "(port)m_axi_base_ddr_addr_ARVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARREADY, "(port)m_axi_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARADDR, "(port)m_axi_base_ddr_addr_ARADDR");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARID, "(port)m_axi_base_ddr_addr_ARID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARLEN, "(port)m_axi_base_ddr_addr_ARLEN");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARSIZE, "(port)m_axi_base_ddr_addr_ARSIZE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARBURST, "(port)m_axi_base_ddr_addr_ARBURST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARLOCK, "(port)m_axi_base_ddr_addr_ARLOCK");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARCACHE, "(port)m_axi_base_ddr_addr_ARCACHE");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARPROT, "(port)m_axi_base_ddr_addr_ARPROT");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARQOS, "(port)m_axi_base_ddr_addr_ARQOS");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARREGION, "(port)m_axi_base_ddr_addr_ARREGION");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_ARUSER, "(port)m_axi_base_ddr_addr_ARUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RVALID, "(port)m_axi_base_ddr_addr_RVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RREADY, "(port)m_axi_base_ddr_addr_RREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RDATA, "(port)m_axi_base_ddr_addr_RDATA");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RLAST, "(port)m_axi_base_ddr_addr_RLAST");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RID, "(port)m_axi_base_ddr_addr_RID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RUSER, "(port)m_axi_base_ddr_addr_RUSER");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_RRESP, "(port)m_axi_base_ddr_addr_RRESP");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BVALID, "(port)m_axi_base_ddr_addr_BVALID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BREADY, "(port)m_axi_base_ddr_addr_BREADY");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BRESP, "(port)m_axi_base_ddr_addr_BRESP");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BID, "(port)m_axi_base_ddr_addr_BID");
    sc_trace(mVcdFile, m_axi_base_ddr_addr_BUSER, "(port)m_axi_base_ddr_addr_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, outStream_channel_1_V_1_data_in, "outStream_channel_1_V_1_data_in");
    sc_trace(mVcdFile, outStream_channel_1_V_1_data_out, "outStream_channel_1_V_1_data_out");
    sc_trace(mVcdFile, outStream_channel_1_V_1_vld_in, "outStream_channel_1_V_1_vld_in");
    sc_trace(mVcdFile, outStream_channel_1_V_1_vld_out, "outStream_channel_1_V_1_vld_out");
    sc_trace(mVcdFile, outStream_channel_1_V_1_ack_in, "outStream_channel_1_V_1_ack_in");
    sc_trace(mVcdFile, outStream_channel_1_V_1_ack_out, "outStream_channel_1_V_1_ack_out");
    sc_trace(mVcdFile, outStream_channel_1_V_1_payload_A, "outStream_channel_1_V_1_payload_A");
    sc_trace(mVcdFile, outStream_channel_1_V_1_payload_B, "outStream_channel_1_V_1_payload_B");
    sc_trace(mVcdFile, outStream_channel_1_V_1_sel_rd, "outStream_channel_1_V_1_sel_rd");
    sc_trace(mVcdFile, outStream_channel_1_V_1_sel_wr, "outStream_channel_1_V_1_sel_wr");
    sc_trace(mVcdFile, outStream_channel_1_V_1_sel, "outStream_channel_1_V_1_sel");
    sc_trace(mVcdFile, outStream_channel_1_V_1_load_A, "outStream_channel_1_V_1_load_A");
    sc_trace(mVcdFile, outStream_channel_1_V_1_load_B, "outStream_channel_1_V_1_load_B");
    sc_trace(mVcdFile, outStream_channel_1_V_1_state, "outStream_channel_1_V_1_state");
    sc_trace(mVcdFile, outStream_channel_1_V_1_state_cmp_full, "outStream_channel_1_V_1_state_cmp_full");
    sc_trace(mVcdFile, outstream_channel_2_V_1_data_out, "outstream_channel_2_V_1_data_out");
    sc_trace(mVcdFile, outstream_channel_2_V_1_vld_in, "outstream_channel_2_V_1_vld_in");
    sc_trace(mVcdFile, outstream_channel_2_V_1_vld_out, "outstream_channel_2_V_1_vld_out");
    sc_trace(mVcdFile, outstream_channel_2_V_1_ack_in, "outstream_channel_2_V_1_ack_in");
    sc_trace(mVcdFile, outstream_channel_2_V_1_ack_out, "outstream_channel_2_V_1_ack_out");
    sc_trace(mVcdFile, outstream_channel_2_V_1_payload_A, "outstream_channel_2_V_1_payload_A");
    sc_trace(mVcdFile, outstream_channel_2_V_1_payload_B, "outstream_channel_2_V_1_payload_B");
    sc_trace(mVcdFile, outstream_channel_2_V_1_sel_rd, "outstream_channel_2_V_1_sel_rd");
    sc_trace(mVcdFile, outstream_channel_2_V_1_sel_wr, "outstream_channel_2_V_1_sel_wr");
    sc_trace(mVcdFile, outstream_channel_2_V_1_sel, "outstream_channel_2_V_1_sel");
    sc_trace(mVcdFile, outstream_channel_2_V_1_load_A, "outstream_channel_2_V_1_load_A");
    sc_trace(mVcdFile, outstream_channel_2_V_1_load_B, "outstream_channel_2_V_1_load_B");
    sc_trace(mVcdFile, outstream_channel_2_V_1_state, "outstream_channel_2_V_1_state");
    sc_trace(mVcdFile, outstream_channel_2_V_1_state_cmp_full, "outstream_channel_2_V_1_state_cmp_full");
    sc_trace(mVcdFile, base_address, "base_address");
    sc_trace(mVcdFile, frame_buffer_dim, "frame_buffer_dim");
    sc_trace(mVcdFile, frame_buffer_offset, "frame_buffer_offset");
    sc_trace(mVcdFile, frame_buffer_number, "frame_buffer_number");
    sc_trace(mVcdFile, update_intr, "update_intr");
    sc_trace(mVcdFile, stereo_enabler, "stereo_enabler");
    sc_trace(mVcdFile, inner_index, "inner_index");
    sc_trace(mVcdFile, guard_variable_for_d_2, "guard_variable_for_d_2");
    sc_trace(mVcdFile, FRAME_BUFFER_DIM_r, "FRAME_BUFFER_DIM_r");
    sc_trace(mVcdFile, guard_variable_for_d, "guard_variable_for_d");
    sc_trace(mVcdFile, FRAME_OFFSET, "FRAME_OFFSET");
    sc_trace(mVcdFile, guard_variable_for_d_1, "guard_variable_for_d_1");
    sc_trace(mVcdFile, FRAME_BUFFER_NUMBER_r, "FRAME_BUFFER_NUMBER_r");
    sc_trace(mVcdFile, guard_variable_for_d_3, "guard_variable_for_d_3");
    sc_trace(mVcdFile, BASE_ADDRESS_r, "BASE_ADDRESS_r");
    sc_trace(mVcdFile, luma_chroma_switch, "luma_chroma_switch");
    sc_trace(mVcdFile, outStream_channel_1_V_TDATA_blk_n, "outStream_channel_1_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_6_reg_1440, "tmp_6_reg_1440");
    sc_trace(mVcdFile, tmp_16_reg_1444, "tmp_16_reg_1444");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, tmp_6_reg_1440_pp1_iter1_reg, "tmp_6_reg_1440_pp1_iter1_reg");
    sc_trace(mVcdFile, tmp_16_reg_1444_pp1_iter1_reg, "tmp_16_reg_1444_pp1_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, tmp_reg_1488, "tmp_reg_1488");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, tmp_reg_1488_pp2_iter1_reg, "tmp_reg_1488_pp2_iter1_reg");
    sc_trace(mVcdFile, outstream_channel_2_V_TDATA_blk_n, "outstream_channel_2_V_TDATA_blk_n");
    sc_trace(mVcdFile, base_ddr_addr_blk_n_AR, "base_ddr_addr_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond1_fu_647_p2, "exitcond1_fu_647_p2");
    sc_trace(mVcdFile, base_ddr_addr_blk_n_R, "base_ddr_addr_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_1426, "exitcond_reg_1426");
    sc_trace(mVcdFile, base_ddr_addr_AWREADY, "base_ddr_addr_AWREADY");
    sc_trace(mVcdFile, base_ddr_addr_WREADY, "base_ddr_addr_WREADY");
    sc_trace(mVcdFile, base_ddr_addr_ARVALID, "base_ddr_addr_ARVALID");
    sc_trace(mVcdFile, base_ddr_addr_ARREADY, "base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, base_ddr_addr_ARADDR, "base_ddr_addr_ARADDR");
    sc_trace(mVcdFile, base_ddr_addr_RVALID, "base_ddr_addr_RVALID");
    sc_trace(mVcdFile, base_ddr_addr_RREADY, "base_ddr_addr_RREADY");
    sc_trace(mVcdFile, base_ddr_addr_RDATA, "base_ddr_addr_RDATA");
    sc_trace(mVcdFile, base_ddr_addr_RLAST, "base_ddr_addr_RLAST");
    sc_trace(mVcdFile, base_ddr_addr_RID, "base_ddr_addr_RID");
    sc_trace(mVcdFile, base_ddr_addr_RUSER, "base_ddr_addr_RUSER");
    sc_trace(mVcdFile, base_ddr_addr_RRESP, "base_ddr_addr_RRESP");
    sc_trace(mVcdFile, base_ddr_addr_BVALID, "base_ddr_addr_BVALID");
    sc_trace(mVcdFile, base_ddr_addr_BRESP, "base_ddr_addr_BRESP");
    sc_trace(mVcdFile, base_ddr_addr_BID, "base_ddr_addr_BID");
    sc_trace(mVcdFile, base_ddr_addr_BUSER, "base_ddr_addr_BUSER");
    sc_trace(mVcdFile, indvar_reg_397, "indvar_reg_397");
    sc_trace(mVcdFile, indvar_reg_397_pp0_iter1_reg, "indvar_reg_397_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter2, "ap_block_state11_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_reg_409, "j_reg_409");
    sc_trace(mVcdFile, j1_reg_430, "j1_reg_430");
    sc_trace(mVcdFile, stereo_enabler_read_reg_1363, "stereo_enabler_read_reg_1363");
    sc_trace(mVcdFile, inner_index_load_reg_1367, "inner_index_load_reg_1367");
    sc_trace(mVcdFile, tmp_1_FRAME_BUFFER_N_1_fu_553_p1, "tmp_1_FRAME_BUFFER_N_1_fu_553_p1");
    sc_trace(mVcdFile, tmp_1_FRAME_BUFFER_N_1_reg_1394, "tmp_1_FRAME_BUFFER_N_1_reg_1394");
    sc_trace(mVcdFile, offset_fu_607_p2, "offset_fu_607_p2");
    sc_trace(mVcdFile, tmp_5_reg_1407, "tmp_5_reg_1407");
    sc_trace(mVcdFile, i_1_fu_652_p2, "i_1_fu_652_p2");
    sc_trace(mVcdFile, i_1_reg_1415, "i_1_reg_1415");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, ap_sig_ioackin_base_ddr_addr_ARREADY, "ap_sig_ioackin_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, exitcond_fu_692_p2, "exitcond_fu_692_p2");
    sc_trace(mVcdFile, exitcond_reg_1426_pp0_iter1_reg, "exitcond_reg_1426_pp0_iter1_reg");
    sc_trace(mVcdFile, indvar_next_fu_698_p2, "indvar_next_fu_698_p2");
    sc_trace(mVcdFile, indvar_next_reg_1430, "indvar_next_reg_1430");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, base_ddr_addr_addr_r_reg_1435, "base_ddr_addr_addr_r_reg_1435");
    sc_trace(mVcdFile, tmp_6_fu_709_p3, "tmp_6_fu_709_p3");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage0_iter0, "ap_block_state13_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage0_iter1, "ap_block_state14_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_predicate_op207_write_state14, "ap_predicate_op207_write_state14");
    sc_trace(mVcdFile, ap_predicate_op228_write_state14, "ap_predicate_op228_write_state14");
    sc_trace(mVcdFile, ap_block_state14_io, "ap_block_state14_io");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage0_iter2, "ap_block_state15_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_predicate_op229_write_state15, "ap_predicate_op229_write_state15");
    sc_trace(mVcdFile, ap_predicate_op230_write_state15, "ap_predicate_op230_write_state15");
    sc_trace(mVcdFile, ap_block_state15_io, "ap_block_state15_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, tmp_16_fu_721_p2, "tmp_16_fu_721_p2");
    sc_trace(mVcdFile, tmp_70_fu_739_p1, "tmp_70_fu_739_p1");
    sc_trace(mVcdFile, tmp_70_reg_1448, "tmp_70_reg_1448");
    sc_trace(mVcdFile, tmp_51_fu_771_p1, "tmp_51_fu_771_p1");
    sc_trace(mVcdFile, tmp_51_reg_1458, "tmp_51_reg_1458");
    sc_trace(mVcdFile, j_4_fu_838_p2, "j_4_fu_838_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_87_fu_955_p1, "tmp_87_fu_955_p1");
    sc_trace(mVcdFile, tmp_69_fu_1071_p1, "tmp_69_fu_1071_p1");
    sc_trace(mVcdFile, offset_1_fu_1076_p2, "offset_1_fu_1076_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_fu_1082_p3, "tmp_fu_1082_p3");
    sc_trace(mVcdFile, ap_block_state17_pp2_stage0_iter0, "ap_block_state17_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state18_pp2_stage0_iter1, "ap_block_state18_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state18_io, "ap_block_state18_io");
    sc_trace(mVcdFile, ap_block_state19_pp2_stage0_iter2, "ap_block_state19_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state19_io, "ap_block_state19_io");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, tmp_11_fu_1090_p1, "tmp_11_fu_1090_p1");
    sc_trace(mVcdFile, tmp_11_reg_1492, "tmp_11_reg_1492");
    sc_trace(mVcdFile, tmp_13_reg_1503, "tmp_13_reg_1503");
    sc_trace(mVcdFile, j_2_fu_1119_p2, "j_2_fu_1119_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_33_fu_1236_p1, "tmp_33_fu_1236_p1");
    sc_trace(mVcdFile, tmp_50_fu_1358_p1, "tmp_50_fu_1358_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state9, "ap_condition_pp0_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state13, "ap_condition_pp1_exit_iter0_state13");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state17, "ap_condition_pp2_exit_iter0_state17");
    sc_trace(mVcdFile, buffer_address0, "buffer_address0");
    sc_trace(mVcdFile, buffer_ce0, "buffer_ce0");
    sc_trace(mVcdFile, buffer_q0, "buffer_q0");
    sc_trace(mVcdFile, buffer_address1, "buffer_address1");
    sc_trace(mVcdFile, buffer_ce1, "buffer_ce1");
    sc_trace(mVcdFile, buffer_we1, "buffer_we1");
    sc_trace(mVcdFile, buffer_q1, "buffer_q1");
    sc_trace(mVcdFile, ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4, "ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4");
    sc_trace(mVcdFile, guard_variable_for_d_4_load_fu_445_p1, "guard_variable_for_d_4_load_fu_445_p1");
    sc_trace(mVcdFile, ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4, "ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4");
    sc_trace(mVcdFile, ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4, "ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4");
    sc_trace(mVcdFile, guard_variable_for_d_5_load_fu_460_p1, "guard_variable_for_d_5_load_fu_460_p1");
    sc_trace(mVcdFile, ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4, "ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4");
    sc_trace(mVcdFile, ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4, "ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4");
    sc_trace(mVcdFile, guard_variable_for_d_6_load_fu_475_p1, "guard_variable_for_d_6_load_fu_475_p1");
    sc_trace(mVcdFile, ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4, "ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4");
    sc_trace(mVcdFile, ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4, "ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4");
    sc_trace(mVcdFile, guard_variable_for_d_7_load_fu_490_p1, "guard_variable_for_d_7_load_fu_490_p1");
    sc_trace(mVcdFile, ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4, "ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4");
    sc_trace(mVcdFile, offset1_reg_376, "offset1_reg_376");
    sc_trace(mVcdFile, i_reg_386, "i_reg_386");
    sc_trace(mVcdFile, ap_phi_mux_indvar_phi_fu_401_p4, "ap_phi_mux_indvar_phi_fu_401_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_1_phi_fu_423_p4, "ap_phi_mux_j_1_phi_fu_423_p4");
    sc_trace(mVcdFile, j_3_fu_764_p2, "j_3_fu_764_p2");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_j_1_reg_420, "ap_phi_reg_pp1_iter0_j_1_reg_420");
    sc_trace(mVcdFile, indvar1_fu_704_p1, "indvar1_fu_704_p1");
    sc_trace(mVcdFile, gepindex264_cast_fu_753_p1, "gepindex264_cast_fu_753_p1");
    sc_trace(mVcdFile, gepindex2_cast_fu_833_p1, "gepindex2_cast_fu_833_p1");
    sc_trace(mVcdFile, gepindex276_cast_fu_1104_p1, "gepindex276_cast_fu_1104_p1");
    sc_trace(mVcdFile, tmp_1_fu_658_p1, "tmp_1_fu_658_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_base_ddr_addr_ARREADY, "ap_reg_ioackin_base_ddr_addr_ARREADY");
    sc_trace(mVcdFile, storemerge_fu_678_p3, "storemerge_fu_678_p3");
    sc_trace(mVcdFile, p_FRAME_BUFFER_DIM_fl_fu_519_p2, "p_FRAME_BUFFER_DIM_fl_fu_519_p2");
    sc_trace(mVcdFile, p_FRAME_OFFSET_flag_fu_533_p2, "p_FRAME_OFFSET_flag_fu_533_p2");
    sc_trace(mVcdFile, p_FRAME_BUFFER_NUMBER_fu_539_p2, "p_FRAME_BUFFER_NUMBER_fu_539_p2");
    sc_trace(mVcdFile, tmp_7_base_address_fu_563_p3, "tmp_7_base_address_fu_563_p3");
    sc_trace(mVcdFile, p_BASE_ADDRESS_flag_fu_557_p2, "p_BASE_ADDRESS_flag_fu_557_p2");
    sc_trace(mVcdFile, tmp_18_fu_727_p2, "tmp_18_fu_727_p2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp2_stage0_01001, "ap_block_pp2_stage0_01001");
    sc_trace(mVcdFile, tmp_7_fu_505_p4, "tmp_7_fu_505_p4");
    sc_trace(mVcdFile, p_FRAME_BUFFER_DIM_fl_fu_519_p1, "p_FRAME_BUFFER_DIM_fl_fu_519_p1");
    sc_trace(mVcdFile, frame_buffer_dim_FRA_fu_525_p0, "frame_buffer_dim_FRA_fu_525_p0");
    sc_trace(mVcdFile, p_FRAME_OFFSET_flag_fu_533_p1, "p_FRAME_OFFSET_flag_fu_533_p1");
    sc_trace(mVcdFile, p_FRAME_BUFFER_NUMBER_fu_539_p1, "p_FRAME_BUFFER_NUMBER_fu_539_p1");
    sc_trace(mVcdFile, tmp_1_FRAME_BUFFER_N_fu_545_p0, "tmp_1_FRAME_BUFFER_N_fu_545_p0");
    sc_trace(mVcdFile, tmp_1_FRAME_BUFFER_N_fu_545_p3, "tmp_1_FRAME_BUFFER_N_fu_545_p3");
    sc_trace(mVcdFile, p_BASE_ADDRESS_flag_fu_557_p1, "p_BASE_ADDRESS_flag_fu_557_p1");
    sc_trace(mVcdFile, tmp_7_base_address_fu_563_p0, "tmp_7_base_address_fu_563_p0");
    sc_trace(mVcdFile, tmp_8_fu_515_p1, "tmp_8_fu_515_p1");
    sc_trace(mVcdFile, frame_buffer_offset_s_fu_571_p0, "frame_buffer_offset_s_fu_571_p0");
    sc_trace(mVcdFile, tmp_7_BASE_ADDRESS_l_fu_579_p0, "tmp_7_BASE_ADDRESS_l_fu_579_p0");
    sc_trace(mVcdFile, tmp_s_fu_587_p0, "tmp_s_fu_587_p0");
    sc_trace(mVcdFile, frame_buffer_offset_s_fu_571_p3, "frame_buffer_offset_s_fu_571_p3");
    sc_trace(mVcdFile, tmp_s_fu_587_p2, "tmp_s_fu_587_p2");
    sc_trace(mVcdFile, tmp_2_fu_593_p4, "tmp_2_fu_593_p4");
    sc_trace(mVcdFile, tmp_9_fu_603_p1, "tmp_9_fu_603_p1");
    sc_trace(mVcdFile, tmp_7_BASE_ADDRESS_l_fu_579_p3, "tmp_7_BASE_ADDRESS_l_fu_579_p3");
    sc_trace(mVcdFile, frame_buffer_dim_FRA_fu_525_p3, "frame_buffer_dim_FRA_fu_525_p3");
    sc_trace(mVcdFile, tmp_3_fu_669_p2, "tmp_3_fu_669_p2");
    sc_trace(mVcdFile, tmp_4_fu_673_p2, "tmp_4_fu_673_p2");
    sc_trace(mVcdFile, gepindex62_cast_fu_743_p4, "gepindex62_cast_fu_743_p4");
    sc_trace(mVcdFile, tmp_52_fu_775_p4, "tmp_52_fu_775_p4");
    sc_trace(mVcdFile, adjSize_fu_785_p1, "adjSize_fu_785_p1");
    sc_trace(mVcdFile, mem_index_gep_fu_789_p2, "mem_index_gep_fu_789_p2");
    sc_trace(mVcdFile, adjSize55_cast_fu_795_p1, "adjSize55_cast_fu_795_p1");
    sc_trace(mVcdFile, addrCmp_fu_799_p2, "addrCmp_fu_799_p2");
    sc_trace(mVcdFile, gepindex_fu_811_p2, "gepindex_fu_811_p2");
    sc_trace(mVcdFile, addrCmp1_fu_805_p2, "addrCmp1_fu_805_p2");
    sc_trace(mVcdFile, gepindex1_fu_817_p3, "gepindex1_fu_817_p3");
    sc_trace(mVcdFile, gepindex2_fu_825_p3, "gepindex2_fu_825_p3");
    sc_trace(mVcdFile, start_pos3_fu_844_p3, "start_pos3_fu_844_p3");
    sc_trace(mVcdFile, end_pos3_fu_851_p2, "end_pos3_fu_851_p2");
    sc_trace(mVcdFile, tmp_72_fu_863_p1, "tmp_72_fu_863_p1");
    sc_trace(mVcdFile, tmp_73_fu_867_p1, "tmp_73_fu_867_p1");
    sc_trace(mVcdFile, tmp_71_fu_857_p2, "tmp_71_fu_857_p2");
    sc_trace(mVcdFile, tmp_75_fu_881_p2, "tmp_75_fu_881_p2");
    sc_trace(mVcdFile, tmp_77_fu_893_p2, "tmp_77_fu_893_p2");
    sc_trace(mVcdFile, tmp_74_fu_871_p4, "tmp_74_fu_871_p4");
    sc_trace(mVcdFile, tmp_76_fu_887_p2, "tmp_76_fu_887_p2");
    sc_trace(mVcdFile, tmp_78_fu_899_p3, "tmp_78_fu_899_p3");
    sc_trace(mVcdFile, tmp_80_fu_915_p3, "tmp_80_fu_915_p3");
    sc_trace(mVcdFile, tmp_81_fu_923_p2, "tmp_81_fu_923_p2");
    sc_trace(mVcdFile, tmp_79_fu_907_p3, "tmp_79_fu_907_p3");
    sc_trace(mVcdFile, tmp_82_fu_929_p1, "tmp_82_fu_929_p1");
    sc_trace(mVcdFile, tmp_83_fu_933_p1, "tmp_83_fu_933_p1");
    sc_trace(mVcdFile, tmp_84_fu_937_p2, "tmp_84_fu_937_p2");
    sc_trace(mVcdFile, tmp_85_fu_943_p2, "tmp_85_fu_943_p2");
    sc_trace(mVcdFile, tmp_86_fu_949_p2, "tmp_86_fu_949_p2");
    sc_trace(mVcdFile, start_pos_fu_960_p3, "start_pos_fu_960_p3");
    sc_trace(mVcdFile, end_pos2_fu_967_p2, "end_pos2_fu_967_p2");
    sc_trace(mVcdFile, tmp_54_fu_979_p1, "tmp_54_fu_979_p1");
    sc_trace(mVcdFile, tmp_55_fu_983_p1, "tmp_55_fu_983_p1");
    sc_trace(mVcdFile, tmp_53_fu_973_p2, "tmp_53_fu_973_p2");
    sc_trace(mVcdFile, tmp_57_fu_997_p2, "tmp_57_fu_997_p2");
    sc_trace(mVcdFile, tmp_59_fu_1009_p2, "tmp_59_fu_1009_p2");
    sc_trace(mVcdFile, tmp_56_fu_987_p4, "tmp_56_fu_987_p4");
    sc_trace(mVcdFile, tmp_58_fu_1003_p2, "tmp_58_fu_1003_p2");
    sc_trace(mVcdFile, tmp_60_fu_1015_p3, "tmp_60_fu_1015_p3");
    sc_trace(mVcdFile, tmp_62_fu_1031_p3, "tmp_62_fu_1031_p3");
    sc_trace(mVcdFile, tmp_63_fu_1039_p2, "tmp_63_fu_1039_p2");
    sc_trace(mVcdFile, tmp_61_fu_1023_p3, "tmp_61_fu_1023_p3");
    sc_trace(mVcdFile, tmp_64_fu_1045_p1, "tmp_64_fu_1045_p1");
    sc_trace(mVcdFile, tmp_65_fu_1049_p1, "tmp_65_fu_1049_p1");
    sc_trace(mVcdFile, tmp_66_fu_1053_p2, "tmp_66_fu_1053_p2");
    sc_trace(mVcdFile, tmp_67_fu_1059_p2, "tmp_67_fu_1059_p2");
    sc_trace(mVcdFile, tmp_68_fu_1065_p2, "tmp_68_fu_1065_p2");
    sc_trace(mVcdFile, gepindex74_cast_fu_1094_p4, "gepindex74_cast_fu_1094_p4");
    sc_trace(mVcdFile, start_pos1_fu_1125_p3, "start_pos1_fu_1125_p3");
    sc_trace(mVcdFile, end_pos_fu_1132_p2, "end_pos_fu_1132_p2");
    sc_trace(mVcdFile, tmp_17_fu_1144_p1, "tmp_17_fu_1144_p1");
    sc_trace(mVcdFile, tmp_19_fu_1148_p1, "tmp_19_fu_1148_p1");
    sc_trace(mVcdFile, tmp_15_fu_1138_p2, "tmp_15_fu_1138_p2");
    sc_trace(mVcdFile, tmp_21_fu_1162_p2, "tmp_21_fu_1162_p2");
    sc_trace(mVcdFile, tmp_23_fu_1174_p2, "tmp_23_fu_1174_p2");
    sc_trace(mVcdFile, tmp_20_fu_1152_p4, "tmp_20_fu_1152_p4");
    sc_trace(mVcdFile, tmp_22_fu_1168_p2, "tmp_22_fu_1168_p2");
    sc_trace(mVcdFile, tmp_24_fu_1180_p3, "tmp_24_fu_1180_p3");
    sc_trace(mVcdFile, tmp_26_fu_1196_p3, "tmp_26_fu_1196_p3");
    sc_trace(mVcdFile, tmp_27_fu_1204_p2, "tmp_27_fu_1204_p2");
    sc_trace(mVcdFile, tmp_25_fu_1188_p3, "tmp_25_fu_1188_p3");
    sc_trace(mVcdFile, tmp_28_fu_1210_p1, "tmp_28_fu_1210_p1");
    sc_trace(mVcdFile, tmp_29_fu_1214_p1, "tmp_29_fu_1214_p1");
    sc_trace(mVcdFile, tmp_30_fu_1218_p2, "tmp_30_fu_1218_p2");
    sc_trace(mVcdFile, tmp_31_fu_1224_p2, "tmp_31_fu_1224_p2");
    sc_trace(mVcdFile, tmp_32_fu_1230_p2, "tmp_32_fu_1230_p2");
    sc_trace(mVcdFile, tmp_12_fu_1241_p2, "tmp_12_fu_1241_p2");
    sc_trace(mVcdFile, start_pos2_fu_1246_p3, "start_pos2_fu_1246_p3");
    sc_trace(mVcdFile, end_pos1_fu_1254_p2, "end_pos1_fu_1254_p2");
    sc_trace(mVcdFile, tmp_35_fu_1266_p1, "tmp_35_fu_1266_p1");
    sc_trace(mVcdFile, tmp_36_fu_1270_p1, "tmp_36_fu_1270_p1");
    sc_trace(mVcdFile, tmp_34_fu_1260_p2, "tmp_34_fu_1260_p2");
    sc_trace(mVcdFile, tmp_38_fu_1284_p2, "tmp_38_fu_1284_p2");
    sc_trace(mVcdFile, tmp_40_fu_1296_p2, "tmp_40_fu_1296_p2");
    sc_trace(mVcdFile, tmp_37_fu_1274_p4, "tmp_37_fu_1274_p4");
    sc_trace(mVcdFile, tmp_39_fu_1290_p2, "tmp_39_fu_1290_p2");
    sc_trace(mVcdFile, tmp_41_fu_1302_p3, "tmp_41_fu_1302_p3");
    sc_trace(mVcdFile, tmp_43_fu_1318_p3, "tmp_43_fu_1318_p3");
    sc_trace(mVcdFile, tmp_44_fu_1326_p2, "tmp_44_fu_1326_p2");
    sc_trace(mVcdFile, tmp_42_fu_1310_p3, "tmp_42_fu_1310_p3");
    sc_trace(mVcdFile, tmp_45_fu_1332_p1, "tmp_45_fu_1332_p1");
    sc_trace(mVcdFile, tmp_46_fu_1336_p1, "tmp_46_fu_1336_p1");
    sc_trace(mVcdFile, tmp_47_fu_1340_p2, "tmp_47_fu_1340_p2");
    sc_trace(mVcdFile, tmp_48_fu_1346_p2, "tmp_48_fu_1346_p2");
    sc_trace(mVcdFile, tmp_49_fu_1352_p2, "tmp_49_fu_1352_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_condition_782, "ap_condition_782");
    sc_trace(mVcdFile, ap_condition_1458, "ap_condition_1458");
    sc_trace(mVcdFile, ap_condition_473, "ap_condition_473");
    sc_trace(mVcdFile, ap_condition_544, "ap_condition_544");
#endif

    }
    mHdltvinHandle.open("ddr_to_axis_reader_SD.hdltvin.dat");
    mHdltvoutHandle.open("ddr_to_axis_reader_SD.hdltvout.dat");
}

ddr_to_axis_reader_SD::~ddr_to_axis_reader_SD() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete ddr_to_axis_reader_SD_AXILiteS_s_axi_U;
    delete ddr_to_axis_reader_SD_base_ddr_addr_m_axi_U;
    delete buffer_U;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_200;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void ddr_to_axis_reader_SD::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv64_0;
}

void ddr_to_axis_reader_SD::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        BASE_ADDRESS_r = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, p_BASE_ADDRESS_flag_fu_557_p2.read()))) {
            BASE_ADDRESS_r = tmp_7_base_address_fu_563_p3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        FRAME_BUFFER_DIM_r = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, p_FRAME_BUFFER_DIM_fl_fu_519_p2.read()))) {
            FRAME_BUFFER_DIM_r = frame_buffer_dim.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        FRAME_BUFFER_NUMBER_r = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, p_FRAME_BUFFER_NUMBER_fu_539_p2.read()))) {
            FRAME_BUFFER_NUMBER_r = frame_buffer_number.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        FRAME_OFFSET = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, p_FRAME_OFFSET_flag_fu_533_p2.read()))) {
            FRAME_OFFSET = frame_buffer_offset.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state9.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state13.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(stereo_enabler_read_reg_1363.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state13.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state13.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(stereo_enabler_read_reg_1363.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state17.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(stereo_enabler_read_reg_1363.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state17.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state17.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        } else if ((esl_seteq<1,1,1>(stereo_enabler_read_reg_1363.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
            ap_enable_reg_pp2_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_0))) {
            if (esl_seteq<1,1,1>(ap_condition_473.read(), ap_const_boolean_1)) {
                ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_condition_1458.read(), ap_const_boolean_1)) {
                ap_reg_ioackin_base_ddr_addr_ARREADY = ap_const_logic_1;
            }
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_reg_386 = i_1_reg_1415.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_386 = ap_const_lv20_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_reg_397 = indvar_next_reg_1430.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        indvar_reg_397 = ap_const_lv10_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        inner_index = ap_const_lv32_0;
    } else {
        if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            inner_index = storemerge_fu_678_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(stereo_enabler_read_reg_1363.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        j1_reg_430 = ap_const_lv13_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1082_p3.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        j1_reg_430 = j_2_fu_1119_p2.read();
    }
    if ((esl_seteq<1,1,1>(stereo_enabler_read_reg_1363.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        j_reg_409 = ap_const_lv13_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1))) {
        j_reg_409 = j_4_fu_838_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        luma_chroma_switch = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_544.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_721_p2.read())) {
                luma_chroma_switch = ap_const_lv32_0;
            } else if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_721_p2.read())) {
                luma_chroma_switch = tmp_18_fu_727_p2.read();
            }
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        offset1_reg_376 = offset_1_fu_1076_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        offset1_reg_376 = offset_fu_607_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_channel_1_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_vld_out.read()))) {
            outStream_channel_1_V_1_sel_rd =  (sc_logic) (~outStream_channel_1_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_channel_1_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_ack_in.read()))) {
            outStream_channel_1_V_1_sel_wr =  (sc_logic) (~outStream_channel_1_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outStream_channel_1_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outStream_channel_1_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(outStream_channel_1_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outStream_channel_1_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(outStream_channel_1_V_1_state.read(), ap_const_lv2_2)))) {
            outStream_channel_1_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outStream_channel_1_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(outStream_channel_1_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outStream_channel_1_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(outStream_channel_1_V_1_state.read(), ap_const_lv2_1)))) {
            outStream_channel_1_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(outStream_channel_1_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(outStream_channel_1_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(outStream_channel_1_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outStream_channel_1_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outStream_channel_1_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_ack_out.read()))))) {
            outStream_channel_1_V_1_state = ap_const_lv2_3;
        } else {
            outStream_channel_1_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outstream_channel_2_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_vld_out.read()))) {
            outstream_channel_2_V_1_sel_rd =  (sc_logic) (~outstream_channel_2_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outstream_channel_2_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_ack_in.read()))) {
            outstream_channel_2_V_1_sel_wr =  (sc_logic) (~outstream_channel_2_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        outstream_channel_2_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, outstream_channel_2_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, outstream_channel_2_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, outstream_channel_2_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, outstream_channel_2_V_1_state.read())))) {
            outstream_channel_2_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, outstream_channel_2_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, outstream_channel_2_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, outstream_channel_2_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outstream_channel_2_V_1_state.read())))) {
            outstream_channel_2_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, outstream_channel_2_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, outstream_channel_2_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, outstream_channel_2_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, outstream_channel_2_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, outstream_channel_2_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_ack_out.read()))))) {
            outstream_channel_2_V_1_state = ap_const_lv2_3;
        } else {
            outstream_channel_2_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        base_ddr_addr_addr_r_reg_1435 = base_ddr_addr_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_1426 = exitcond_fu_692_p2.read();
        exitcond_reg_1426_pp0_iter1_reg = exitcond_reg_1426.read();
        indvar_reg_397_pp0_iter1_reg = indvar_reg_397.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_5_load_fu_460_p1.read()))) {
        guard_variable_for_d = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_6_load_fu_475_p1.read()))) {
        guard_variable_for_d_1 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_4_load_fu_445_p1.read()))) {
        guard_variable_for_d_2 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_7_load_fu_490_p1.read()))) {
        guard_variable_for_d_3 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)))) {
        i_1_reg_1415 = i_1_fu_652_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        indvar_next_reg_1430 = indvar_next_fu_698_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        inner_index_load_reg_1367 = inner_index.read();
        stereo_enabler_read_reg_1363 =  (sc_lv<1>) (stereo_enabler.read());
        tmp_1_FRAME_BUFFER_N_1_reg_1394 = tmp_1_FRAME_BUFFER_N_1_fu_553_p1.read();
        tmp_5_reg_1407 = frame_buffer_dim_FRA_fu_525_p3.read().range(31, 12);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_load_A.read())) {
        outStream_channel_1_V_1_payload_A = outStream_channel_1_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_load_B.read())) {
        outStream_channel_1_V_1_payload_B = outStream_channel_1_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_load_A.read())) {
        outstream_channel_2_V_1_payload_A = tmp_50_fu_1358_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_load_B.read())) {
        outstream_channel_2_V_1_payload_B = tmp_50_fu_1358_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_1082_p3.read()))) {
        tmp_11_reg_1492 = tmp_11_fu_1090_p1.read();
        tmp_13_reg_1503 = j1_reg_430.read().range(2, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()))) {
        tmp_16_reg_1444 = tmp_16_fu_721_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_16_reg_1444_pp1_iter1_reg = tmp_16_reg_1444.read();
        tmp_6_reg_1440 = j_reg_409.read().range(12, 12);
        tmp_6_reg_1440_pp1_iter1_reg = tmp_6_reg_1440.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_721_p2.read()))) {
        tmp_51_reg_1458 = tmp_51_fu_771_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_721_p2.read()))) {
        tmp_70_reg_1448 = tmp_70_fu_739_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_1488 = j1_reg_430.read().range(12, 12);
        tmp_reg_1488_pp2_iter1_reg = tmp_reg_1488.read();
    }
}

void ddr_to_axis_reader_SD::thread_addrCmp1_fu_805_p2() {
    addrCmp1_fu_805_p2 = (!mem_index_gep_fu_789_p2.read().is_01() || !ap_const_lv14_204.is_01())? sc_lv<1>(): (sc_biguint<14>(mem_index_gep_fu_789_p2.read()) < sc_biguint<14>(ap_const_lv14_204));
}

void ddr_to_axis_reader_SD::thread_addrCmp_fu_799_p2() {
    addrCmp_fu_799_p2 = (!tmp_52_fu_775_p4.read().is_01() || !ap_const_lv10_3FC.is_01())? sc_lv<1>(): (sc_biguint<10>(tmp_52_fu_775_p4.read()) < sc_biguint<10>(ap_const_lv10_3FC));
}

void ddr_to_axis_reader_SD::thread_adjSize55_cast_fu_795_p1() {
    adjSize55_cast_fu_795_p1 = esl_zext<15,14>(mem_index_gep_fu_789_p2.read());
}

void ddr_to_axis_reader_SD::thread_adjSize_fu_785_p1() {
    adjSize_fu_785_p1 = esl_sext<14,10>(tmp_52_fu_775_p4.read());
}

void ddr_to_axis_reader_SD::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void ddr_to_axis_reader_SD::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[10];
}

void ddr_to_axis_reader_SD::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[12];
}

void ddr_to_axis_reader_SD::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ddr_to_axis_reader_SD::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[9];
}

void ddr_to_axis_reader_SD::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[11];
}

void ddr_to_axis_reader_SD::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ddr_to_axis_reader_SD::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void ddr_to_axis_reader_SD::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, base_ddr_addr_RVALID.read()));
}

void ddr_to_axis_reader_SD::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, base_ddr_addr_RVALID.read()));
}

void ddr_to_axis_reader_SD::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state14_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state15_io.read())));
}

void ddr_to_axis_reader_SD::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state14_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state15_io.read())));
}

void ddr_to_axis_reader_SD::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_pp2_stage0_01001() {
    ap_block_pp2_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state19_io.read())));
}

void ddr_to_axis_reader_SD::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state19_io.read())));
}

void ddr_to_axis_reader_SD::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, base_ddr_addr_RVALID.read()));
}

void ddr_to_axis_reader_SD::thread_ap_block_state11_pp0_stage0_iter2() {
    ap_block_state11_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_state13_pp1_stage0_iter0() {
    ap_block_state13_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_state14_io() {
    ap_block_state14_io = ((esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op207_write_state14.read())) || (esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op228_write_state14.read())));
}

void ddr_to_axis_reader_SD::thread_ap_block_state14_pp1_stage0_iter1() {
    ap_block_state14_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_state15_io() {
    ap_block_state15_io = ((esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op229_write_state15.read())) || (esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op230_write_state15.read())));
}

void ddr_to_axis_reader_SD::thread_ap_block_state15_pp1_stage0_iter2() {
    ap_block_state15_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_state17_pp2_stage0_iter0() {
    ap_block_state17_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_state18_io() {
    ap_block_state18_io = ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488.read()) && 
  esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488.read()) && 
  esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)));
}

void ddr_to_axis_reader_SD::thread_ap_block_state18_pp2_stage0_iter1() {
    ap_block_state18_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_state19_io() {
    ap_block_state19_io = ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488_pp2_iter1_reg.read()) && 
  esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488_pp2_iter1_reg.read()) && 
  esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)));
}

void ddr_to_axis_reader_SD::thread_ap_block_state19_pp2_stage0_iter2() {
    ap_block_state19_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0));
}

void ddr_to_axis_reader_SD::thread_ap_block_state2_io() {
    ap_block_state2_io = (esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_base_ddr_addr_ARREADY.read()));
}

void ddr_to_axis_reader_SD::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ddr_to_axis_reader_SD::thread_ap_condition_1458() {
    ap_condition_1458 = (esl_seteq<1,1,1>(ap_const_logic_1, base_ddr_addr_ARREADY.read()) && !(esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)));
}

void ddr_to_axis_reader_SD::thread_ap_condition_473() {
    ap_condition_473 = !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0));
}

void ddr_to_axis_reader_SD::thread_ap_condition_544() {
    ap_condition_544 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1));
}

void ddr_to_axis_reader_SD::thread_ap_condition_782() {
    ap_condition_782 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1));
}

void ddr_to_axis_reader_SD::thread_ap_condition_pp0_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(exitcond_fu_692_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_condition_pp1_exit_iter0_state13() {
    if (esl_seteq<1,1,1>(tmp_6_fu_709_p3.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state13 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state13 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_condition_pp2_exit_iter0_state17() {
    if (esl_seteq<1,1,1>(tmp_fu_1082_p3.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state17 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state17 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void ddr_to_axis_reader_SD::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void ddr_to_axis_reader_SD::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void ddr_to_axis_reader_SD::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, guard_variable_for_d_7_load_fu_490_p1.read())) {
            ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_7_load_fu_490_p1.read())) {
            ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4 = ap_const_lv1_1;
        } else {
            ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4 = "X";
        }
    } else {
        ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4 = "X";
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, guard_variable_for_d_7_load_fu_490_p1.read())) {
            ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4 = BASE_ADDRESS_r.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_7_load_fu_490_p1.read())) {
            ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4 = base_address.read();
        } else {
            ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, guard_variable_for_d_4_load_fu_445_p1.read())) {
            ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_4_load_fu_445_p1.read())) {
            ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4 = ap_const_lv1_1;
        } else {
            ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4 = "X";
        }
    } else {
        ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4 = "X";
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, guard_variable_for_d_4_load_fu_445_p1.read())) {
            ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4 = FRAME_BUFFER_DIM_r.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_4_load_fu_445_p1.read())) {
            ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4 = frame_buffer_dim.read();
        } else {
            ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, guard_variable_for_d_6_load_fu_475_p1.read())) {
            ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_6_load_fu_475_p1.read())) {
            ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4 = ap_const_lv1_1;
        } else {
            ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4 = "X";
        }
    } else {
        ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4 = "X";
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, guard_variable_for_d_6_load_fu_475_p1.read())) {
            ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4 = FRAME_BUFFER_NUMBER_r.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_6_load_fu_475_p1.read())) {
            ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4 = frame_buffer_number.read();
        } else {
            ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, guard_variable_for_d_5_load_fu_460_p1.read())) {
            ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_5_load_fu_460_p1.read())) {
            ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4 = ap_const_lv1_1;
        } else {
            ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4 = "X";
        }
    } else {
        ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4 = "X";
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, guard_variable_for_d_5_load_fu_460_p1.read())) {
            ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4 = FRAME_OFFSET.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, guard_variable_for_d_5_load_fu_460_p1.read())) {
            ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4 = frame_buffer_offset.read();
        } else {
            ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_indvar_phi_fu_401_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426.read()))) {
        ap_phi_mux_indvar_phi_fu_401_p4 = indvar_next_reg_1430.read();
    } else {
        ap_phi_mux_indvar_phi_fu_401_p4 = indvar_reg_397.read();
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_mux_j_1_phi_fu_423_p4() {
    if (esl_seteq<1,1,1>(ap_condition_782.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_721_p2.read())) {
            ap_phi_mux_j_1_phi_fu_423_p4 = j_reg_409.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_721_p2.read())) {
            ap_phi_mux_j_1_phi_fu_423_p4 = j_3_fu_764_p2.read();
        } else {
            ap_phi_mux_j_1_phi_fu_423_p4 = ap_phi_reg_pp1_iter0_j_1_reg_420.read();
        }
    } else {
        ap_phi_mux_j_1_phi_fu_423_p4 = ap_phi_reg_pp1_iter0_j_1_reg_420.read();
    }
}

void ddr_to_axis_reader_SD::thread_ap_phi_reg_pp1_iter0_j_1_reg_420() {
    ap_phi_reg_pp1_iter0_j_1_reg_420 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
}

void ddr_to_axis_reader_SD::thread_ap_predicate_op207_write_state14() {
    ap_predicate_op207_write_state14 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_1440.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_1444.read()));
}

void ddr_to_axis_reader_SD::thread_ap_predicate_op228_write_state14() {
    ap_predicate_op228_write_state14 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_1440.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1444.read()));
}

void ddr_to_axis_reader_SD::thread_ap_predicate_op229_write_state15() {
    ap_predicate_op229_write_state15 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_1440_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_1444_pp1_iter1_reg.read()));
}

void ddr_to_axis_reader_SD::thread_ap_predicate_op230_write_state15() {
    ap_predicate_op230_write_state15 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_1440_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1444_pp1_iter1_reg.read()));
}

void ddr_to_axis_reader_SD::thread_ap_ready() {
    if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void ddr_to_axis_reader_SD::thread_ap_sig_ioackin_base_ddr_addr_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_base_ddr_addr_ARREADY.read())) {
        ap_sig_ioackin_base_ddr_addr_ARREADY = base_ddr_addr_ARREADY.read();
    } else {
        ap_sig_ioackin_base_ddr_addr_ARREADY = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_ARADDR() {
    base_ddr_addr_ARADDR =  (sc_lv<32>) (tmp_1_fu_658_p1.read());
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_base_ddr_addr_ARREADY.read()))) {
        base_ddr_addr_ARVALID = ap_const_logic_1;
    } else {
        base_ddr_addr_ARVALID = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        base_ddr_addr_RREADY = ap_const_logic_1;
    } else {
        base_ddr_addr_RREADY = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_0))) {
        base_ddr_addr_blk_n_AR = m_axi_base_ddr_addr_ARREADY.read();
    } else {
        base_ddr_addr_blk_n_AR = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_base_ddr_addr_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426.read()))) {
        base_ddr_addr_blk_n_R = m_axi_base_ddr_addr_RVALID.read();
    } else {
        base_ddr_addr_blk_n_R = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_buffer_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        buffer_address0 =  (sc_lv<9>) (gepindex276_cast_fu_1104_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_721_p2.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1))) {
        buffer_address0 =  (sc_lv<9>) (gepindex2_cast_fu_833_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_721_p2.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1))) {
        buffer_address0 =  (sc_lv<9>) (gepindex264_cast_fu_753_p1.read());
    } else {
        buffer_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_buffer_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        buffer_address1 =  (sc_lv<9>) (gepindex276_cast_fu_1104_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1))) {
        buffer_address1 =  (sc_lv<9>) (indvar1_fu_704_p1.read());
    } else {
        buffer_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_buffer_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_721_p2.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_709_p3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_721_p2.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1)))) {
        buffer_ce0 = ap_const_logic_1;
    } else {
        buffer_ce0 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_buffer_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1)))) {
        buffer_ce1 = ap_const_logic_1;
    } else {
        buffer_ce1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_buffer_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1426_pp0_iter1_reg.read()))) {
        buffer_we1 = ap_const_logic_1;
    } else {
        buffer_we1 = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_end_pos1_fu_1254_p2() {
    end_pos1_fu_1254_p2 = (start_pos2_fu_1246_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader_SD::thread_end_pos2_fu_967_p2() {
    end_pos2_fu_967_p2 = (start_pos_fu_960_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader_SD::thread_end_pos3_fu_851_p2() {
    end_pos3_fu_851_p2 = (start_pos3_fu_844_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader_SD::thread_end_pos_fu_1132_p2() {
    end_pos_fu_1132_p2 = (start_pos1_fu_1125_p3.read() | ap_const_lv6_7);
}

void ddr_to_axis_reader_SD::thread_exitcond1_fu_647_p2() {
    exitcond1_fu_647_p2 = (!i_reg_386.read().is_01() || !tmp_5_reg_1407.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_386.read() == tmp_5_reg_1407.read());
}

void ddr_to_axis_reader_SD::thread_exitcond_fu_692_p2() {
    exitcond_fu_692_p2 = (!ap_phi_mux_indvar_phi_fu_401_p4.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_phi_fu_401_p4.read() == ap_const_lv10_200);
}

void ddr_to_axis_reader_SD::thread_frame_buffer_dim_FRA_fu_525_p0() {
    frame_buffer_dim_FRA_fu_525_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_frame_buffer_dim_FRA_fu_525_p3() {
    frame_buffer_dim_FRA_fu_525_p3 = (!frame_buffer_dim_FRA_fu_525_p0.read()[0].is_01())? sc_lv<32>(): ((frame_buffer_dim_FRA_fu_525_p0.read()[0].to_bool())? frame_buffer_dim.read(): ap_phi_mux_FRAME_BUFFER_DIM_loc_phi_fu_306_p4.read());
}

void ddr_to_axis_reader_SD::thread_frame_buffer_offset_s_fu_571_p0() {
    frame_buffer_offset_s_fu_571_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_frame_buffer_offset_s_fu_571_p3() {
    frame_buffer_offset_s_fu_571_p3 = (!frame_buffer_offset_s_fu_571_p0.read()[0].is_01())? sc_lv<32>(): ((frame_buffer_offset_s_fu_571_p0.read()[0].to_bool())? frame_buffer_offset.read(): ap_phi_mux_FRAME_OFFSET_loc_phi_fu_327_p4.read());
}

void ddr_to_axis_reader_SD::thread_gepindex1_fu_817_p3() {
    gepindex1_fu_817_p3 = (!addrCmp_fu_799_p2.read()[0].is_01())? sc_lv<15>(): ((addrCmp_fu_799_p2.read()[0].to_bool())? gepindex_fu_811_p2.read(): ap_const_lv15_1FF);
}

void ddr_to_axis_reader_SD::thread_gepindex264_cast_fu_753_p1() {
    gepindex264_cast_fu_753_p1 = esl_zext<64,9>(gepindex62_cast_fu_743_p4.read());
}

void ddr_to_axis_reader_SD::thread_gepindex276_cast_fu_1104_p1() {
    gepindex276_cast_fu_1104_p1 = esl_zext<64,9>(gepindex74_cast_fu_1094_p4.read());
}

void ddr_to_axis_reader_SD::thread_gepindex2_cast_fu_833_p1() {
    gepindex2_cast_fu_833_p1 = esl_sext<64,15>(gepindex2_fu_825_p3.read());
}

void ddr_to_axis_reader_SD::thread_gepindex2_fu_825_p3() {
    gepindex2_fu_825_p3 = (!addrCmp1_fu_805_p2.read()[0].is_01())? sc_lv<15>(): ((addrCmp1_fu_805_p2.read()[0].to_bool())? gepindex1_fu_817_p3.read(): ap_const_lv15_1FF);
}

void ddr_to_axis_reader_SD::thread_gepindex62_cast_fu_743_p4() {
    gepindex62_cast_fu_743_p4 = j_reg_409.read().range(11, 3);
}

void ddr_to_axis_reader_SD::thread_gepindex74_cast_fu_1094_p4() {
    gepindex74_cast_fu_1094_p4 = j1_reg_430.read().range(11, 3);
}

void ddr_to_axis_reader_SD::thread_gepindex_fu_811_p2() {
    gepindex_fu_811_p2 = (!ap_const_lv15_7FFC.is_01() || !adjSize55_cast_fu_795_p1.read().is_01())? sc_lv<15>(): (sc_bigint<15>(ap_const_lv15_7FFC) + sc_biguint<15>(adjSize55_cast_fu_795_p1.read()));
}

void ddr_to_axis_reader_SD::thread_guard_variable_for_d_4_load_fu_445_p1() {
    guard_variable_for_d_4_load_fu_445_p1 = guard_variable_for_d_2.read();
}

void ddr_to_axis_reader_SD::thread_guard_variable_for_d_5_load_fu_460_p1() {
    guard_variable_for_d_5_load_fu_460_p1 = guard_variable_for_d.read();
}

void ddr_to_axis_reader_SD::thread_guard_variable_for_d_6_load_fu_475_p1() {
    guard_variable_for_d_6_load_fu_475_p1 = guard_variable_for_d_1.read();
}

void ddr_to_axis_reader_SD::thread_guard_variable_for_d_7_load_fu_490_p1() {
    guard_variable_for_d_7_load_fu_490_p1 = guard_variable_for_d_3.read();
}

void ddr_to_axis_reader_SD::thread_i_1_fu_652_p2() {
    i_1_fu_652_p2 = (!i_reg_386.read().is_01() || !ap_const_lv20_1.is_01())? sc_lv<20>(): (sc_biguint<20>(i_reg_386.read()) + sc_biguint<20>(ap_const_lv20_1));
}

void ddr_to_axis_reader_SD::thread_indvar1_fu_704_p1() {
    indvar1_fu_704_p1 = esl_zext<64,10>(indvar_reg_397_pp0_iter1_reg.read());
}

void ddr_to_axis_reader_SD::thread_indvar_next_fu_698_p2() {
    indvar_next_fu_698_p2 = (!ap_phi_mux_indvar_phi_fu_401_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(ap_phi_mux_indvar_phi_fu_401_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void ddr_to_axis_reader_SD::thread_j_2_fu_1119_p2() {
    j_2_fu_1119_p2 = (!ap_const_lv13_2.is_01() || !j1_reg_430.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2) + sc_biguint<13>(j1_reg_430.read()));
}

void ddr_to_axis_reader_SD::thread_j_3_fu_764_p2() {
    j_3_fu_764_p2 = (!ap_const_lv13_1FFF.is_01() || !j_reg_409.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_1FFF) + sc_biguint<13>(j_reg_409.read()));
}

void ddr_to_axis_reader_SD::thread_j_4_fu_838_p2() {
    j_4_fu_838_p2 = (!ap_phi_mux_j_1_phi_fu_423_p4.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(ap_phi_mux_j_1_phi_fu_423_p4.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void ddr_to_axis_reader_SD::thread_mem_index_gep_fu_789_p2() {
    mem_index_gep_fu_789_p2 = (!ap_const_lv14_4.is_01() || !adjSize_fu_785_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ap_const_lv14_4) + sc_bigint<14>(adjSize_fu_785_p1.read()));
}

void ddr_to_axis_reader_SD::thread_offset_1_fu_1076_p2() {
    offset_1_fu_1076_p2 = (!offset1_reg_376.read().is_01() || !ap_const_lv32_200.is_01())? sc_lv<32>(): (sc_bigint<32>(offset1_reg_376.read()) + sc_biguint<32>(ap_const_lv32_200));
}

void ddr_to_axis_reader_SD::thread_offset_fu_607_p2() {
    offset_fu_607_p2 = (!tmp_9_fu_603_p1.read().is_01() || !tmp_7_BASE_ADDRESS_l_fu_579_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_9_fu_603_p1.read()) + sc_biguint<32>(tmp_7_BASE_ADDRESS_l_fu_579_p3.read()));
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_ack_in() {
    outStream_channel_1_V_1_ack_in = outStream_channel_1_V_1_state.read()[1];
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_ack_out() {
    outStream_channel_1_V_1_ack_out = outStream_channel_1_V_TREADY.read();
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_01001.read(), ap_const_boolean_0))) {
        outStream_channel_1_V_1_data_in = tmp_33_fu_1236_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op228_write_state14.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0))) {
        outStream_channel_1_V_1_data_in = tmp_69_fu_1071_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op207_write_state14.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0))) {
        outStream_channel_1_V_1_data_in = tmp_87_fu_955_p1.read();
    } else {
        outStream_channel_1_V_1_data_in =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outStream_channel_1_V_1_sel.read())) {
        outStream_channel_1_V_1_data_out = outStream_channel_1_V_1_payload_B.read();
    } else {
        outStream_channel_1_V_1_data_out = outStream_channel_1_V_1_payload_A.read();
    }
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_load_A() {
    outStream_channel_1_V_1_load_A = (outStream_channel_1_V_1_state_cmp_full.read() & ~outStream_channel_1_V_1_sel_wr.read());
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_load_B() {
    outStream_channel_1_V_1_load_B = (outStream_channel_1_V_1_sel_wr.read() & outStream_channel_1_V_1_state_cmp_full.read());
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_sel() {
    outStream_channel_1_V_1_sel = outStream_channel_1_V_1_sel_rd.read();
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_state_cmp_full() {
    outStream_channel_1_V_1_state_cmp_full =  (sc_logic) ((!outStream_channel_1_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outStream_channel_1_V_1_state.read() != ap_const_lv2_1))[0];
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op207_write_state14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op228_write_state14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)))) {
        outStream_channel_1_V_1_vld_in = ap_const_logic_1;
    } else {
        outStream_channel_1_V_1_vld_in = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_1_vld_out() {
    outStream_channel_1_V_1_vld_out = outStream_channel_1_V_1_state.read()[0];
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_TDATA() {
    outStream_channel_1_V_TDATA = outStream_channel_1_V_1_data_out.read();
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_1440.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1444.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_1440_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1444_pp1_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_1440.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_1444.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_1440_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_1444_pp1_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488_pp2_iter1_reg.read())))) {
        outStream_channel_1_V_TDATA_blk_n = outStream_channel_1_V_1_state.read()[1];
    } else {
        outStream_channel_1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_outStream_channel_1_V_TVALID() {
    outStream_channel_1_V_TVALID = outStream_channel_1_V_1_state.read()[0];
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_ack_in() {
    outstream_channel_2_V_1_ack_in = outstream_channel_2_V_1_state.read()[1];
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_ack_out() {
    outstream_channel_2_V_1_ack_out = outstream_channel_2_V_TREADY.read();
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, outstream_channel_2_V_1_sel.read())) {
        outstream_channel_2_V_1_data_out = outstream_channel_2_V_1_payload_B.read();
    } else {
        outstream_channel_2_V_1_data_out = outstream_channel_2_V_1_payload_A.read();
    }
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_load_A() {
    outstream_channel_2_V_1_load_A = (outstream_channel_2_V_1_state_cmp_full.read() & ~outstream_channel_2_V_1_sel_wr.read());
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_load_B() {
    outstream_channel_2_V_1_load_B = (outstream_channel_2_V_1_sel_wr.read() & outstream_channel_2_V_1_state_cmp_full.read());
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_sel() {
    outstream_channel_2_V_1_sel = outstream_channel_2_V_1_sel_rd.read();
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_state_cmp_full() {
    outstream_channel_2_V_1_state_cmp_full =  (sc_logic) ((!outstream_channel_2_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(outstream_channel_2_V_1_state.read() != ap_const_lv2_1))[0];
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        outstream_channel_2_V_1_vld_in = ap_const_logic_1;
    } else {
        outstream_channel_2_V_1_vld_in = ap_const_logic_0;
    }
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_1_vld_out() {
    outstream_channel_2_V_1_vld_out = outstream_channel_2_V_1_state.read()[0];
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_TDATA() {
    outstream_channel_2_V_TDATA = outstream_channel_2_V_1_data_out.read();
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1488_pp2_iter1_reg.read())))) {
        outstream_channel_2_V_TDATA_blk_n = outstream_channel_2_V_1_state.read()[1];
    } else {
        outstream_channel_2_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void ddr_to_axis_reader_SD::thread_outstream_channel_2_V_TVALID() {
    outstream_channel_2_V_TVALID = outstream_channel_2_V_1_state.read()[0];
}

void ddr_to_axis_reader_SD::thread_p_BASE_ADDRESS_flag_fu_557_p1() {
    p_BASE_ADDRESS_flag_fu_557_p1 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_p_BASE_ADDRESS_flag_fu_557_p2() {
    p_BASE_ADDRESS_flag_fu_557_p2 = (ap_phi_mux_BASE_ADDRESS_flag_phi_fu_358_p4.read() | p_BASE_ADDRESS_flag_fu_557_p1.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_BUFFER_DIM_fl_fu_519_p1() {
    p_FRAME_BUFFER_DIM_fl_fu_519_p1 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_BUFFER_DIM_fl_fu_519_p2() {
    p_FRAME_BUFFER_DIM_fl_fu_519_p2 = (ap_phi_mux_FRAME_BUFFER_DIM_fla_phi_fu_295_p4.read() | p_FRAME_BUFFER_DIM_fl_fu_519_p1.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_BUFFER_NUMBER_fu_539_p1() {
    p_FRAME_BUFFER_NUMBER_fu_539_p1 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_BUFFER_NUMBER_fu_539_p2() {
    p_FRAME_BUFFER_NUMBER_fu_539_p2 = (ap_phi_mux_FRAME_BUFFER_NUMBER_1_phi_fu_337_p4.read() | p_FRAME_BUFFER_NUMBER_fu_539_p1.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_OFFSET_flag_fu_533_p1() {
    p_FRAME_OFFSET_flag_fu_533_p1 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_p_FRAME_OFFSET_flag_fu_533_p2() {
    p_FRAME_OFFSET_flag_fu_533_p2 = (ap_phi_mux_FRAME_OFFSET_flag_phi_fu_316_p4.read() | p_FRAME_OFFSET_flag_fu_533_p1.read());
}

void ddr_to_axis_reader_SD::thread_start_pos1_fu_1125_p3() {
    start_pos1_fu_1125_p3 = esl_concat<2,4>(tmp_13_reg_1503.read(), ap_const_lv4_0);
}

void ddr_to_axis_reader_SD::thread_start_pos2_fu_1246_p3() {
    start_pos2_fu_1246_p3 = esl_concat<3,3>(tmp_12_fu_1241_p2.read(), ap_const_lv3_0);
}

void ddr_to_axis_reader_SD::thread_start_pos3_fu_844_p3() {
    start_pos3_fu_844_p3 = esl_concat<3,3>(tmp_70_reg_1448.read(), ap_const_lv3_0);
}

void ddr_to_axis_reader_SD::thread_start_pos_fu_960_p3() {
    start_pos_fu_960_p3 = esl_concat<3,3>(tmp_51_reg_1458.read(), ap_const_lv3_0);
}

void ddr_to_axis_reader_SD::thread_storemerge_fu_678_p3() {
    storemerge_fu_678_p3 = (!tmp_3_fu_669_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_669_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_4_fu_673_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_11_fu_1090_p1() {
    tmp_11_fu_1090_p1 = j1_reg_430.read().range(3-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_12_fu_1241_p2() {
    tmp_12_fu_1241_p2 = (tmp_11_reg_1492.read() | ap_const_lv3_1);
}

void ddr_to_axis_reader_SD::thread_tmp_15_fu_1138_p2() {
    tmp_15_fu_1138_p2 = (!start_pos1_fu_1125_p3.read().is_01() || !end_pos_fu_1132_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos1_fu_1125_p3.read()) > sc_biguint<6>(end_pos_fu_1132_p2.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_16_fu_721_p2() {
    tmp_16_fu_721_p2 = (!luma_chroma_switch.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(luma_chroma_switch.read() == ap_const_lv32_1);
}

void ddr_to_axis_reader_SD::thread_tmp_17_fu_1144_p1() {
    tmp_17_fu_1144_p1 = esl_zext<7,6>(start_pos1_fu_1125_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_18_fu_727_p2() {
    tmp_18_fu_727_p2 = (!ap_const_lv32_1.is_01() || !luma_chroma_switch.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(luma_chroma_switch.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_19_fu_1148_p1() {
    tmp_19_fu_1148_p1 = esl_zext<7,6>(end_pos_fu_1132_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_1_FRAME_BUFFER_N_1_fu_553_p1() {
    tmp_1_FRAME_BUFFER_N_1_fu_553_p1 = esl_zext<32,8>(tmp_1_FRAME_BUFFER_N_fu_545_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_1_FRAME_BUFFER_N_fu_545_p0() {
    tmp_1_FRAME_BUFFER_N_fu_545_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_tmp_1_FRAME_BUFFER_N_fu_545_p3() {
    tmp_1_FRAME_BUFFER_N_fu_545_p3 = (!tmp_1_FRAME_BUFFER_N_fu_545_p0.read()[0].is_01())? sc_lv<8>(): ((tmp_1_FRAME_BUFFER_N_fu_545_p0.read()[0].to_bool())? frame_buffer_number.read(): ap_phi_mux_FRAME_BUFFER_NUMBER_2_phi_fu_348_p4.read());
}

void ddr_to_axis_reader_SD::thread_tmp_1_fu_658_p1() {
    tmp_1_fu_658_p1 = esl_sext<64,32>(offset1_reg_376.read());
}

void ddr_to_axis_reader_SD::thread_tmp_20_fu_1152_p4() {
    tmp_20_fu_1152_p4 = buffer_q0.read().range(0, 63);
}

void ddr_to_axis_reader_SD::thread_tmp_21_fu_1162_p2() {
    tmp_21_fu_1162_p2 = (!tmp_17_fu_1144_p1.read().is_01() || !tmp_19_fu_1148_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_17_fu_1144_p1.read()) - sc_biguint<7>(tmp_19_fu_1148_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_22_fu_1168_p2() {
    tmp_22_fu_1168_p2 = (tmp_17_fu_1144_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader_SD::thread_tmp_23_fu_1174_p2() {
    tmp_23_fu_1174_p2 = (!tmp_19_fu_1148_p1.read().is_01() || !tmp_17_fu_1144_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_19_fu_1148_p1.read()) - sc_biguint<7>(tmp_17_fu_1144_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_24_fu_1180_p3() {
    tmp_24_fu_1180_p3 = (!tmp_15_fu_1138_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_15_fu_1138_p2.read()[0].to_bool())? tmp_21_fu_1162_p2.read(): tmp_23_fu_1174_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_25_fu_1188_p3() {
    tmp_25_fu_1188_p3 = (!tmp_15_fu_1138_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_15_fu_1138_p2.read()[0].to_bool())? tmp_20_fu_1152_p4.read(): buffer_q0.read());
}

void ddr_to_axis_reader_SD::thread_tmp_26_fu_1196_p3() {
    tmp_26_fu_1196_p3 = (!tmp_15_fu_1138_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_15_fu_1138_p2.read()[0].to_bool())? tmp_22_fu_1168_p2.read(): tmp_17_fu_1144_p1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_27_fu_1204_p2() {
    tmp_27_fu_1204_p2 = (!ap_const_lv7_3F.is_01() || !tmp_24_fu_1180_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_24_fu_1180_p3.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_28_fu_1210_p1() {
    tmp_28_fu_1210_p1 = esl_zext<64,7>(tmp_26_fu_1196_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_29_fu_1214_p1() {
    tmp_29_fu_1214_p1 = esl_zext<64,7>(tmp_27_fu_1204_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_2_fu_593_p4() {
    tmp_2_fu_593_p4 = tmp_s_fu_587_p2.read().range(31, 3);
}

void ddr_to_axis_reader_SD::thread_tmp_30_fu_1218_p2() {
    tmp_30_fu_1218_p2 = (!tmp_28_fu_1210_p1.read().is_01())? sc_lv<64>(): tmp_25_fu_1188_p3.read() >> (unsigned short)tmp_28_fu_1210_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_31_fu_1224_p2() {
    tmp_31_fu_1224_p2 = (!tmp_29_fu_1214_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_29_fu_1214_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_32_fu_1230_p2() {
    tmp_32_fu_1230_p2 = (tmp_30_fu_1218_p2.read() & tmp_31_fu_1224_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_33_fu_1236_p1() {
    tmp_33_fu_1236_p1 = tmp_32_fu_1230_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_34_fu_1260_p2() {
    tmp_34_fu_1260_p2 = (!start_pos2_fu_1246_p3.read().is_01() || !end_pos1_fu_1254_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos2_fu_1246_p3.read()) > sc_biguint<6>(end_pos1_fu_1254_p2.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_35_fu_1266_p1() {
    tmp_35_fu_1266_p1 = esl_zext<7,6>(start_pos2_fu_1246_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_36_fu_1270_p1() {
    tmp_36_fu_1270_p1 = esl_zext<7,6>(end_pos1_fu_1254_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_37_fu_1274_p4() {
    tmp_37_fu_1274_p4 = buffer_q1.read().range(0, 63);
}

void ddr_to_axis_reader_SD::thread_tmp_38_fu_1284_p2() {
    tmp_38_fu_1284_p2 = (!tmp_35_fu_1266_p1.read().is_01() || !tmp_36_fu_1270_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_35_fu_1266_p1.read()) - sc_biguint<7>(tmp_36_fu_1270_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_39_fu_1290_p2() {
    tmp_39_fu_1290_p2 = (tmp_35_fu_1266_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader_SD::thread_tmp_3_fu_669_p2() {
    tmp_3_fu_669_p2 = (!inner_index_load_reg_1367.read().is_01() || !tmp_1_FRAME_BUFFER_N_1_reg_1394.read().is_01())? sc_lv<1>(): sc_lv<1>(inner_index_load_reg_1367.read() == tmp_1_FRAME_BUFFER_N_1_reg_1394.read());
}

void ddr_to_axis_reader_SD::thread_tmp_40_fu_1296_p2() {
    tmp_40_fu_1296_p2 = (!tmp_36_fu_1270_p1.read().is_01() || !tmp_35_fu_1266_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_36_fu_1270_p1.read()) - sc_biguint<7>(tmp_35_fu_1266_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_41_fu_1302_p3() {
    tmp_41_fu_1302_p3 = (!tmp_34_fu_1260_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_34_fu_1260_p2.read()[0].to_bool())? tmp_38_fu_1284_p2.read(): tmp_40_fu_1296_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_42_fu_1310_p3() {
    tmp_42_fu_1310_p3 = (!tmp_34_fu_1260_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_34_fu_1260_p2.read()[0].to_bool())? tmp_37_fu_1274_p4.read(): buffer_q1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_43_fu_1318_p3() {
    tmp_43_fu_1318_p3 = (!tmp_34_fu_1260_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_34_fu_1260_p2.read()[0].to_bool())? tmp_39_fu_1290_p2.read(): tmp_35_fu_1266_p1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_44_fu_1326_p2() {
    tmp_44_fu_1326_p2 = (!ap_const_lv7_3F.is_01() || !tmp_41_fu_1302_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_41_fu_1302_p3.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_45_fu_1332_p1() {
    tmp_45_fu_1332_p1 = esl_zext<64,7>(tmp_43_fu_1318_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_46_fu_1336_p1() {
    tmp_46_fu_1336_p1 = esl_zext<64,7>(tmp_44_fu_1326_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_47_fu_1340_p2() {
    tmp_47_fu_1340_p2 = (!tmp_45_fu_1332_p1.read().is_01())? sc_lv<64>(): tmp_42_fu_1310_p3.read() >> (unsigned short)tmp_45_fu_1332_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_48_fu_1346_p2() {
    tmp_48_fu_1346_p2 = (!tmp_46_fu_1336_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_46_fu_1336_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_49_fu_1352_p2() {
    tmp_49_fu_1352_p2 = (tmp_47_fu_1340_p2.read() & tmp_48_fu_1346_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_4_fu_673_p2() {
    tmp_4_fu_673_p2 = (!inner_index_load_reg_1367.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(inner_index_load_reg_1367.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ddr_to_axis_reader_SD::thread_tmp_50_fu_1358_p1() {
    tmp_50_fu_1358_p1 = tmp_49_fu_1352_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_51_fu_771_p1() {
    tmp_51_fu_771_p1 = j_3_fu_764_p2.read().range(3-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_52_fu_775_p4() {
    tmp_52_fu_775_p4 = j_3_fu_764_p2.read().range(12, 3);
}

void ddr_to_axis_reader_SD::thread_tmp_53_fu_973_p2() {
    tmp_53_fu_973_p2 = (!start_pos_fu_960_p3.read().is_01() || !end_pos2_fu_967_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos_fu_960_p3.read()) > sc_biguint<6>(end_pos2_fu_967_p2.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_54_fu_979_p1() {
    tmp_54_fu_979_p1 = esl_zext<7,6>(start_pos_fu_960_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_55_fu_983_p1() {
    tmp_55_fu_983_p1 = esl_zext<7,6>(end_pos2_fu_967_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_56_fu_987_p4() {
    tmp_56_fu_987_p4 = buffer_q0.read().range(0, 63);
}

void ddr_to_axis_reader_SD::thread_tmp_57_fu_997_p2() {
    tmp_57_fu_997_p2 = (!tmp_54_fu_979_p1.read().is_01() || !tmp_55_fu_983_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_54_fu_979_p1.read()) - sc_biguint<7>(tmp_55_fu_983_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_58_fu_1003_p2() {
    tmp_58_fu_1003_p2 = (tmp_54_fu_979_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader_SD::thread_tmp_59_fu_1009_p2() {
    tmp_59_fu_1009_p2 = (!tmp_55_fu_983_p1.read().is_01() || !tmp_54_fu_979_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_55_fu_983_p1.read()) - sc_biguint<7>(tmp_54_fu_979_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_60_fu_1015_p3() {
    tmp_60_fu_1015_p3 = (!tmp_53_fu_973_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_53_fu_973_p2.read()[0].to_bool())? tmp_57_fu_997_p2.read(): tmp_59_fu_1009_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_61_fu_1023_p3() {
    tmp_61_fu_1023_p3 = (!tmp_53_fu_973_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_53_fu_973_p2.read()[0].to_bool())? tmp_56_fu_987_p4.read(): buffer_q0.read());
}

void ddr_to_axis_reader_SD::thread_tmp_62_fu_1031_p3() {
    tmp_62_fu_1031_p3 = (!tmp_53_fu_973_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_53_fu_973_p2.read()[0].to_bool())? tmp_58_fu_1003_p2.read(): tmp_54_fu_979_p1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_63_fu_1039_p2() {
    tmp_63_fu_1039_p2 = (!ap_const_lv7_3F.is_01() || !tmp_60_fu_1015_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_60_fu_1015_p3.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_64_fu_1045_p1() {
    tmp_64_fu_1045_p1 = esl_zext<64,7>(tmp_62_fu_1031_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_65_fu_1049_p1() {
    tmp_65_fu_1049_p1 = esl_zext<64,7>(tmp_63_fu_1039_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_66_fu_1053_p2() {
    tmp_66_fu_1053_p2 = (!tmp_64_fu_1045_p1.read().is_01())? sc_lv<64>(): tmp_61_fu_1023_p3.read() >> (unsigned short)tmp_64_fu_1045_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_67_fu_1059_p2() {
    tmp_67_fu_1059_p2 = (!tmp_65_fu_1049_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_65_fu_1049_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_68_fu_1065_p2() {
    tmp_68_fu_1065_p2 = (tmp_66_fu_1053_p2.read() & tmp_67_fu_1059_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_69_fu_1071_p1() {
    tmp_69_fu_1071_p1 = tmp_68_fu_1065_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_6_fu_709_p3() {
    tmp_6_fu_709_p3 = j_reg_409.read().range(12, 12);
}

void ddr_to_axis_reader_SD::thread_tmp_70_fu_739_p1() {
    tmp_70_fu_739_p1 = j_reg_409.read().range(3-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_71_fu_857_p2() {
    tmp_71_fu_857_p2 = (!start_pos3_fu_844_p3.read().is_01() || !end_pos3_fu_851_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(start_pos3_fu_844_p3.read()) > sc_biguint<6>(end_pos3_fu_851_p2.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_72_fu_863_p1() {
    tmp_72_fu_863_p1 = esl_zext<7,6>(start_pos3_fu_844_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_73_fu_867_p1() {
    tmp_73_fu_867_p1 = esl_zext<7,6>(end_pos3_fu_851_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_74_fu_871_p4() {
    tmp_74_fu_871_p4 = buffer_q0.read().range(0, 63);
}

void ddr_to_axis_reader_SD::thread_tmp_75_fu_881_p2() {
    tmp_75_fu_881_p2 = (!tmp_72_fu_863_p1.read().is_01() || !tmp_73_fu_867_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_72_fu_863_p1.read()) - sc_biguint<7>(tmp_73_fu_867_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_76_fu_887_p2() {
    tmp_76_fu_887_p2 = (tmp_72_fu_863_p1.read() ^ ap_const_lv7_3F);
}

void ddr_to_axis_reader_SD::thread_tmp_77_fu_893_p2() {
    tmp_77_fu_893_p2 = (!tmp_73_fu_867_p1.read().is_01() || !tmp_72_fu_863_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_73_fu_867_p1.read()) - sc_biguint<7>(tmp_72_fu_863_p1.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_78_fu_899_p3() {
    tmp_78_fu_899_p3 = (!tmp_71_fu_857_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_71_fu_857_p2.read()[0].to_bool())? tmp_75_fu_881_p2.read(): tmp_77_fu_893_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_79_fu_907_p3() {
    tmp_79_fu_907_p3 = (!tmp_71_fu_857_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_71_fu_857_p2.read()[0].to_bool())? tmp_74_fu_871_p4.read(): buffer_q0.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_BASE_ADDRESS_l_fu_579_p0() {
    tmp_7_BASE_ADDRESS_l_fu_579_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_BASE_ADDRESS_l_fu_579_p3() {
    tmp_7_BASE_ADDRESS_l_fu_579_p3 = (!tmp_7_BASE_ADDRESS_l_fu_579_p0.read()[0].is_01())? sc_lv<32>(): ((tmp_7_BASE_ADDRESS_l_fu_579_p0.read()[0].to_bool())? tmp_8_fu_515_p1.read(): ap_phi_mux_BASE_ADDRESS_loc_phi_fu_369_p4.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_base_address_fu_563_p0() {
    tmp_7_base_address_fu_563_p0 =  (sc_lv<1>) (update_intr.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_base_address_fu_563_p3() {
    tmp_7_base_address_fu_563_p3 = (!tmp_7_base_address_fu_563_p0.read()[0].is_01())? sc_lv<32>(): ((tmp_7_base_address_fu_563_p0.read()[0].to_bool())? tmp_8_fu_515_p1.read(): base_address.read());
}

void ddr_to_axis_reader_SD::thread_tmp_7_fu_505_p4() {
    tmp_7_fu_505_p4 = base_address.read().range(31, 3);
}

void ddr_to_axis_reader_SD::thread_tmp_80_fu_915_p3() {
    tmp_80_fu_915_p3 = (!tmp_71_fu_857_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_71_fu_857_p2.read()[0].to_bool())? tmp_76_fu_887_p2.read(): tmp_72_fu_863_p1.read());
}

void ddr_to_axis_reader_SD::thread_tmp_81_fu_923_p2() {
    tmp_81_fu_923_p2 = (!ap_const_lv7_3F.is_01() || !tmp_78_fu_899_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_3F) - sc_biguint<7>(tmp_78_fu_899_p3.read()));
}

void ddr_to_axis_reader_SD::thread_tmp_82_fu_929_p1() {
    tmp_82_fu_929_p1 = esl_zext<64,7>(tmp_80_fu_915_p3.read());
}

void ddr_to_axis_reader_SD::thread_tmp_83_fu_933_p1() {
    tmp_83_fu_933_p1 = esl_zext<64,7>(tmp_81_fu_923_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_84_fu_937_p2() {
    tmp_84_fu_937_p2 = (!tmp_82_fu_929_p1.read().is_01())? sc_lv<64>(): tmp_79_fu_907_p3.read() >> (unsigned short)tmp_82_fu_929_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_85_fu_943_p2() {
    tmp_85_fu_943_p2 = (!tmp_83_fu_933_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_FFFFFFFFFFFFFFFF >> (unsigned short)tmp_83_fu_933_p1.read().to_uint();
}

void ddr_to_axis_reader_SD::thread_tmp_86_fu_949_p2() {
    tmp_86_fu_949_p2 = (tmp_84_fu_937_p2.read() & tmp_85_fu_943_p2.read());
}

void ddr_to_axis_reader_SD::thread_tmp_87_fu_955_p1() {
    tmp_87_fu_955_p1 = tmp_86_fu_949_p2.read().range(8-1, 0);
}

void ddr_to_axis_reader_SD::thread_tmp_8_fu_515_p1() {
    tmp_8_fu_515_p1 = esl_zext<32,29>(tmp_7_fu_505_p4.read());
}

void ddr_to_axis_reader_SD::thread_tmp_9_fu_603_p1() {
    tmp_9_fu_603_p1 = esl_zext<32,29>(tmp_2_fu_593_p4.read());
}

void ddr_to_axis_reader_SD::thread_tmp_fu_1082_p3() {
    tmp_fu_1082_p3 = j1_reg_430.read().range(12, 12);
}

void ddr_to_axis_reader_SD::thread_tmp_s_fu_587_p0() {
    tmp_s_fu_587_p0 = inner_index.read();
}

void ddr_to_axis_reader_SD::thread_tmp_s_fu_587_p2() {
    tmp_s_fu_587_p2 = (!tmp_s_fu_587_p0.read().is_01() || !frame_buffer_offset_s_fu_571_p3.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_s_fu_587_p0.read()) * sc_bigint<32>(frame_buffer_offset_s_fu_571_p3.read());
}

void ddr_to_axis_reader_SD::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || esl_seteq<1,1,1>(outStream_channel_1_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(outstream_channel_2_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond1_fu_647_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond_fu_692_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) && !(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(exitcond_fu_692_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(stereo_enabler_read_reg_1363.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && esl_seteq<1,1,1>(tmp_6_fu_709_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1)) && !(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(tmp_6_fu_709_p3.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 4096 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && esl_seteq<1,1,1>(tmp_fu_1082_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) && !(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(tmp_fu_1082_p3.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

void ddr_to_axis_reader_SD::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"outStream_channel_1_V_TDATA\" :  \"" << outStream_channel_1_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_channel_1_V_TVALID\" :  \"" << outStream_channel_1_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_channel_1_V_TREADY\" :  \"" << outStream_channel_1_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outstream_channel_2_V_TDATA\" :  \"" << outstream_channel_2_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outstream_channel_2_V_TVALID\" :  \"" << outstream_channel_2_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outstream_channel_2_V_TREADY\" :  \"" << outstream_channel_2_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWVALID\" :  \"" << m_axi_base_ddr_addr_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_AWREADY\" :  \"" << m_axi_base_ddr_addr_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWADDR\" :  \"" << m_axi_base_ddr_addr_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWID\" :  \"" << m_axi_base_ddr_addr_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWLEN\" :  \"" << m_axi_base_ddr_addr_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWSIZE\" :  \"" << m_axi_base_ddr_addr_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWBURST\" :  \"" << m_axi_base_ddr_addr_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWLOCK\" :  \"" << m_axi_base_ddr_addr_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWCACHE\" :  \"" << m_axi_base_ddr_addr_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWPROT\" :  \"" << m_axi_base_ddr_addr_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWQOS\" :  \"" << m_axi_base_ddr_addr_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWREGION\" :  \"" << m_axi_base_ddr_addr_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_AWUSER\" :  \"" << m_axi_base_ddr_addr_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WVALID\" :  \"" << m_axi_base_ddr_addr_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_WREADY\" :  \"" << m_axi_base_ddr_addr_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WDATA\" :  \"" << m_axi_base_ddr_addr_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WSTRB\" :  \"" << m_axi_base_ddr_addr_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WLAST\" :  \"" << m_axi_base_ddr_addr_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WID\" :  \"" << m_axi_base_ddr_addr_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_WUSER\" :  \"" << m_axi_base_ddr_addr_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARVALID\" :  \"" << m_axi_base_ddr_addr_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_ARREADY\" :  \"" << m_axi_base_ddr_addr_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARADDR\" :  \"" << m_axi_base_ddr_addr_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARID\" :  \"" << m_axi_base_ddr_addr_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARLEN\" :  \"" << m_axi_base_ddr_addr_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARSIZE\" :  \"" << m_axi_base_ddr_addr_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARBURST\" :  \"" << m_axi_base_ddr_addr_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARLOCK\" :  \"" << m_axi_base_ddr_addr_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARCACHE\" :  \"" << m_axi_base_ddr_addr_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARPROT\" :  \"" << m_axi_base_ddr_addr_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARQOS\" :  \"" << m_axi_base_ddr_addr_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARREGION\" :  \"" << m_axi_base_ddr_addr_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_ARUSER\" :  \"" << m_axi_base_ddr_addr_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RVALID\" :  \"" << m_axi_base_ddr_addr_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_RREADY\" :  \"" << m_axi_base_ddr_addr_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RDATA\" :  \"" << m_axi_base_ddr_addr_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RLAST\" :  \"" << m_axi_base_ddr_addr_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RID\" :  \"" << m_axi_base_ddr_addr_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RUSER\" :  \"" << m_axi_base_ddr_addr_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_RRESP\" :  \"" << m_axi_base_ddr_addr_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BVALID\" :  \"" << m_axi_base_ddr_addr_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_base_ddr_addr_BREADY\" :  \"" << m_axi_base_ddr_addr_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BRESP\" :  \"" << m_axi_base_ddr_addr_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BID\" :  \"" << m_axi_base_ddr_addr_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_base_ddr_addr_BUSER\" :  \"" << m_axi_base_ddr_addr_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

